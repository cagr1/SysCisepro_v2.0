'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetOrdenCompra"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetOrdenCompra
    Inherits Global.System.Data.DataSet
    
    Private tableORDEN_COMPRA As ORDEN_COMPRADataTable
    
    Private tablePROVEEDOR_GENERAL As PROVEEDOR_GENERALDataTable
    
    Private tableDETALLE_ORDEN_COMPRA As DETALLE_ORDEN_COMPRADataTable
    
    Private tableCIUDADES As CIUDADESDataTable
    
    Private tableSECUENCIAL_ITEM As SECUENCIAL_ITEMDataTable
    
    Private relationFK_ORDEN_COMPRA_PROVEEDOR_GENERAL As Global.System.Data.DataRelation
    
    Private relationFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA As Global.System.Data.DataRelation
    
    Private relationFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM As Global.System.Data.DataRelation
    
    Private relationCIUDADES_PROVEEDOR_GENERAL As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ORDEN_COMPRA")) Is Nothing) Then
                MyBase.Tables.Add(New ORDEN_COMPRADataTable(ds.Tables("ORDEN_COMPRA")))
            End If
            If (Not (ds.Tables("PROVEEDOR_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New PROVEEDOR_GENERALDataTable(ds.Tables("PROVEEDOR_GENERAL")))
            End If
            If (Not (ds.Tables("DETALLE_ORDEN_COMPRA")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLE_ORDEN_COMPRADataTable(ds.Tables("DETALLE_ORDEN_COMPRA")))
            End If
            If (Not (ds.Tables("CIUDADES")) Is Nothing) Then
                MyBase.Tables.Add(New CIUDADESDataTable(ds.Tables("CIUDADES")))
            End If
            If (Not (ds.Tables("SECUENCIAL_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New SECUENCIAL_ITEMDataTable(ds.Tables("SECUENCIAL_ITEM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ORDEN_COMPRA() As ORDEN_COMPRADataTable
        Get
            Return Me.tableORDEN_COMPRA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROVEEDOR_GENERAL() As PROVEEDOR_GENERALDataTable
        Get
            Return Me.tablePROVEEDOR_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DETALLE_ORDEN_COMPRA() As DETALLE_ORDEN_COMPRADataTable
        Get
            Return Me.tableDETALLE_ORDEN_COMPRA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CIUDADES() As CIUDADESDataTable
        Get
            Return Me.tableCIUDADES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SECUENCIAL_ITEM() As SECUENCIAL_ITEMDataTable
        Get
            Return Me.tableSECUENCIAL_ITEM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetOrdenCompra = CType(MyBase.Clone,DataSetOrdenCompra)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ORDEN_COMPRA")) Is Nothing) Then
                MyBase.Tables.Add(New ORDEN_COMPRADataTable(ds.Tables("ORDEN_COMPRA")))
            End If
            If (Not (ds.Tables("PROVEEDOR_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New PROVEEDOR_GENERALDataTable(ds.Tables("PROVEEDOR_GENERAL")))
            End If
            If (Not (ds.Tables("DETALLE_ORDEN_COMPRA")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLE_ORDEN_COMPRADataTable(ds.Tables("DETALLE_ORDEN_COMPRA")))
            End If
            If (Not (ds.Tables("CIUDADES")) Is Nothing) Then
                MyBase.Tables.Add(New CIUDADESDataTable(ds.Tables("CIUDADES")))
            End If
            If (Not (ds.Tables("SECUENCIAL_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New SECUENCIAL_ITEMDataTable(ds.Tables("SECUENCIAL_ITEM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableORDEN_COMPRA = CType(MyBase.Tables("ORDEN_COMPRA"),ORDEN_COMPRADataTable)
        If (initTable = true) Then
            If (Not (Me.tableORDEN_COMPRA) Is Nothing) Then
                Me.tableORDEN_COMPRA.InitVars
            End If
        End If
        Me.tablePROVEEDOR_GENERAL = CType(MyBase.Tables("PROVEEDOR_GENERAL"),PROVEEDOR_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROVEEDOR_GENERAL) Is Nothing) Then
                Me.tablePROVEEDOR_GENERAL.InitVars
            End If
        End If
        Me.tableDETALLE_ORDEN_COMPRA = CType(MyBase.Tables("DETALLE_ORDEN_COMPRA"),DETALLE_ORDEN_COMPRADataTable)
        If (initTable = true) Then
            If (Not (Me.tableDETALLE_ORDEN_COMPRA) Is Nothing) Then
                Me.tableDETALLE_ORDEN_COMPRA.InitVars
            End If
        End If
        Me.tableCIUDADES = CType(MyBase.Tables("CIUDADES"),CIUDADESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCIUDADES) Is Nothing) Then
                Me.tableCIUDADES.InitVars
            End If
        End If
        Me.tableSECUENCIAL_ITEM = CType(MyBase.Tables("SECUENCIAL_ITEM"),SECUENCIAL_ITEMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSECUENCIAL_ITEM) Is Nothing) Then
                Me.tableSECUENCIAL_ITEM.InitVars
            End If
        End If
        Me.relationFK_ORDEN_COMPRA_PROVEEDOR_GENERAL = Me.Relations("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL")
        Me.relationFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA = Me.Relations("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA")
        Me.relationFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM = Me.Relations("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM")
        Me.relationCIUDADES_PROVEEDOR_GENERAL = Me.Relations("CIUDADES_PROVEEDOR_GENERAL")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetOrdenCompra"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetOrdenCompra.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableORDEN_COMPRA = New ORDEN_COMPRADataTable()
        MyBase.Tables.Add(Me.tableORDEN_COMPRA)
        Me.tablePROVEEDOR_GENERAL = New PROVEEDOR_GENERALDataTable()
        MyBase.Tables.Add(Me.tablePROVEEDOR_GENERAL)
        Me.tableDETALLE_ORDEN_COMPRA = New DETALLE_ORDEN_COMPRADataTable()
        MyBase.Tables.Add(Me.tableDETALLE_ORDEN_COMPRA)
        Me.tableCIUDADES = New CIUDADESDataTable()
        MyBase.Tables.Add(Me.tableCIUDADES)
        Me.tableSECUENCIAL_ITEM = New SECUENCIAL_ITEMDataTable()
        MyBase.Tables.Add(Me.tableSECUENCIAL_ITEM)
        Me.relationFK_ORDEN_COMPRA_PROVEEDOR_GENERAL = New Global.System.Data.DataRelation("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL", New Global.System.Data.DataColumn() {Me.tablePROVEEDOR_GENERAL.ID_PROVEEDOR_GENERALColumn}, New Global.System.Data.DataColumn() {Me.tableORDEN_COMPRA.ID_PROVEEDOR_GENERALColumn}, false)
        Me.Relations.Add(Me.relationFK_ORDEN_COMPRA_PROVEEDOR_GENERAL)
        Me.relationFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA = New Global.System.Data.DataRelation("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA", New Global.System.Data.DataColumn() {Me.tableORDEN_COMPRA.ID_ORDEN_COMPRAColumn}, New Global.System.Data.DataColumn() {Me.tableDETALLE_ORDEN_COMPRA.ID_ORDEN_COMPRAColumn}, false)
        Me.Relations.Add(Me.relationFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA)
        Me.relationFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM = New Global.System.Data.DataRelation("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM", New Global.System.Data.DataColumn() {Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn}, New Global.System.Data.DataColumn() {Me.tableDETALLE_ORDEN_COMPRA.ID_SECUENCIAL_ITEMColumn}, false)
        Me.Relations.Add(Me.relationFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM)
        Me.relationCIUDADES_PROVEEDOR_GENERAL = New Global.System.Data.DataRelation("CIUDADES_PROVEEDOR_GENERAL", New Global.System.Data.DataColumn() {Me.tableCIUDADES.ID_CIUDADColumn}, New Global.System.Data.DataColumn() {Me.tablePROVEEDOR_GENERAL.ID_CIUDADColumn}, false)
        Me.Relations.Add(Me.relationCIUDADES_PROVEEDOR_GENERAL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeORDEN_COMPRA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePROVEEDOR_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeDETALLE_ORDEN_COMPRA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCIUDADES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSECUENCIAL_ITEM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ORDEN_COMPRARowChangeEventHandler(ByVal sender As Object, ByVal e As ORDEN_COMPRARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PROVEEDOR_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As PROVEEDOR_GENERALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub DETALLE_ORDEN_COMPRARowChangeEventHandler(ByVal sender As Object, ByVal e As DETALLE_ORDEN_COMPRARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CIUDADESRowChangeEventHandler(ByVal sender As Object, ByVal e As CIUDADESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub SECUENCIAL_ITEMRowChangeEventHandler(ByVal sender As Object, ByVal e As SECUENCIAL_ITEMRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ORDEN_COMPRADataTable
        Inherits Global.System.Data.TypedTableBase(Of ORDEN_COMPRARow)
        
        Private columnID_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnFECHA_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnID_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnFORMA_PAGO_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnTIPO_PAGO_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_12_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_0_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnIVA_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnTOTAL_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnESTADO_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ORDEN_COMPRA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FORMA_PAGO_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFORMA_PAGO_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_PAGO_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_PAGO_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONES_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_12_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_12_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_0_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_0_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCUENTO_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IVA_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOTAL_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ORDEN_COMPRARow
            Get
                Return CType(Me.Rows(index),ORDEN_COMPRARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ORDEN_COMPRARowChanging As ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ORDEN_COMPRARowChanged As ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ORDEN_COMPRARowDeleting As ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ORDEN_COMPRARowDeleted As ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddORDEN_COMPRARow(ByVal row As ORDEN_COMPRARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddORDEN_COMPRARow(ByVal ID_ORDEN_COMPRA As Long, ByVal FECHA_ORDEN_COMPRA As Date, ByVal parentPROVEEDOR_GENERALRowByFK_ORDEN_COMPRA_PROVEEDOR_GENERAL As PROVEEDOR_GENERALRow, ByVal FORMA_PAGO_ORDEN_COMPRA As String, ByVal TIPO_PAGO_ORDEN_COMPRA As String, ByVal OBSERVACIONES_ORDEN_COMPRA As String, ByVal SUBTOTAL_12_ORDEN_COMPRA As Decimal, ByVal SUBTOTAL_0_ORDEN_COMPRA As Decimal, ByVal DESCUENTO_ORDEN_COMPRA As Decimal, ByVal IVA_ORDEN_COMPRA As Decimal, ByVal TOTAL_ORDEN_COMPRA As Decimal, ByVal ESTADO_ORDEN_COMPRA As Integer) As ORDEN_COMPRARow
            Dim rowORDEN_COMPRARow As ORDEN_COMPRARow = CType(Me.NewRow,ORDEN_COMPRARow)
            Dim columnValuesArray() As Object = New Object() {ID_ORDEN_COMPRA, FECHA_ORDEN_COMPRA, Nothing, FORMA_PAGO_ORDEN_COMPRA, TIPO_PAGO_ORDEN_COMPRA, OBSERVACIONES_ORDEN_COMPRA, SUBTOTAL_12_ORDEN_COMPRA, SUBTOTAL_0_ORDEN_COMPRA, DESCUENTO_ORDEN_COMPRA, IVA_ORDEN_COMPRA, TOTAL_ORDEN_COMPRA, ESTADO_ORDEN_COMPRA}
            If (Not (parentPROVEEDOR_GENERALRowByFK_ORDEN_COMPRA_PROVEEDOR_GENERAL) Is Nothing) Then
                columnValuesArray(2) = parentPROVEEDOR_GENERALRowByFK_ORDEN_COMPRA_PROVEEDOR_GENERAL(0)
            End If
            rowORDEN_COMPRARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowORDEN_COMPRARow)
            Return rowORDEN_COMPRARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_ORDEN_COMPRA(ByVal ID_ORDEN_COMPRA As Long) As ORDEN_COMPRARow
            Return CType(Me.Rows.Find(New Object() {ID_ORDEN_COMPRA}),ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ORDEN_COMPRADataTable = CType(MyBase.Clone,ORDEN_COMPRADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ORDEN_COMPRADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_ORDEN_COMPRA = MyBase.Columns("ID_ORDEN_COMPRA")
            Me.columnFECHA_ORDEN_COMPRA = MyBase.Columns("FECHA_ORDEN_COMPRA")
            Me.columnID_PROVEEDOR_GENERAL = MyBase.Columns("ID_PROVEEDOR_GENERAL")
            Me.columnFORMA_PAGO_ORDEN_COMPRA = MyBase.Columns("FORMA_PAGO_ORDEN_COMPRA")
            Me.columnTIPO_PAGO_ORDEN_COMPRA = MyBase.Columns("TIPO_PAGO_ORDEN_COMPRA")
            Me.columnOBSERVACIONES_ORDEN_COMPRA = MyBase.Columns("OBSERVACIONES_ORDEN_COMPRA")
            Me.columnSUBTOTAL_12_ORDEN_COMPRA = MyBase.Columns("SUBTOTAL_12_ORDEN_COMPRA")
            Me.columnSUBTOTAL_0_ORDEN_COMPRA = MyBase.Columns("SUBTOTAL_0_ORDEN_COMPRA")
            Me.columnDESCUENTO_ORDEN_COMPRA = MyBase.Columns("DESCUENTO_ORDEN_COMPRA")
            Me.columnIVA_ORDEN_COMPRA = MyBase.Columns("IVA_ORDEN_COMPRA")
            Me.columnTOTAL_ORDEN_COMPRA = MyBase.Columns("TOTAL_ORDEN_COMPRA")
            Me.columnESTADO_ORDEN_COMPRA = MyBase.Columns("ESTADO_ORDEN_COMPRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_ORDEN_COMPRA = New Global.System.Data.DataColumn("ID_ORDEN_COMPRA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ORDEN_COMPRA)
            Me.columnFECHA_ORDEN_COMPRA = New Global.System.Data.DataColumn("FECHA_ORDEN_COMPRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ORDEN_COMPRA)
            Me.columnID_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("ID_PROVEEDOR_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVEEDOR_GENERAL)
            Me.columnFORMA_PAGO_ORDEN_COMPRA = New Global.System.Data.DataColumn("FORMA_PAGO_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFORMA_PAGO_ORDEN_COMPRA)
            Me.columnTIPO_PAGO_ORDEN_COMPRA = New Global.System.Data.DataColumn("TIPO_PAGO_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_PAGO_ORDEN_COMPRA)
            Me.columnOBSERVACIONES_ORDEN_COMPRA = New Global.System.Data.DataColumn("OBSERVACIONES_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES_ORDEN_COMPRA)
            Me.columnSUBTOTAL_12_ORDEN_COMPRA = New Global.System.Data.DataColumn("SUBTOTAL_12_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_12_ORDEN_COMPRA)
            Me.columnSUBTOTAL_0_ORDEN_COMPRA = New Global.System.Data.DataColumn("SUBTOTAL_0_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_0_ORDEN_COMPRA)
            Me.columnDESCUENTO_ORDEN_COMPRA = New Global.System.Data.DataColumn("DESCUENTO_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_ORDEN_COMPRA)
            Me.columnIVA_ORDEN_COMPRA = New Global.System.Data.DataColumn("IVA_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA_ORDEN_COMPRA)
            Me.columnTOTAL_ORDEN_COMPRA = New Global.System.Data.DataColumn("TOTAL_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_ORDEN_COMPRA)
            Me.columnESTADO_ORDEN_COMPRA = New Global.System.Data.DataColumn("ESTADO_ORDEN_COMPRA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_ORDEN_COMPRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_ORDEN_COMPRA}, true))
            Me.columnID_ORDEN_COMPRA.AllowDBNull = false
            Me.columnID_ORDEN_COMPRA.Unique = true
            Me.columnFECHA_ORDEN_COMPRA.AllowDBNull = false
            Me.columnID_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnFORMA_PAGO_ORDEN_COMPRA.AllowDBNull = false
            Me.columnFORMA_PAGO_ORDEN_COMPRA.MaxLength = 50
            Me.columnTIPO_PAGO_ORDEN_COMPRA.AllowDBNull = false
            Me.columnTIPO_PAGO_ORDEN_COMPRA.MaxLength = 50
            Me.columnOBSERVACIONES_ORDEN_COMPRA.AllowDBNull = false
            Me.columnOBSERVACIONES_ORDEN_COMPRA.MaxLength = 2147483647
            Me.columnSUBTOTAL_12_ORDEN_COMPRA.AllowDBNull = false
            Me.columnSUBTOTAL_0_ORDEN_COMPRA.AllowDBNull = false
            Me.columnDESCUENTO_ORDEN_COMPRA.AllowDBNull = false
            Me.columnIVA_ORDEN_COMPRA.AllowDBNull = false
            Me.columnTOTAL_ORDEN_COMPRA.AllowDBNull = false
            Me.columnESTADO_ORDEN_COMPRA.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewORDEN_COMPRARow() As ORDEN_COMPRARow
            Return CType(Me.NewRow,ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ORDEN_COMPRARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ORDEN_COMPRARowChangedEvent) Is Nothing) Then
                RaiseEvent ORDEN_COMPRARowChanged(Me, New ORDEN_COMPRARowChangeEvent(CType(e.Row,ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ORDEN_COMPRARowChangingEvent) Is Nothing) Then
                RaiseEvent ORDEN_COMPRARowChanging(Me, New ORDEN_COMPRARowChangeEvent(CType(e.Row,ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ORDEN_COMPRARowDeletedEvent) Is Nothing) Then
                RaiseEvent ORDEN_COMPRARowDeleted(Me, New ORDEN_COMPRARowChangeEvent(CType(e.Row,ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ORDEN_COMPRARowDeletingEvent) Is Nothing) Then
                RaiseEvent ORDEN_COMPRARowDeleting(Me, New ORDEN_COMPRARowChangeEvent(CType(e.Row,ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveORDEN_COMPRARow(ByVal row As ORDEN_COMPRARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ORDEN_COMPRADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROVEEDOR_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROVEEDOR_GENERALRow)
        
        Private columnID_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnFECHA_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnRUC_CI_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIAL_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONTABILIDAD_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnDIRECCION_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnTELEFONO_1_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_2_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnEMAIL_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        Private columnESTADO_PROVEEDOR_GENERAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROVEEDOR_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RUC_CI_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CI_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RAZON_SOCIAL_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_COMERCIAL_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTABILIDAD_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTABILIDAD_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_1_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_1_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_2_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_2_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAIL_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_PROVEEDOR_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_PROVEEDOR_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROVEEDOR_GENERALRow
            Get
                Return CType(Me.Rows(index),PROVEEDOR_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVEEDOR_GENERALRowChanging As PROVEEDOR_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVEEDOR_GENERALRowChanged As PROVEEDOR_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVEEDOR_GENERALRowDeleting As PROVEEDOR_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVEEDOR_GENERALRowDeleted As PROVEEDOR_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPROVEEDOR_GENERALRow(ByVal row As PROVEEDOR_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPROVEEDOR_GENERALRow(ByVal ID_PROVEEDOR_GENERAL As Integer, ByVal FECHA_PROVEEDOR_GENERAL As Date, ByVal RUC_CI_PROVEEDOR_GENERAL As String, ByVal RAZON_SOCIAL_PROVEEDOR_GENERAL As String, ByVal NOMBRE_COMERCIAL_PROVEEDOR_GENERAL As String, ByVal TIPO_PROVEEDOR_GENERAL As String, ByVal CONTABILIDAD_PROVEEDOR_GENERAL As String, ByVal CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String, ByVal DIRECCION_PROVEEDOR_GENERAL As String, ByVal parentCIUDADESRowByCIUDADES_PROVEEDOR_GENERAL As CIUDADESRow, ByVal TELEFONO_1_PROVEEDOR_GENERAL As String, ByVal TELEFONO_2_PROVEEDOR_GENERAL As String, ByVal EMAIL_PROVEEDOR_GENERAL As String, ByVal ESTADO_PROVEEDOR_GENERAL As Integer) As PROVEEDOR_GENERALRow
            Dim rowPROVEEDOR_GENERALRow As PROVEEDOR_GENERALRow = CType(Me.NewRow,PROVEEDOR_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {ID_PROVEEDOR_GENERAL, FECHA_PROVEEDOR_GENERAL, RUC_CI_PROVEEDOR_GENERAL, RAZON_SOCIAL_PROVEEDOR_GENERAL, NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, TIPO_PROVEEDOR_GENERAL, CONTABILIDAD_PROVEEDOR_GENERAL, CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, DIRECCION_PROVEEDOR_GENERAL, Nothing, TELEFONO_1_PROVEEDOR_GENERAL, TELEFONO_2_PROVEEDOR_GENERAL, EMAIL_PROVEEDOR_GENERAL, ESTADO_PROVEEDOR_GENERAL}
            If (Not (parentCIUDADESRowByCIUDADES_PROVEEDOR_GENERAL) Is Nothing) Then
                columnValuesArray(9) = parentCIUDADESRowByCIUDADES_PROVEEDOR_GENERAL(0)
            End If
            rowPROVEEDOR_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROVEEDOR_GENERALRow)
            Return rowPROVEEDOR_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_PROVEEDOR_GENERAL(ByVal ID_PROVEEDOR_GENERAL As Integer) As PROVEEDOR_GENERALRow
            Return CType(Me.Rows.Find(New Object() {ID_PROVEEDOR_GENERAL}),PROVEEDOR_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROVEEDOR_GENERALDataTable = CType(MyBase.Clone,PROVEEDOR_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROVEEDOR_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_PROVEEDOR_GENERAL = MyBase.Columns("ID_PROVEEDOR_GENERAL")
            Me.columnFECHA_PROVEEDOR_GENERAL = MyBase.Columns("FECHA_PROVEEDOR_GENERAL")
            Me.columnRUC_CI_PROVEEDOR_GENERAL = MyBase.Columns("RUC_CI_PROVEEDOR_GENERAL")
            Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL = MyBase.Columns("RAZON_SOCIAL_PROVEEDOR_GENERAL")
            Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL = MyBase.Columns("NOMBRE_COMERCIAL_PROVEEDOR_GENERAL")
            Me.columnTIPO_PROVEEDOR_GENERAL = MyBase.Columns("TIPO_PROVEEDOR_GENERAL")
            Me.columnCONTABILIDAD_PROVEEDOR_GENERAL = MyBase.Columns("CONTABILIDAD_PROVEEDOR_GENERAL")
            Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL = MyBase.Columns("CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            Me.columnDIRECCION_PROVEEDOR_GENERAL = MyBase.Columns("DIRECCION_PROVEEDOR_GENERAL")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnTELEFONO_1_PROVEEDOR_GENERAL = MyBase.Columns("TELEFONO_1_PROVEEDOR_GENERAL")
            Me.columnTELEFONO_2_PROVEEDOR_GENERAL = MyBase.Columns("TELEFONO_2_PROVEEDOR_GENERAL")
            Me.columnEMAIL_PROVEEDOR_GENERAL = MyBase.Columns("EMAIL_PROVEEDOR_GENERAL")
            Me.columnESTADO_PROVEEDOR_GENERAL = MyBase.Columns("ESTADO_PROVEEDOR_GENERAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("ID_PROVEEDOR_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVEEDOR_GENERAL)
            Me.columnFECHA_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("FECHA_PROVEEDOR_GENERAL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_PROVEEDOR_GENERAL)
            Me.columnRUC_CI_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("RUC_CI_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CI_PROVEEDOR_GENERAL)
            Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("RAZON_SOCIAL_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL)
            Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL)
            Me.columnTIPO_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("TIPO_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_PROVEEDOR_GENERAL)
            Me.columnCONTABILIDAD_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("CONTABILIDAD_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTABILIDAD_PROVEEDOR_GENERAL)
            Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL)
            Me.columnDIRECCION_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("DIRECCION_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_PROVEEDOR_GENERAL)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnTELEFONO_1_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("TELEFONO_1_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_1_PROVEEDOR_GENERAL)
            Me.columnTELEFONO_2_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("TELEFONO_2_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_2_PROVEEDOR_GENERAL)
            Me.columnEMAIL_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("EMAIL_PROVEEDOR_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_PROVEEDOR_GENERAL)
            Me.columnESTADO_PROVEEDOR_GENERAL = New Global.System.Data.DataColumn("ESTADO_PROVEEDOR_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_PROVEEDOR_GENERAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_PROVEEDOR_GENERAL}, true))
            Me.columnID_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnID_PROVEEDOR_GENERAL.Unique = true
            Me.columnFECHA_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnRUC_CI_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnRUC_CI_PROVEEDOR_GENERAL.MaxLength = 13
            Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnRAZON_SOCIAL_PROVEEDOR_GENERAL.MaxLength = 2147483647
            Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnNOMBRE_COMERCIAL_PROVEEDOR_GENERAL.MaxLength = 2147483647
            Me.columnTIPO_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnTIPO_PROVEEDOR_GENERAL.MaxLength = 50
            Me.columnCONTABILIDAD_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnCONTABILIDAD_PROVEEDOR_GENERAL.MaxLength = 5
            Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnCONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL.MaxLength = 5
            Me.columnDIRECCION_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnDIRECCION_PROVEEDOR_GENERAL.MaxLength = 2147483647
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnTELEFONO_1_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnTELEFONO_1_PROVEEDOR_GENERAL.MaxLength = 25
            Me.columnTELEFONO_2_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnTELEFONO_2_PROVEEDOR_GENERAL.MaxLength = 25
            Me.columnEMAIL_PROVEEDOR_GENERAL.AllowDBNull = false
            Me.columnEMAIL_PROVEEDOR_GENERAL.MaxLength = 50
            Me.columnESTADO_PROVEEDOR_GENERAL.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPROVEEDOR_GENERALRow() As PROVEEDOR_GENERALRow
            Return CType(Me.NewRow,PROVEEDOR_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROVEEDOR_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROVEEDOR_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROVEEDOR_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent PROVEEDOR_GENERALRowChanged(Me, New PROVEEDOR_GENERALRowChangeEvent(CType(e.Row,PROVEEDOR_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROVEEDOR_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent PROVEEDOR_GENERALRowChanging(Me, New PROVEEDOR_GENERALRowChangeEvent(CType(e.Row,PROVEEDOR_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROVEEDOR_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROVEEDOR_GENERALRowDeleted(Me, New PROVEEDOR_GENERALRowChangeEvent(CType(e.Row,PROVEEDOR_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROVEEDOR_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROVEEDOR_GENERALRowDeleting(Me, New PROVEEDOR_GENERALRowChangeEvent(CType(e.Row,PROVEEDOR_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePROVEEDOR_GENERALRow(ByVal row As PROVEEDOR_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROVEEDOR_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DETALLE_ORDEN_COMPRADataTable
        Inherits Global.System.Data.TypedTableBase(Of DETALLE_ORDEN_COMPRARow)
        
        Private columnID_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnID_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnUMEDIDA_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnVALORU_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnVALORT_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnESTADO_DETALLE_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnID_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DETALLE_ORDEN_COMPRA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UMEDIDA_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALORU_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALORU_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALORT_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALORT_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_DETALLE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_DETALLE_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DETALLE_ORDEN_COMPRARow
            Get
                Return CType(Me.Rows(index),DETALLE_ORDEN_COMPRARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_ORDEN_COMPRARowChanging As DETALLE_ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_ORDEN_COMPRARowChanged As DETALLE_ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_ORDEN_COMPRARowDeleting As DETALLE_ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_ORDEN_COMPRARowDeleted As DETALLE_ORDEN_COMPRARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddDETALLE_ORDEN_COMPRARow(ByVal row As DETALLE_ORDEN_COMPRARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddDETALLE_ORDEN_COMPRARow(ByVal ID_DETALLE_ORDEN_COMPRA As Long, ByVal parentSECUENCIAL_ITEMRowByFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM As SECUENCIAL_ITEMRow, ByVal UMEDIDA_DETALLE_ORDEN_COMPRA As String, ByVal CANTIDAD_DETALLE_ORDEN_COMPRA As Integer, ByVal VALORU_DETALLE_ORDEN_COMPRA As Decimal, ByVal VALORT_DETALLE_ORDEN_COMPRA As Decimal, ByVal ESTADO_DETALLE_ORDEN_COMPRA As String, ByVal parentORDEN_COMPRARowByFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA As ORDEN_COMPRARow) As DETALLE_ORDEN_COMPRARow
            Dim rowDETALLE_ORDEN_COMPRARow As DETALLE_ORDEN_COMPRARow = CType(Me.NewRow,DETALLE_ORDEN_COMPRARow)
            Dim columnValuesArray() As Object = New Object() {ID_DETALLE_ORDEN_COMPRA, Nothing, UMEDIDA_DETALLE_ORDEN_COMPRA, CANTIDAD_DETALLE_ORDEN_COMPRA, VALORU_DETALLE_ORDEN_COMPRA, VALORT_DETALLE_ORDEN_COMPRA, ESTADO_DETALLE_ORDEN_COMPRA, Nothing}
            If (Not (parentSECUENCIAL_ITEMRowByFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM) Is Nothing) Then
                columnValuesArray(1) = parentSECUENCIAL_ITEMRowByFK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM(0)
            End If
            If (Not (parentORDEN_COMPRARowByFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA) Is Nothing) Then
                columnValuesArray(7) = parentORDEN_COMPRARowByFK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA(0)
            End If
            rowDETALLE_ORDEN_COMPRARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDETALLE_ORDEN_COMPRARow)
            Return rowDETALLE_ORDEN_COMPRARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_DETALLE_ORDEN_COMPRA(ByVal ID_DETALLE_ORDEN_COMPRA As Long) As DETALLE_ORDEN_COMPRARow
            Return CType(Me.Rows.Find(New Object() {ID_DETALLE_ORDEN_COMPRA}),DETALLE_ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DETALLE_ORDEN_COMPRADataTable = CType(MyBase.Clone,DETALLE_ORDEN_COMPRADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DETALLE_ORDEN_COMPRADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_DETALLE_ORDEN_COMPRA = MyBase.Columns("ID_DETALLE_ORDEN_COMPRA")
            Me.columnID_SECUENCIAL_ITEM = MyBase.Columns("ID_SECUENCIAL_ITEM")
            Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA = MyBase.Columns("UMEDIDA_DETALLE_ORDEN_COMPRA")
            Me.columnCANTIDAD_DETALLE_ORDEN_COMPRA = MyBase.Columns("CANTIDAD_DETALLE_ORDEN_COMPRA")
            Me.columnVALORU_DETALLE_ORDEN_COMPRA = MyBase.Columns("VALORU_DETALLE_ORDEN_COMPRA")
            Me.columnVALORT_DETALLE_ORDEN_COMPRA = MyBase.Columns("VALORT_DETALLE_ORDEN_COMPRA")
            Me.columnESTADO_DETALLE_ORDEN_COMPRA = MyBase.Columns("ESTADO_DETALLE_ORDEN_COMPRA")
            Me.columnID_ORDEN_COMPRA = MyBase.Columns("ID_ORDEN_COMPRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("ID_DETALLE_ORDEN_COMPRA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_DETALLE_ORDEN_COMPRA)
            Me.columnID_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ID_SECUENCIAL_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SECUENCIAL_ITEM)
            Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("UMEDIDA_DETALLE_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA)
            Me.columnCANTIDAD_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("CANTIDAD_DETALLE_ORDEN_COMPRA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_DETALLE_ORDEN_COMPRA)
            Me.columnVALORU_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("VALORU_DETALLE_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALORU_DETALLE_ORDEN_COMPRA)
            Me.columnVALORT_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("VALORT_DETALLE_ORDEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALORT_DETALLE_ORDEN_COMPRA)
            Me.columnESTADO_DETALLE_ORDEN_COMPRA = New Global.System.Data.DataColumn("ESTADO_DETALLE_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_DETALLE_ORDEN_COMPRA)
            Me.columnID_ORDEN_COMPRA = New Global.System.Data.DataColumn("ID_ORDEN_COMPRA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ORDEN_COMPRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_DETALLE_ORDEN_COMPRA}, true))
            Me.columnID_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnID_DETALLE_ORDEN_COMPRA.Unique = true
            Me.columnID_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnUMEDIDA_DETALLE_ORDEN_COMPRA.MaxLength = 50
            Me.columnCANTIDAD_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnVALORU_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnVALORT_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnESTADO_DETALLE_ORDEN_COMPRA.AllowDBNull = false
            Me.columnESTADO_DETALLE_ORDEN_COMPRA.MaxLength = 10
            Me.columnID_ORDEN_COMPRA.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewDETALLE_ORDEN_COMPRARow() As DETALLE_ORDEN_COMPRARow
            Return CType(Me.NewRow,DETALLE_ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DETALLE_ORDEN_COMPRARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DETALLE_ORDEN_COMPRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DETALLE_ORDEN_COMPRARowChangedEvent) Is Nothing) Then
                RaiseEvent DETALLE_ORDEN_COMPRARowChanged(Me, New DETALLE_ORDEN_COMPRARowChangeEvent(CType(e.Row,DETALLE_ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DETALLE_ORDEN_COMPRARowChangingEvent) Is Nothing) Then
                RaiseEvent DETALLE_ORDEN_COMPRARowChanging(Me, New DETALLE_ORDEN_COMPRARowChangeEvent(CType(e.Row,DETALLE_ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DETALLE_ORDEN_COMPRARowDeletedEvent) Is Nothing) Then
                RaiseEvent DETALLE_ORDEN_COMPRARowDeleted(Me, New DETALLE_ORDEN_COMPRARowChangeEvent(CType(e.Row,DETALLE_ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DETALLE_ORDEN_COMPRARowDeletingEvent) Is Nothing) Then
                RaiseEvent DETALLE_ORDEN_COMPRARowDeleting(Me, New DETALLE_ORDEN_COMPRARowChangeEvent(CType(e.Row,DETALLE_ORDEN_COMPRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveDETALLE_ORDEN_COMPRARow(ByVal row As DETALLE_ORDEN_COMPRARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DETALLE_ORDEN_COMPRADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CIUDADESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CIUDADESRow)
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CIUDADES As Global.System.Data.DataColumn
        
        Private columnESTADO_CIUDADES As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIAS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CIUDADES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_CIUDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CIUDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CIUDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CIUDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CIUDADESRow
            Get
                Return CType(Me.Rows(index),CIUDADESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowChanging As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowChanged As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowDeleting As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowDeleted As CIUDADESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCIUDADESRow(ByVal row As CIUDADESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCIUDADESRow(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer) As CIUDADESRow
            Dim rowCIUDADESRow As CIUDADESRow = CType(Me.NewRow,CIUDADESRow)
            Dim columnValuesArray() As Object = New Object() {ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS}
            rowCIUDADESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCIUDADESRow)
            Return rowCIUDADESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CIUDAD(ByVal ID_CIUDAD As Integer) As CIUDADESRow
            Return CType(Me.Rows.Find(New Object() {ID_CIUDAD}),CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CIUDADESDataTable = CType(MyBase.Clone,CIUDADESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CIUDADESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnNOMBRE_CIUDADES = MyBase.Columns("NOMBRE_CIUDADES")
            Me.columnESTADO_CIUDADES = MyBase.Columns("ESTADO_CIUDADES")
            Me.columnID_PROVINCIAS = MyBase.Columns("ID_PROVINCIAS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnNOMBRE_CIUDADES = New Global.System.Data.DataColumn("NOMBRE_CIUDADES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CIUDADES)
            Me.columnESTADO_CIUDADES = New Global.System.Data.DataColumn("ESTADO_CIUDADES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CIUDADES)
            Me.columnID_PROVINCIAS = New Global.System.Data.DataColumn("ID_PROVINCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIAS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CIUDAD}, true))
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_CIUDAD.Unique = true
            Me.columnNOMBRE_CIUDADES.AllowDBNull = false
            Me.columnNOMBRE_CIUDADES.MaxLength = 2147483647
            Me.columnESTADO_CIUDADES.AllowDBNull = false
            Me.columnID_PROVINCIAS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCIUDADESRow() As CIUDADESRow
            Return CType(Me.NewRow,CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CIUDADESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CIUDADESRowChangedEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowChanged(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CIUDADESRowChangingEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowChanging(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CIUDADESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowDeleted(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CIUDADESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowDeleting(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCIUDADESRow(ByVal row As CIUDADESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CIUDADESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SECUENCIAL_ITEMDataTable
        Inherits Global.System.Data.TypedTableBase(Of SECUENCIAL_ITEMRow)
        
        Private columnID_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnCODIGO_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnNOMBRE_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnFECHA_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnID_MARCA As Global.System.Data.DataColumn
        
        Private columnID_MODELO As Global.System.Data.DataColumn
        
        Private columnID_MATERIAL As Global.System.Data.DataColumn
        
        Private columnID_COLOR As Global.System.Data.DataColumn
        
        Private columnID_UNIDAD_MEDIDA As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnESTADO_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnID_SUB_GRUPO_ITEM As Global.System.Data.DataColumn
        
        Private columnCOSTO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SECUENCIAL_ITEM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MODELOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MODELO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MATERIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MATERIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_COLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_COLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_UNIDAD_MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UNIDAD_MEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SUB_GRUPO_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SUB_GRUPO_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SECUENCIAL_ITEMRow
            Get
                Return CType(Me.Rows(index),SECUENCIAL_ITEMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowChanging As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowChanged As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowDeleting As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowDeleted As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSECUENCIAL_ITEMRow(ByVal row As SECUENCIAL_ITEMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSECUENCIAL_ITEMRow(ByVal ID_SECUENCIAL_ITEM As Long, ByVal CODIGO_SECUENCIAL_ITEM As String, ByVal NOMBRE_SECUENCIAL_ITEM As String, ByVal FECHA_SECUENCIAL_ITEM As Date, ByVal ID_MARCA As Integer, ByVal ID_MODELO As Integer, ByVal ID_MATERIAL As Integer, ByVal ID_COLOR As Integer, ByVal ID_UNIDAD_MEDIDA As Integer, ByVal DESCRIPCION As String, ByVal ESTADO_SECUENCIAL_ITEM As Integer, ByVal ID_LOTE As Long, ByVal ID_SUB_GRUPO_ITEM As Long, ByVal COSTO As Decimal) As SECUENCIAL_ITEMRow
            Dim rowSECUENCIAL_ITEMRow As SECUENCIAL_ITEMRow = CType(Me.NewRow,SECUENCIAL_ITEMRow)
            Dim columnValuesArray() As Object = New Object() {ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO}
            rowSECUENCIAL_ITEMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSECUENCIAL_ITEMRow)
            Return rowSECUENCIAL_ITEMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_SECUENCIAL_ITEM(ByVal ID_SECUENCIAL_ITEM As Long) As SECUENCIAL_ITEMRow
            Return CType(Me.Rows.Find(New Object() {ID_SECUENCIAL_ITEM}),SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SECUENCIAL_ITEMDataTable = CType(MyBase.Clone,SECUENCIAL_ITEMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SECUENCIAL_ITEMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_SECUENCIAL_ITEM = MyBase.Columns("ID_SECUENCIAL_ITEM")
            Me.columnCODIGO_SECUENCIAL_ITEM = MyBase.Columns("CODIGO_SECUENCIAL_ITEM")
            Me.columnNOMBRE_SECUENCIAL_ITEM = MyBase.Columns("NOMBRE_SECUENCIAL_ITEM")
            Me.columnFECHA_SECUENCIAL_ITEM = MyBase.Columns("FECHA_SECUENCIAL_ITEM")
            Me.columnID_MARCA = MyBase.Columns("ID_MARCA")
            Me.columnID_MODELO = MyBase.Columns("ID_MODELO")
            Me.columnID_MATERIAL = MyBase.Columns("ID_MATERIAL")
            Me.columnID_COLOR = MyBase.Columns("ID_COLOR")
            Me.columnID_UNIDAD_MEDIDA = MyBase.Columns("ID_UNIDAD_MEDIDA")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnESTADO_SECUENCIAL_ITEM = MyBase.Columns("ESTADO_SECUENCIAL_ITEM")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnID_SUB_GRUPO_ITEM = MyBase.Columns("ID_SUB_GRUPO_ITEM")
            Me.columnCOSTO = MyBase.Columns("COSTO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ID_SECUENCIAL_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SECUENCIAL_ITEM)
            Me.columnCODIGO_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("CODIGO_SECUENCIAL_ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_SECUENCIAL_ITEM)
            Me.columnNOMBRE_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("NOMBRE_SECUENCIAL_ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_SECUENCIAL_ITEM)
            Me.columnFECHA_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("FECHA_SECUENCIAL_ITEM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SECUENCIAL_ITEM)
            Me.columnID_MARCA = New Global.System.Data.DataColumn("ID_MARCA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MARCA)
            Me.columnID_MODELO = New Global.System.Data.DataColumn("ID_MODELO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MODELO)
            Me.columnID_MATERIAL = New Global.System.Data.DataColumn("ID_MATERIAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MATERIAL)
            Me.columnID_COLOR = New Global.System.Data.DataColumn("ID_COLOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_COLOR)
            Me.columnID_UNIDAD_MEDIDA = New Global.System.Data.DataColumn("ID_UNIDAD_MEDIDA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UNIDAD_MEDIDA)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnESTADO_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ESTADO_SECUENCIAL_ITEM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SECUENCIAL_ITEM)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnID_SUB_GRUPO_ITEM = New Global.System.Data.DataColumn("ID_SUB_GRUPO_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SUB_GRUPO_ITEM)
            Me.columnCOSTO = New Global.System.Data.DataColumn("COSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_SECUENCIAL_ITEM}, true))
            Me.columnID_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_SECUENCIAL_ITEM.Unique = true
            Me.columnCODIGO_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnCODIGO_SECUENCIAL_ITEM.MaxLength = 2147483647
            Me.columnNOMBRE_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnNOMBRE_SECUENCIAL_ITEM.MaxLength = 2147483647
            Me.columnFECHA_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_MARCA.AllowDBNull = false
            Me.columnID_MODELO.AllowDBNull = false
            Me.columnID_MATERIAL.AllowDBNull = false
            Me.columnID_COLOR.AllowDBNull = false
            Me.columnID_UNIDAD_MEDIDA.AllowDBNull = false
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 2147483647
            Me.columnESTADO_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_SUB_GRUPO_ITEM.AllowDBNull = false
            Me.columnCOSTO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSECUENCIAL_ITEMRow() As SECUENCIAL_ITEMRow
            Return CType(Me.NewRow,SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SECUENCIAL_ITEMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SECUENCIAL_ITEMRowChangedEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowChanged(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SECUENCIAL_ITEMRowChangingEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowChanging(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SECUENCIAL_ITEMRowDeletedEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowDeleted(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SECUENCIAL_ITEMRowDeletingEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowDeleting(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSECUENCIAL_ITEMRow(ByVal row As SECUENCIAL_ITEMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetOrdenCompra = New DataSetOrdenCompra()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SECUENCIAL_ITEMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ORDEN_COMPRARow
        Inherits Global.System.Data.DataRow
        
        Private tableORDEN_COMPRA As ORDEN_COMPRADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableORDEN_COMPRA = CType(Me.Table,ORDEN_COMPRADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ORDEN_COMPRA() As Long
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.ID_ORDEN_COMPRAColumn),Long)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.ID_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_ORDEN_COMPRA() As Date
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.FECHA_ORDEN_COMPRAColumn),Date)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.FECHA_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVEEDOR_GENERAL() As Integer
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.ID_PROVEEDOR_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.ID_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FORMA_PAGO_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.FORMA_PAGO_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.FORMA_PAGO_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_PAGO_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.TIPO_PAGO_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.TIPO_PAGO_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACIONES_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.OBSERVACIONES_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.OBSERVACIONES_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUBTOTAL_12_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.SUBTOTAL_12_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.SUBTOTAL_12_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUBTOTAL_0_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.SUBTOTAL_0_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.SUBTOTAL_0_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCUENTO_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.DESCUENTO_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.DESCUENTO_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IVA_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.IVA_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.IVA_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOTAL_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.TOTAL_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.TOTAL_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_ORDEN_COMPRA() As Integer
            Get
                Return CType(Me(Me.tableORDEN_COMPRA.ESTADO_ORDEN_COMPRAColumn),Integer)
            End Get
            Set
                Me(Me.tableORDEN_COMPRA.ESTADO_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROVEEDOR_GENERALRow() As PROVEEDOR_GENERALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL")),PROVEEDOR_GENERALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetDETALLE_ORDEN_COMPRARows() As DETALLE_ORDEN_COMPRARow()
            If (Me.Table.ChildRelations("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA") Is Nothing) Then
                Return New DETALLE_ORDEN_COMPRARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA")),DETALLE_ORDEN_COMPRARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROVEEDOR_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROVEEDOR_GENERAL As PROVEEDOR_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROVEEDOR_GENERAL = CType(Me.Table,PROVEEDOR_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVEEDOR_GENERAL() As Integer
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.ID_PROVEEDOR_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.ID_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_PROVEEDOR_GENERAL() As Date
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.FECHA_PROVEEDOR_GENERALColumn),Date)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.FECHA_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RUC_CI_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.RUC_CI_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.RUC_CI_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RAZON_SOCIAL_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.RAZON_SOCIAL_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.RAZON_SOCIAL_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_COMERCIAL_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.NOMBRE_COMERCIAL_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.NOMBRE_COMERCIAL_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.TIPO_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.TIPO_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTABILIDAD_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.CONTABILIDAD_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.CONTABILIDAD_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.DIRECCION_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.DIRECCION_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_1_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.TELEFONO_1_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.TELEFONO_1_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_2_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.TELEFONO_2_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.TELEFONO_2_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL_PROVEEDOR_GENERAL() As String
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.EMAIL_PROVEEDOR_GENERALColumn),String)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.EMAIL_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_PROVEEDOR_GENERAL() As Integer
            Get
                Return CType(Me(Me.tablePROVEEDOR_GENERAL.ESTADO_PROVEEDOR_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tablePROVEEDOR_GENERAL.ESTADO_PROVEEDOR_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CIUDADESRow() As CIUDADESRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CIUDADES_PROVEEDOR_GENERAL")),CIUDADESRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CIUDADES_PROVEEDOR_GENERAL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetORDEN_COMPRARows() As ORDEN_COMPRARow()
            If (Me.Table.ChildRelations("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL") Is Nothing) Then
                Return New ORDEN_COMPRARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ORDEN_COMPRA_PROVEEDOR_GENERAL")),ORDEN_COMPRARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DETALLE_ORDEN_COMPRARow
        Inherits Global.System.Data.DataRow
        
        Private tableDETALLE_ORDEN_COMPRA As DETALLE_ORDEN_COMPRADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDETALLE_ORDEN_COMPRA = CType(Me.Table,DETALLE_ORDEN_COMPRADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_DETALLE_ORDEN_COMPRA() As Long
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.ID_DETALLE_ORDEN_COMPRAColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.ID_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SECUENCIAL_ITEM() As Long
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.ID_SECUENCIAL_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.ID_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UMEDIDA_DETALLE_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.UMEDIDA_DETALLE_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.UMEDIDA_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_DETALLE_ORDEN_COMPRA() As Integer
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.CANTIDAD_DETALLE_ORDEN_COMPRAColumn),Integer)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.CANTIDAD_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALORU_DETALLE_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.VALORU_DETALLE_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.VALORU_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALORT_DETALLE_ORDEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.VALORT_DETALLE_ORDEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.VALORT_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_DETALLE_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.ESTADO_DETALLE_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.ESTADO_DETALLE_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ORDEN_COMPRA() As Long
            Get
                Return CType(Me(Me.tableDETALLE_ORDEN_COMPRA.ID_ORDEN_COMPRAColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_ORDEN_COMPRA.ID_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDEN_COMPRARow() As ORDEN_COMPRARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA")),ORDEN_COMPRARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_DETALLE_ORDEN_COMPRA_ORDEN_COMPRA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SECUENCIAL_ITEMRow() As SECUENCIAL_ITEMRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM")),SECUENCIAL_ITEMRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CIUDADESRow
        Inherits Global.System.Data.DataRow
        
        Private tableCIUDADES As CIUDADESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCIUDADES = CType(Me.Table,CIUDADESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_CIUDADES() As String
            Get
                Return CType(Me(Me.tableCIUDADES.NOMBRE_CIUDADESColumn),String)
            End Get
            Set
                Me(Me.tableCIUDADES.NOMBRE_CIUDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CIUDADES() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ESTADO_CIUDADESColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ESTADO_CIUDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIAS() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ID_PROVINCIASColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ID_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPROVEEDOR_GENERALRows() As PROVEEDOR_GENERALRow()
            If (Me.Table.ChildRelations("CIUDADES_PROVEEDOR_GENERAL") Is Nothing) Then
                Return New PROVEEDOR_GENERALRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CIUDADES_PROVEEDOR_GENERAL")),PROVEEDOR_GENERALRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SECUENCIAL_ITEMRow
        Inherits Global.System.Data.DataRow
        
        Private tableSECUENCIAL_ITEM As SECUENCIAL_ITEMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSECUENCIAL_ITEM = CType(Me.Table,SECUENCIAL_ITEMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SECUENCIAL_ITEM() As Long
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_SECUENCIAL_ITEM() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.CODIGO_SECUENCIAL_ITEMColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.CODIGO_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_SECUENCIAL_ITEM() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.NOMBRE_SECUENCIAL_ITEMColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.NOMBRE_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SECUENCIAL_ITEM() As Date
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.FECHA_SECUENCIAL_ITEMColumn),Date)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.FECHA_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MARCA() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MARCAColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MODELO() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MODELOColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MODELOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MATERIAL() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MATERIALColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MATERIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_COLOR() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_COLORColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_COLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_UNIDAD_MEDIDA() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_UNIDAD_MEDIDAColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_UNIDAD_MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_SECUENCIAL_ITEM() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ESTADO_SECUENCIAL_ITEMColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ESTADO_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LOTE() As Long
            Get
                Try 
                    Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_LOTE' de la tabla 'SECUENCIAL_ITEM' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SUB_GRUPO_ITEM() As Long
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_SUB_GRUPO_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_SUB_GRUPO_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COSTO() As Decimal
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.COSTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_LOTENull() As Boolean
            Return Me.IsNull(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_LOTENull()
            Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetDETALLE_ORDEN_COMPRARows() As DETALLE_ORDEN_COMPRARow()
            If (Me.Table.ChildRelations("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM") Is Nothing) Then
                Return New DETALLE_ORDEN_COMPRARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_DETALLE_ORDEN_COMPRA_SECUENCIAL_ITEM")),DETALLE_ORDEN_COMPRARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ORDEN_COMPRARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ORDEN_COMPRARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ORDEN_COMPRARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ORDEN_COMPRARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PROVEEDOR_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROVEEDOR_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PROVEEDOR_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PROVEEDOR_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class DETALLE_ORDEN_COMPRARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DETALLE_ORDEN_COMPRARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As DETALLE_ORDEN_COMPRARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As DETALLE_ORDEN_COMPRARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CIUDADESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CIUDADESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CIUDADESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CIUDADESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class SECUENCIAL_ITEMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SECUENCIAL_ITEMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As SECUENCIAL_ITEMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As SECUENCIAL_ITEMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSetOrdenCompraTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ORDEN_COMPRATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ORDEN_COMPRA"
            tableMapping.ColumnMappings.Add("ID_ORDEN_COMPRA", "ID_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("FECHA_ORDEN_COMPRA", "FECHA_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("ID_PROVEEDOR_GENERAL", "ID_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("FORMA_PAGO_ORDEN_COMPRA", "FORMA_PAGO_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("TIPO_PAGO_ORDEN_COMPRA", "TIPO_PAGO_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("OBSERVACIONES_ORDEN_COMPRA", "OBSERVACIONES_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("SUBTOTAL_12_ORDEN_COMPRA", "SUBTOTAL_12_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("SUBTOTAL_0_ORDEN_COMPRA", "SUBTOTAL_0_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("DESCUENTO_ORDEN_COMPRA", "DESCUENTO_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("IVA_ORDEN_COMPRA", "IVA_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("TOTAL_ORDEN_COMPRA", "TOTAL_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("ESTADO_ORDEN_COMPRA", "ESTADO_ORDEN_COMPRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ORDEN_COMPRA] WHERE (([ID_ORDEN_COMPRA] = @Original_ID_ORDEN_C"& _ 
                "OMPRA) AND ([FECHA_ORDEN_COMPRA] = @Original_FECHA_ORDEN_COMPRA) AND ([ID_PROVEE"& _ 
                "DOR_GENERAL] = @Original_ID_PROVEEDOR_GENERAL) AND ([FORMA_PAGO_ORDEN_COMPRA] = "& _ 
                "@Original_FORMA_PAGO_ORDEN_COMPRA) AND ([TIPO_PAGO_ORDEN_COMPRA] = @Original_TIP"& _ 
                "O_PAGO_ORDEN_COMPRA) AND ([SUBTOTAL_12_ORDEN_COMPRA] = @Original_SUBTOTAL_12_ORD"& _ 
                "EN_COMPRA) AND ([SUBTOTAL_0_ORDEN_COMPRA] = @Original_SUBTOTAL_0_ORDEN_COMPRA) A"& _ 
                "ND ([DESCUENTO_ORDEN_COMPRA] = @Original_DESCUENTO_ORDEN_COMPRA) AND ([IVA_ORDEN"& _ 
                "_COMPRA] = @Original_IVA_ORDEN_COMPRA) AND ([TOTAL_ORDEN_COMPRA] = @Original_TOT"& _ 
                "AL_ORDEN_COMPRA) AND ([ESTADO_ORDEN_COMPRA] = @Original_ESTADO_ORDEN_COMPRA))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ORDEN_COMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCUENTO_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ORDEN_COMPRA] ([ID_ORDEN_COMPRA], [FECHA_ORDEN_COMPRA], [ID_PR"& _ 
                "OVEEDOR_GENERAL], [FORMA_PAGO_ORDEN_COMPRA], [TIPO_PAGO_ORDEN_COMPRA], [OBSERVAC"& _ 
                "IONES_ORDEN_COMPRA], [SUBTOTAL_12_ORDEN_COMPRA], [SUBTOTAL_0_ORDEN_COMPRA], [DES"& _ 
                "CUENTO_ORDEN_COMPRA], [IVA_ORDEN_COMPRA], [TOTAL_ORDEN_COMPRA], [ESTADO_ORDEN_CO"& _ 
                "MPRA]) VALUES (@ID_ORDEN_COMPRA, @FECHA_ORDEN_COMPRA, @ID_PROVEEDOR_GENERAL, @FO"& _ 
                "RMA_PAGO_ORDEN_COMPRA, @TIPO_PAGO_ORDEN_COMPRA, @OBSERVACIONES_ORDEN_COMPRA, @SU"& _ 
                "BTOTAL_12_ORDEN_COMPRA, @SUBTOTAL_0_ORDEN_COMPRA, @DESCUENTO_ORDEN_COMPRA, @IVA_"& _ 
                "ORDEN_COMPRA, @TOTAL_ORDEN_COMPRA, @ESTADO_ORDEN_COMPRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_ORDEN_COMPR"& _ 
                "A, FECHA_ORDEN_COMPRA, ID_PROVEEDOR_GENERAL, FORMA_PAGO_ORDEN_COMPRA, TIPO_PAGO_"& _ 
                "ORDEN_COMPRA, OBSERVACIONES_ORDEN_COMPRA, SUBTOTAL_12_ORDEN_COMPRA, SUBTOTAL_0_O"& _ 
                "RDEN_COMPRA, DESCUENTO_ORDEN_COMPRA, IVA_ORDEN_COMPRA, TOTAL_ORDEN_COMPRA, ESTAD"& _ 
                "O_ORDEN_COMPRA FROM ORDEN_COMPRA WHERE (ID_ORDEN_COMPRA = @ID_ORDEN_COMPRA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ORDEN_COMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCUENTO_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ORDEN_COMPRA] SET [ID_ORDEN_COMPRA] = @ID_ORDEN_COMPRA, [FECHA_ORDE"& _ 
                "N_COMPRA] = @FECHA_ORDEN_COMPRA, [ID_PROVEEDOR_GENERAL] = @ID_PROVEEDOR_GENERAL,"& _ 
                " [FORMA_PAGO_ORDEN_COMPRA] = @FORMA_PAGO_ORDEN_COMPRA, [TIPO_PAGO_ORDEN_COMPRA] "& _ 
                "= @TIPO_PAGO_ORDEN_COMPRA, [OBSERVACIONES_ORDEN_COMPRA] = @OBSERVACIONES_ORDEN_C"& _ 
                "OMPRA, [SUBTOTAL_12_ORDEN_COMPRA] = @SUBTOTAL_12_ORDEN_COMPRA, [SUBTOTAL_0_ORDEN"& _ 
                "_COMPRA] = @SUBTOTAL_0_ORDEN_COMPRA, [DESCUENTO_ORDEN_COMPRA] = @DESCUENTO_ORDEN"& _ 
                "_COMPRA, [IVA_ORDEN_COMPRA] = @IVA_ORDEN_COMPRA, [TOTAL_ORDEN_COMPRA] = @TOTAL_O"& _ 
                "RDEN_COMPRA, [ESTADO_ORDEN_COMPRA] = @ESTADO_ORDEN_COMPRA WHERE (([ID_ORDEN_COMP"& _ 
                "RA] = @Original_ID_ORDEN_COMPRA) AND ([FECHA_ORDEN_COMPRA] = @Original_FECHA_ORD"& _ 
                "EN_COMPRA) AND ([ID_PROVEEDOR_GENERAL] = @Original_ID_PROVEEDOR_GENERAL) AND ([F"& _ 
                "ORMA_PAGO_ORDEN_COMPRA] = @Original_FORMA_PAGO_ORDEN_COMPRA) AND ([TIPO_PAGO_ORD"& _ 
                "EN_COMPRA] = @Original_TIPO_PAGO_ORDEN_COMPRA) AND ([SUBTOTAL_12_ORDEN_COMPRA] ="& _ 
                " @Original_SUBTOTAL_12_ORDEN_COMPRA) AND ([SUBTOTAL_0_ORDEN_COMPRA] = @Original_"& _ 
                "SUBTOTAL_0_ORDEN_COMPRA) AND ([DESCUENTO_ORDEN_COMPRA] = @Original_DESCUENTO_ORD"& _ 
                "EN_COMPRA) AND ([IVA_ORDEN_COMPRA] = @Original_IVA_ORDEN_COMPRA) AND ([TOTAL_ORD"& _ 
                "EN_COMPRA] = @Original_TOTAL_ORDEN_COMPRA) AND ([ESTADO_ORDEN_COMPRA] = @Origina"& _ 
                "l_ESTADO_ORDEN_COMPRA));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_ORDEN_COMPRA, FECHA_ORDEN_COMPRA, ID_PROVEED"& _ 
                "OR_GENERAL, FORMA_PAGO_ORDEN_COMPRA, TIPO_PAGO_ORDEN_COMPRA, OBSERVACIONES_ORDEN"& _ 
                "_COMPRA, SUBTOTAL_12_ORDEN_COMPRA, SUBTOTAL_0_ORDEN_COMPRA, DESCUENTO_ORDEN_COMP"& _ 
                "RA, IVA_ORDEN_COMPRA, TOTAL_ORDEN_COMPRA, ESTADO_ORDEN_COMPRA FROM ORDEN_COMPRA "& _ 
                "WHERE (ID_ORDEN_COMPRA = @ID_ORDEN_COMPRA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ORDEN_COMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCUENTO_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ORDEN_COMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCUENTO_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_ORDEN_COMPRA, FECHA_ORDEN_COMPRA, ID_PROVEEDOR_GENERAL, FORMA_PAGO_ORDE"& _ 
                "N_COMPRA, TIPO_PAGO_ORDEN_COMPRA, OBSERVACIONES_ORDEN_COMPRA, SUBTOTAL_12_ORDEN_"& _ 
                "COMPRA, SUBTOTAL_0_ORDEN_COMPRA, DESCUENTO_ORDEN_COMPRA, IVA_ORDEN_COMPRA, TOTAL"& _ 
                "_ORDEN_COMPRA, ESTADO_ORDEN_COMPRA FROM dbo.ORDEN_COMPRA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetOrdenCompra.ORDEN_COMPRADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetOrdenCompra.ORDEN_COMPRADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetOrdenCompra.ORDEN_COMPRADataTable = New DataSetOrdenCompra.ORDEN_COMPRADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetOrdenCompra.ORDEN_COMPRADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetOrdenCompra) As Integer
            Return Me.Adapter.Update(dataSet, "ORDEN_COMPRA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_ORDEN_COMPRA As Long, ByVal Original_FECHA_ORDEN_COMPRA As Date, ByVal Original_ID_PROVEEDOR_GENERAL As Integer, ByVal Original_FORMA_PAGO_ORDEN_COMPRA As String, ByVal Original_TIPO_PAGO_ORDEN_COMPRA As String, ByVal Original_SUBTOTAL_12_ORDEN_COMPRA As Decimal, ByVal Original_SUBTOTAL_0_ORDEN_COMPRA As Decimal, ByVal Original_DESCUENTO_ORDEN_COMPRA As Decimal, ByVal Original_IVA_ORDEN_COMPRA As Decimal, ByVal Original_TOTAL_ORDEN_COMPRA As Decimal, ByVal Original_ESTADO_ORDEN_COMPRA As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_ORDEN_COMPRA,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_ORDEN_COMPRA,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_PROVEEDOR_GENERAL,Integer)
            If (Original_FORMA_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FORMA_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FORMA_PAGO_ORDEN_COMPRA,String)
            End If
            If (Original_TIPO_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TIPO_PAGO_ORDEN_COMPRA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_SUBTOTAL_12_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SUBTOTAL_0_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_DESCUENTO_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_IVA_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_TOTAL_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ESTADO_ORDEN_COMPRA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_ORDEN_COMPRA As Long, ByVal FECHA_ORDEN_COMPRA As Date, ByVal ID_PROVEEDOR_GENERAL As Integer, ByVal FORMA_PAGO_ORDEN_COMPRA As String, ByVal TIPO_PAGO_ORDEN_COMPRA As String, ByVal OBSERVACIONES_ORDEN_COMPRA As String, ByVal SUBTOTAL_12_ORDEN_COMPRA As Decimal, ByVal SUBTOTAL_0_ORDEN_COMPRA As Decimal, ByVal DESCUENTO_ORDEN_COMPRA As Decimal, ByVal IVA_ORDEN_COMPRA As Decimal, ByVal TOTAL_ORDEN_COMPRA As Decimal, ByVal ESTADO_ORDEN_COMPRA As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_ORDEN_COMPRA,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_ORDEN_COMPRA,Date)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ID_PROVEEDOR_GENERAL,Integer)
            If (FORMA_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FORMA_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FORMA_PAGO_ORDEN_COMPRA,String)
            End If
            If (TIPO_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TIPO_PAGO_ORDEN_COMPRA,String)
            End If
            If (OBSERVACIONES_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(OBSERVACIONES_ORDEN_COMPRA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(SUBTOTAL_12_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(SUBTOTAL_0_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(DESCUENTO_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(IVA_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(TOTAL_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ESTADO_ORDEN_COMPRA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_ORDEN_COMPRA As Long,  _
                    ByVal FECHA_ORDEN_COMPRA As Date,  _
                    ByVal ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal FORMA_PAGO_ORDEN_COMPRA As String,  _
                    ByVal TIPO_PAGO_ORDEN_COMPRA As String,  _
                    ByVal OBSERVACIONES_ORDEN_COMPRA As String,  _
                    ByVal SUBTOTAL_12_ORDEN_COMPRA As Decimal,  _
                    ByVal SUBTOTAL_0_ORDEN_COMPRA As Decimal,  _
                    ByVal DESCUENTO_ORDEN_COMPRA As Decimal,  _
                    ByVal IVA_ORDEN_COMPRA As Decimal,  _
                    ByVal TOTAL_ORDEN_COMPRA As Decimal,  _
                    ByVal ESTADO_ORDEN_COMPRA As Integer,  _
                    ByVal Original_ID_ORDEN_COMPRA As Long,  _
                    ByVal Original_FECHA_ORDEN_COMPRA As Date,  _
                    ByVal Original_ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_FORMA_PAGO_ORDEN_COMPRA As String,  _
                    ByVal Original_TIPO_PAGO_ORDEN_COMPRA As String,  _
                    ByVal Original_SUBTOTAL_12_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_SUBTOTAL_0_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_DESCUENTO_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_IVA_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_TOTAL_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_ESTADO_ORDEN_COMPRA As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_ORDEN_COMPRA,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_ORDEN_COMPRA,Date)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ID_PROVEEDOR_GENERAL,Integer)
            If (FORMA_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FORMA_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FORMA_PAGO_ORDEN_COMPRA,String)
            End If
            If (TIPO_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TIPO_PAGO_ORDEN_COMPRA,String)
            End If
            If (OBSERVACIONES_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(OBSERVACIONES_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SUBTOTAL_12_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SUBTOTAL_0_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DESCUENTO_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IVA_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TOTAL_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ESTADO_ORDEN_COMPRA,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ID_ORDEN_COMPRA,Long)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_FECHA_ORDEN_COMPRA,Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_PROVEEDOR_GENERAL,Integer)
            If (Original_FORMA_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FORMA_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FORMA_PAGO_ORDEN_COMPRA,String)
            End If
            If (Original_TIPO_PAGO_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_PAGO_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_TIPO_PAGO_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_SUBTOTAL_12_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_SUBTOTAL_0_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_DESCUENTO_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_IVA_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TOTAL_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_ESTADO_ORDEN_COMPRA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FECHA_ORDEN_COMPRA As Date,  _
                    ByVal ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal FORMA_PAGO_ORDEN_COMPRA As String,  _
                    ByVal TIPO_PAGO_ORDEN_COMPRA As String,  _
                    ByVal OBSERVACIONES_ORDEN_COMPRA As String,  _
                    ByVal SUBTOTAL_12_ORDEN_COMPRA As Decimal,  _
                    ByVal SUBTOTAL_0_ORDEN_COMPRA As Decimal,  _
                    ByVal DESCUENTO_ORDEN_COMPRA As Decimal,  _
                    ByVal IVA_ORDEN_COMPRA As Decimal,  _
                    ByVal TOTAL_ORDEN_COMPRA As Decimal,  _
                    ByVal ESTADO_ORDEN_COMPRA As Integer,  _
                    ByVal Original_ID_ORDEN_COMPRA As Long,  _
                    ByVal Original_FECHA_ORDEN_COMPRA As Date,  _
                    ByVal Original_ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_FORMA_PAGO_ORDEN_COMPRA As String,  _
                    ByVal Original_TIPO_PAGO_ORDEN_COMPRA As String,  _
                    ByVal Original_SUBTOTAL_12_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_SUBTOTAL_0_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_DESCUENTO_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_IVA_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_TOTAL_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_ESTADO_ORDEN_COMPRA As Integer) As Integer
            Return Me.Update(Original_ID_ORDEN_COMPRA, FECHA_ORDEN_COMPRA, ID_PROVEEDOR_GENERAL, FORMA_PAGO_ORDEN_COMPRA, TIPO_PAGO_ORDEN_COMPRA, OBSERVACIONES_ORDEN_COMPRA, SUBTOTAL_12_ORDEN_COMPRA, SUBTOTAL_0_ORDEN_COMPRA, DESCUENTO_ORDEN_COMPRA, IVA_ORDEN_COMPRA, TOTAL_ORDEN_COMPRA, ESTADO_ORDEN_COMPRA, Original_ID_ORDEN_COMPRA, Original_FECHA_ORDEN_COMPRA, Original_ID_PROVEEDOR_GENERAL, Original_FORMA_PAGO_ORDEN_COMPRA, Original_TIPO_PAGO_ORDEN_COMPRA, Original_SUBTOTAL_12_ORDEN_COMPRA, Original_SUBTOTAL_0_ORDEN_COMPRA, Original_DESCUENTO_ORDEN_COMPRA, Original_IVA_ORDEN_COMPRA, Original_TOTAL_ORDEN_COMPRA, Original_ESTADO_ORDEN_COMPRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PROVEEDOR_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PROVEEDOR_GENERAL"
            tableMapping.ColumnMappings.Add("ID_PROVEEDOR_GENERAL", "ID_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("FECHA_PROVEEDOR_GENERAL", "FECHA_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("RUC_CI_PROVEEDOR_GENERAL", "RUC_CI_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("RAZON_SOCIAL_PROVEEDOR_GENERAL", "RAZON_SOCIAL_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", "NOMBRE_COMERCIAL_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_PROVEEDOR_GENERAL", "TIPO_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("CONTABILIDAD_PROVEEDOR_GENERAL", "CONTABILIDAD_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", "CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("DIRECCION_PROVEEDOR_GENERAL", "DIRECCION_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO_1_PROVEEDOR_GENERAL", "TELEFONO_1_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("TELEFONO_2_PROVEEDOR_GENERAL", "TELEFONO_2_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("EMAIL_PROVEEDOR_GENERAL", "EMAIL_PROVEEDOR_GENERAL")
            tableMapping.ColumnMappings.Add("ESTADO_PROVEEDOR_GENERAL", "ESTADO_PROVEEDOR_GENERAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PROVEEDOR_GENERAL] WHERE (([ID_PROVEEDOR_GENERAL] = @Original_"& _ 
                "ID_PROVEEDOR_GENERAL) AND ([FECHA_PROVEEDOR_GENERAL] = @Original_FECHA_PROVEEDOR"& _ 
                "_GENERAL) AND ([RUC_CI_PROVEEDOR_GENERAL] = @Original_RUC_CI_PROVEEDOR_GENERAL) "& _ 
                "AND ([TIPO_PROVEEDOR_GENERAL] = @Original_TIPO_PROVEEDOR_GENERAL) AND ([CONTABIL"& _ 
                "IDAD_PROVEEDOR_GENERAL] = @Original_CONTABILIDAD_PROVEEDOR_GENERAL) AND ([CONTRI"& _ 
                "BUYENTE_ESPECIAL_PROVEEDOR_GENERAL] = @Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR"& _ 
                "_GENERAL) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([TELEFONO_1_PROVEEDOR_GEN"& _ 
                "ERAL] = @Original_TELEFONO_1_PROVEEDOR_GENERAL) AND ([TELEFONO_2_PROVEEDOR_GENER"& _ 
                "AL] = @Original_TELEFONO_2_PROVEEDOR_GENERAL) AND ([EMAIL_PROVEEDOR_GENERAL] = @"& _ 
                "Original_EMAIL_PROVEEDOR_GENERAL) AND ([ESTADO_PROVEEDOR_GENERAL] = @Original_ES"& _ 
                "TADO_PROVEEDOR_GENERAL))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PROVEEDOR_GENERAL] ([ID_PROVEEDOR_GENERAL], [FECHA_PROVEEDOR_G"& _ 
                "ENERAL], [RUC_CI_PROVEEDOR_GENERAL], [RAZON_SOCIAL_PROVEEDOR_GENERAL], [NOMBRE_C"& _ 
                "OMERCIAL_PROVEEDOR_GENERAL], [TIPO_PROVEEDOR_GENERAL], [CONTABILIDAD_PROVEEDOR_G"& _ 
                "ENERAL], [CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL], [DIRECCION_PROVEEDOR_GENERA"& _ 
                "L], [ID_CIUDAD], [TELEFONO_1_PROVEEDOR_GENERAL], [TELEFONO_2_PROVEEDOR_GENERAL],"& _ 
                " [EMAIL_PROVEEDOR_GENERAL], [ESTADO_PROVEEDOR_GENERAL]) VALUES (@ID_PROVEEDOR_GE"& _ 
                "NERAL, @FECHA_PROVEEDOR_GENERAL, @RUC_CI_PROVEEDOR_GENERAL, @RAZON_SOCIAL_PROVEE"& _ 
                "DOR_GENERAL, @NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, @TIPO_PROVEEDOR_GENERAL, @CONT"& _ 
                "ABILIDAD_PROVEEDOR_GENERAL, @CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, @DIRECCIO"& _ 
                "N_PROVEEDOR_GENERAL, @ID_CIUDAD, @TELEFONO_1_PROVEEDOR_GENERAL, @TELEFONO_2_PROV"& _ 
                "EEDOR_GENERAL, @EMAIL_PROVEEDOR_GENERAL, @ESTADO_PROVEEDOR_GENERAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_"& _ 
                "PROVEEDOR_GENERAL, FECHA_PROVEEDOR_GENERAL, RUC_CI_PROVEEDOR_GENERAL, RAZON_SOCI"& _ 
                "AL_PROVEEDOR_GENERAL, NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, TIPO_PROVEEDOR_GENERAL"& _ 
                ", CONTABILIDAD_PROVEEDOR_GENERAL, CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, DIRE"& _ 
                "CCION_PROVEEDOR_GENERAL, ID_CIUDAD, TELEFONO_1_PROVEEDOR_GENERAL, TELEFONO_2_PRO"& _ 
                "VEEDOR_GENERAL, EMAIL_PROVEEDOR_GENERAL, ESTADO_PROVEEDOR_GENERAL FROM PROVEEDOR"& _ 
                "_GENERAL WHERE (ID_PROVEEDOR_GENERAL = @ID_PROVEEDOR_GENERAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAZON_SOCIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RAZON_SOCIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PROVEEDOR_GENERAL] SET [ID_PROVEEDOR_GENERAL] = @ID_PROVEEDOR_GENER"& _ 
                "AL, [FECHA_PROVEEDOR_GENERAL] = @FECHA_PROVEEDOR_GENERAL, [RUC_CI_PROVEEDOR_GENE"& _ 
                "RAL] = @RUC_CI_PROVEEDOR_GENERAL, [RAZON_SOCIAL_PROVEEDOR_GENERAL] = @RAZON_SOCI"& _ 
                "AL_PROVEEDOR_GENERAL, [NOMBRE_COMERCIAL_PROVEEDOR_GENERAL] = @NOMBRE_COMERCIAL_P"& _ 
                "ROVEEDOR_GENERAL, [TIPO_PROVEEDOR_GENERAL] = @TIPO_PROVEEDOR_GENERAL, [CONTABILI"& _ 
                "DAD_PROVEEDOR_GENERAL] = @CONTABILIDAD_PROVEEDOR_GENERAL, [CONTRIBUYENTE_ESPECIA"& _ 
                "L_PROVEEDOR_GENERAL] = @CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, [DIRECCION_PRO"& _ 
                "VEEDOR_GENERAL] = @DIRECCION_PROVEEDOR_GENERAL, [ID_CIUDAD] = @ID_CIUDAD, [TELEF"& _ 
                "ONO_1_PROVEEDOR_GENERAL] = @TELEFONO_1_PROVEEDOR_GENERAL, [TELEFONO_2_PROVEEDOR_"& _ 
                "GENERAL] = @TELEFONO_2_PROVEEDOR_GENERAL, [EMAIL_PROVEEDOR_GENERAL] = @EMAIL_PRO"& _ 
                "VEEDOR_GENERAL, [ESTADO_PROVEEDOR_GENERAL] = @ESTADO_PROVEEDOR_GENERAL WHERE ((["& _ 
                "ID_PROVEEDOR_GENERAL] = @Original_ID_PROVEEDOR_GENERAL) AND ([FECHA_PROVEEDOR_GE"& _ 
                "NERAL] = @Original_FECHA_PROVEEDOR_GENERAL) AND ([RUC_CI_PROVEEDOR_GENERAL] = @O"& _ 
                "riginal_RUC_CI_PROVEEDOR_GENERAL) AND ([TIPO_PROVEEDOR_GENERAL] = @Original_TIPO"& _ 
                "_PROVEEDOR_GENERAL) AND ([CONTABILIDAD_PROVEEDOR_GENERAL] = @Original_CONTABILID"& _ 
                "AD_PROVEEDOR_GENERAL) AND ([CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL] = @Origina"& _ 
                "l_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL) AND ([ID_CIUDAD] = @Original_ID_CIUD"& _ 
                "AD) AND ([TELEFONO_1_PROVEEDOR_GENERAL] = @Original_TELEFONO_1_PROVEEDOR_GENERAL"& _ 
                ") AND ([TELEFONO_2_PROVEEDOR_GENERAL] = @Original_TELEFONO_2_PROVEEDOR_GENERAL) "& _ 
                "AND ([EMAIL_PROVEEDOR_GENERAL] = @Original_EMAIL_PROVEEDOR_GENERAL) AND ([ESTADO"& _ 
                "_PROVEEDOR_GENERAL] = @Original_ESTADO_PROVEEDOR_GENERAL));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PROVEEDOR"& _ 
                "_GENERAL, FECHA_PROVEEDOR_GENERAL, RUC_CI_PROVEEDOR_GENERAL, RAZON_SOCIAL_PROVEE"& _ 
                "DOR_GENERAL, NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, TIPO_PROVEEDOR_GENERAL, CONTABI"& _ 
                "LIDAD_PROVEEDOR_GENERAL, CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, DIRECCION_PRO"& _ 
                "VEEDOR_GENERAL, ID_CIUDAD, TELEFONO_1_PROVEEDOR_GENERAL, TELEFONO_2_PROVEEDOR_GE"& _ 
                "NERAL, EMAIL_PROVEEDOR_GENERAL, ESTADO_PROVEEDOR_GENERAL FROM PROVEEDOR_GENERAL "& _ 
                "WHERE (ID_PROVEEDOR_GENERAL = @ID_PROVEEDOR_GENERAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAZON_SOCIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RAZON_SOCIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_COMERCIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTABILIDAD_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PROVEEDOR_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVEEDOR_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_PROVEEDOR_GENERAL, FECHA_PROVEEDOR_GENERAL, RUC_CI_PROVEEDOR_GENERAL, R"& _ 
                "AZON_SOCIAL_PROVEEDOR_GENERAL, NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, TIPO_PROVEEDO"& _ 
                "R_GENERAL, CONTABILIDAD_PROVEEDOR_GENERAL, CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENE"& _ 
                "RAL, DIRECCION_PROVEEDOR_GENERAL, ID_CIUDAD, TELEFONO_1_PROVEEDOR_GENERAL, TELEF"& _ 
                "ONO_2_PROVEEDOR_GENERAL, EMAIL_PROVEEDOR_GENERAL, ESTADO_PROVEEDOR_GENERAL FROM "& _ 
                "dbo.PROVEEDOR_GENERAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetOrdenCompra.PROVEEDOR_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetOrdenCompra.PROVEEDOR_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetOrdenCompra.PROVEEDOR_GENERALDataTable = New DataSetOrdenCompra.PROVEEDOR_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetOrdenCompra.PROVEEDOR_GENERALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetOrdenCompra) As Integer
            Return Me.Adapter.Update(dataSet, "PROVEEDOR_GENERAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_PROVEEDOR_GENERAL As Integer, ByVal Original_FECHA_PROVEEDOR_GENERAL As Date, ByVal Original_RUC_CI_PROVEEDOR_GENERAL As String, ByVal Original_TIPO_PROVEEDOR_GENERAL As String, ByVal Original_CONTABILIDAD_PROVEEDOR_GENERAL As String, ByVal Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String, ByVal Original_ID_CIUDAD As Integer, ByVal Original_TELEFONO_1_PROVEEDOR_GENERAL As String, ByVal Original_TELEFONO_2_PROVEEDOR_GENERAL As String, ByVal Original_EMAIL_PROVEEDOR_GENERAL As String, ByVal Original_ESTADO_PROVEEDOR_GENERAL As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_PROVEEDOR_GENERAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_PROVEEDOR_GENERAL,Date)
            If (Original_RUC_CI_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RUC_CI_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_RUC_CI_PROVEEDOR_GENERAL,String)
            End If
            If (Original_TIPO_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TIPO_PROVEEDOR_GENERAL,String)
            End If
            If (Original_CONTABILIDAD_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CONTABILIDAD_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CONTABILIDAD_PROVEEDOR_GENERAL,String)
            End If
            If (Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_CIUDAD,Integer)
            If (Original_TELEFONO_1_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEFONO_1_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_TELEFONO_1_PROVEEDOR_GENERAL,String)
            End If
            If (Original_TELEFONO_2_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEFONO_2_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TELEFONO_2_PROVEEDOR_GENERAL,String)
            End If
            If (Original_EMAIL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_EMAIL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ESTADO_PROVEEDOR_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_PROVEEDOR_GENERAL As Integer, ByVal FECHA_PROVEEDOR_GENERAL As Date, ByVal RUC_CI_PROVEEDOR_GENERAL As String, ByVal RAZON_SOCIAL_PROVEEDOR_GENERAL As String, ByVal NOMBRE_COMERCIAL_PROVEEDOR_GENERAL As String, ByVal TIPO_PROVEEDOR_GENERAL As String, ByVal CONTABILIDAD_PROVEEDOR_GENERAL As String, ByVal CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String, ByVal DIRECCION_PROVEEDOR_GENERAL As String, ByVal ID_CIUDAD As Integer, ByVal TELEFONO_1_PROVEEDOR_GENERAL As String, ByVal TELEFONO_2_PROVEEDOR_GENERAL As String, ByVal EMAIL_PROVEEDOR_GENERAL As String, ByVal ESTADO_PROVEEDOR_GENERAL As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_PROVEEDOR_GENERAL,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_PROVEEDOR_GENERAL,Date)
            If (RUC_CI_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RUC_CI_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(RUC_CI_PROVEEDOR_GENERAL,String)
            End If
            If (RAZON_SOCIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RAZON_SOCIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RAZON_SOCIAL_PROVEEDOR_GENERAL,String)
            End If
            If (NOMBRE_COMERCIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_COMERCIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NOMBRE_COMERCIAL_PROVEEDOR_GENERAL,String)
            End If
            If (TIPO_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TIPO_PROVEEDOR_GENERAL,String)
            End If
            If (CONTABILIDAD_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTABILIDAD_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CONTABILIDAD_PROVEEDOR_GENERAL,String)
            End If
            If (CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL,String)
            End If
            If (DIRECCION_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DIRECCION_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ID_CIUDAD,Integer)
            If (TELEFONO_1_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_1_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TELEFONO_1_PROVEEDOR_GENERAL,String)
            End If
            If (TELEFONO_2_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_2_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TELEFONO_2_PROVEEDOR_GENERAL,String)
            End If
            If (EMAIL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EMAIL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(ESTADO_PROVEEDOR_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal FECHA_PROVEEDOR_GENERAL As Date,  _
                    ByVal RUC_CI_PROVEEDOR_GENERAL As String,  _
                    ByVal RAZON_SOCIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal NOMBRE_COMERCIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal TIPO_PROVEEDOR_GENERAL As String,  _
                    ByVal CONTABILIDAD_PROVEEDOR_GENERAL As String,  _
                    ByVal CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal DIRECCION_PROVEEDOR_GENERAL As String,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal TELEFONO_1_PROVEEDOR_GENERAL As String,  _
                    ByVal TELEFONO_2_PROVEEDOR_GENERAL As String,  _
                    ByVal EMAIL_PROVEEDOR_GENERAL As String,  _
                    ByVal ESTADO_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_FECHA_PROVEEDOR_GENERAL As Date,  _
                    ByVal Original_RUC_CI_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_TIPO_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_CONTABILIDAD_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_TELEFONO_1_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_EMAIL_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_ESTADO_PROVEEDOR_GENERAL As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_PROVEEDOR_GENERAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_PROVEEDOR_GENERAL,Date)
            If (RUC_CI_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RUC_CI_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RUC_CI_PROVEEDOR_GENERAL,String)
            End If
            If (RAZON_SOCIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RAZON_SOCIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RAZON_SOCIAL_PROVEEDOR_GENERAL,String)
            End If
            If (NOMBRE_COMERCIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_COMERCIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NOMBRE_COMERCIAL_PROVEEDOR_GENERAL,String)
            End If
            If (TIPO_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TIPO_PROVEEDOR_GENERAL,String)
            End If
            If (CONTABILIDAD_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTABILIDAD_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CONTABILIDAD_PROVEEDOR_GENERAL,String)
            End If
            If (CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL,String)
            End If
            If (DIRECCION_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DIRECCION_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ID_CIUDAD,Integer)
            If (TELEFONO_1_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_1_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TELEFONO_1_PROVEEDOR_GENERAL,String)
            End If
            If (TELEFONO_2_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_2_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TELEFONO_2_PROVEEDOR_GENERAL,String)
            End If
            If (EMAIL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(EMAIL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ESTADO_PROVEEDOR_GENERAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_PROVEEDOR_GENERAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FECHA_PROVEEDOR_GENERAL,Date)
            If (Original_RUC_CI_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RUC_CI_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_RUC_CI_PROVEEDOR_GENERAL,String)
            End If
            If (Original_TIPO_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_TIPO_PROVEEDOR_GENERAL,String)
            End If
            If (Original_CONTABILIDAD_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CONTABILIDAD_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_CONTABILIDAD_PROVEEDOR_GENERAL,String)
            End If
            If (Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_CIUDAD,Integer)
            If (Original_TELEFONO_1_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEFONO_1_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TELEFONO_1_PROVEEDOR_GENERAL,String)
            End If
            If (Original_TELEFONO_2_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEFONO_2_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_TELEFONO_2_PROVEEDOR_GENERAL,String)
            End If
            If (Original_EMAIL_PROVEEDOR_GENERAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL_PROVEEDOR_GENERAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_EMAIL_PROVEEDOR_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ESTADO_PROVEEDOR_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FECHA_PROVEEDOR_GENERAL As Date,  _
                    ByVal RUC_CI_PROVEEDOR_GENERAL As String,  _
                    ByVal RAZON_SOCIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal NOMBRE_COMERCIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal TIPO_PROVEEDOR_GENERAL As String,  _
                    ByVal CONTABILIDAD_PROVEEDOR_GENERAL As String,  _
                    ByVal CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal DIRECCION_PROVEEDOR_GENERAL As String,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal TELEFONO_1_PROVEEDOR_GENERAL As String,  _
                    ByVal TELEFONO_2_PROVEEDOR_GENERAL As String,  _
                    ByVal EMAIL_PROVEEDOR_GENERAL As String,  _
                    ByVal ESTADO_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_ID_PROVEEDOR_GENERAL As Integer,  _
                    ByVal Original_FECHA_PROVEEDOR_GENERAL As Date,  _
                    ByVal Original_RUC_CI_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_TIPO_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_CONTABILIDAD_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_TELEFONO_1_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_EMAIL_PROVEEDOR_GENERAL As String,  _
                    ByVal Original_ESTADO_PROVEEDOR_GENERAL As Integer) As Integer
            Return Me.Update(Original_ID_PROVEEDOR_GENERAL, FECHA_PROVEEDOR_GENERAL, RUC_CI_PROVEEDOR_GENERAL, RAZON_SOCIAL_PROVEEDOR_GENERAL, NOMBRE_COMERCIAL_PROVEEDOR_GENERAL, TIPO_PROVEEDOR_GENERAL, CONTABILIDAD_PROVEEDOR_GENERAL, CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, DIRECCION_PROVEEDOR_GENERAL, ID_CIUDAD, TELEFONO_1_PROVEEDOR_GENERAL, TELEFONO_2_PROVEEDOR_GENERAL, EMAIL_PROVEEDOR_GENERAL, ESTADO_PROVEEDOR_GENERAL, Original_ID_PROVEEDOR_GENERAL, Original_FECHA_PROVEEDOR_GENERAL, Original_RUC_CI_PROVEEDOR_GENERAL, Original_TIPO_PROVEEDOR_GENERAL, Original_CONTABILIDAD_PROVEEDOR_GENERAL, Original_CONTRIBUYENTE_ESPECIAL_PROVEEDOR_GENERAL, Original_ID_CIUDAD, Original_TELEFONO_1_PROVEEDOR_GENERAL, Original_TELEFONO_2_PROVEEDOR_GENERAL, Original_EMAIL_PROVEEDOR_GENERAL, Original_ESTADO_PROVEEDOR_GENERAL)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DETALLE_ORDEN_COMPRATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DETALLE_ORDEN_COMPRA"
            tableMapping.ColumnMappings.Add("ID_DETALLE_ORDEN_COMPRA", "ID_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("ID_SECUENCIAL_ITEM", "ID_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("UMEDIDA_DETALLE_ORDEN_COMPRA", "UMEDIDA_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("CANTIDAD_DETALLE_ORDEN_COMPRA", "CANTIDAD_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("VALORU_DETALLE_ORDEN_COMPRA", "VALORU_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("VALORT_DETALLE_ORDEN_COMPRA", "VALORT_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("ESTADO_DETALLE_ORDEN_COMPRA", "ESTADO_DETALLE_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("ID_ORDEN_COMPRA", "ID_ORDEN_COMPRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DETALLE_ORDEN_COMPRA] WHERE (([ID_DETALLE_ORDEN_COMPRA] = @Ori"& _ 
                "ginal_ID_DETALLE_ORDEN_COMPRA) AND ([ID_SECUENCIAL_ITEM] = @Original_ID_SECUENCI"& _ 
                "AL_ITEM) AND ([UMEDIDA_DETALLE_ORDEN_COMPRA] = @Original_UMEDIDA_DETALLE_ORDEN_C"& _ 
                "OMPRA) AND ([CANTIDAD_DETALLE_ORDEN_COMPRA] = @Original_CANTIDAD_DETALLE_ORDEN_C"& _ 
                "OMPRA) AND ([VALORU_DETALLE_ORDEN_COMPRA] = @Original_VALORU_DETALLE_ORDEN_COMPR"& _ 
                "A) AND ([VALORT_DETALLE_ORDEN_COMPRA] = @Original_VALORT_DETALLE_ORDEN_COMPRA) A"& _ 
                "ND ([ESTADO_DETALLE_ORDEN_COMPRA] = @Original_ESTADO_DETALLE_ORDEN_COMPRA) AND ("& _ 
                "[ID_ORDEN_COMPRA] = @Original_ID_ORDEN_COMPRA))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DETALLE_ORDEN_COMPRA] ([ID_DETALLE_ORDEN_COMPRA], [ID_SECUENCI"& _ 
                "AL_ITEM], [UMEDIDA_DETALLE_ORDEN_COMPRA], [CANTIDAD_DETALLE_ORDEN_COMPRA], [VALO"& _ 
                "RU_DETALLE_ORDEN_COMPRA], [VALORT_DETALLE_ORDEN_COMPRA], [ESTADO_DETALLE_ORDEN_C"& _ 
                "OMPRA], [ID_ORDEN_COMPRA]) VALUES (@ID_DETALLE_ORDEN_COMPRA, @ID_SECUENCIAL_ITEM"& _ 
                ", @UMEDIDA_DETALLE_ORDEN_COMPRA, @CANTIDAD_DETALLE_ORDEN_COMPRA, @VALORU_DETALLE"& _ 
                "_ORDEN_COMPRA, @VALORT_DETALLE_ORDEN_COMPRA, @ESTADO_DETALLE_ORDEN_COMPRA, @ID_O"& _ 
                "RDEN_COMPRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_DETALLE_ORDEN_COMPRA, ID_SECUENCIAL_ITEM, UMEDIDA_DETAL"& _ 
                "LE_ORDEN_COMPRA, CANTIDAD_DETALLE_ORDEN_COMPRA, VALORU_DETALLE_ORDEN_COMPRA, VAL"& _ 
                "ORT_DETALLE_ORDEN_COMPRA, ESTADO_DETALLE_ORDEN_COMPRA, ID_ORDEN_COMPRA FROM DETA"& _ 
                "LLE_ORDEN_COMPRA WHERE (ID_DETALLE_ORDEN_COMPRA = @ID_DETALLE_ORDEN_COMPRA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DETALLE_ORDEN_COMPRA] SET [ID_DETALLE_ORDEN_COMPRA] = @ID_DETALLE_O"& _ 
                "RDEN_COMPRA, [ID_SECUENCIAL_ITEM] = @ID_SECUENCIAL_ITEM, [UMEDIDA_DETALLE_ORDEN_"& _ 
                "COMPRA] = @UMEDIDA_DETALLE_ORDEN_COMPRA, [CANTIDAD_DETALLE_ORDEN_COMPRA] = @CANT"& _ 
                "IDAD_DETALLE_ORDEN_COMPRA, [VALORU_DETALLE_ORDEN_COMPRA] = @VALORU_DETALLE_ORDEN"& _ 
                "_COMPRA, [VALORT_DETALLE_ORDEN_COMPRA] = @VALORT_DETALLE_ORDEN_COMPRA, [ESTADO_D"& _ 
                "ETALLE_ORDEN_COMPRA] = @ESTADO_DETALLE_ORDEN_COMPRA, [ID_ORDEN_COMPRA] = @ID_ORD"& _ 
                "EN_COMPRA WHERE (([ID_DETALLE_ORDEN_COMPRA] = @Original_ID_DETALLE_ORDEN_COMPRA)"& _ 
                " AND ([ID_SECUENCIAL_ITEM] = @Original_ID_SECUENCIAL_ITEM) AND ([UMEDIDA_DETALLE"& _ 
                "_ORDEN_COMPRA] = @Original_UMEDIDA_DETALLE_ORDEN_COMPRA) AND ([CANTIDAD_DETALLE_"& _ 
                "ORDEN_COMPRA] = @Original_CANTIDAD_DETALLE_ORDEN_COMPRA) AND ([VALORU_DETALLE_OR"& _ 
                "DEN_COMPRA] = @Original_VALORU_DETALLE_ORDEN_COMPRA) AND ([VALORT_DETALLE_ORDEN_"& _ 
                "COMPRA] = @Original_VALORT_DETALLE_ORDEN_COMPRA) AND ([ESTADO_DETALLE_ORDEN_COMP"& _ 
                "RA] = @Original_ESTADO_DETALLE_ORDEN_COMPRA) AND ([ID_ORDEN_COMPRA] = @Original_"& _ 
                "ID_ORDEN_COMPRA));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_DETALLE_ORDEN_COMPRA, ID_SECUENCIAL_ITEM, UMEDIDA_"& _ 
                "DETALLE_ORDEN_COMPRA, CANTIDAD_DETALLE_ORDEN_COMPRA, VALORU_DETALLE_ORDEN_COMPRA"& _ 
                ", VALORT_DETALLE_ORDEN_COMPRA, ESTADO_DETALLE_ORDEN_COMPRA, ID_ORDEN_COMPRA FROM"& _ 
                " DETALLE_ORDEN_COMPRA WHERE (ID_DETALLE_ORDEN_COMPRA = @ID_DETALLE_ORDEN_COMPRA)"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UMEDIDA_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORU_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALORT_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ORDEN_COMPRA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString

        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_DETALLE_ORDEN_COMPRA, ID_SECUENCIAL_ITEM, UMEDIDA_DETALLE_ORDEN_COMPRA,"& _ 
                " CANTIDAD_DETALLE_ORDEN_COMPRA, VALORU_DETALLE_ORDEN_COMPRA, VALORT_DETALLE_ORDE"& _ 
                "N_COMPRA, ESTADO_DETALLE_ORDEN_COMPRA, ID_ORDEN_COMPRA FROM dbo.DETALLE_ORDEN_CO"& _ 
                "MPRA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetOrdenCompra.DETALLE_ORDEN_COMPRADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetOrdenCompra.DETALLE_ORDEN_COMPRADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetOrdenCompra.DETALLE_ORDEN_COMPRADataTable = New DataSetOrdenCompra.DETALLE_ORDEN_COMPRADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetOrdenCompra.DETALLE_ORDEN_COMPRADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetOrdenCompra) As Integer
            Return Me.Adapter.Update(dataSet, "DETALLE_ORDEN_COMPRA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_DETALLE_ORDEN_COMPRA As Long, ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_UMEDIDA_DETALLE_ORDEN_COMPRA As String, ByVal Original_CANTIDAD_DETALLE_ORDEN_COMPRA As Integer, ByVal Original_VALORU_DETALLE_ORDEN_COMPRA As Decimal, ByVal Original_VALORT_DETALLE_ORDEN_COMPRA As Decimal, ByVal Original_ESTADO_DETALLE_ORDEN_COMPRA As String, ByVal Original_ID_ORDEN_COMPRA As Long) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_DETALLE_ORDEN_COMPRA,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            If (Original_UMEDIDA_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UMEDIDA_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UMEDIDA_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CANTIDAD_DETALLE_ORDEN_COMPRA,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_VALORU_DETALLE_ORDEN_COMPRA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_VALORT_DETALLE_ORDEN_COMPRA,Decimal)
            If (Original_ESTADO_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ESTADO_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ID_ORDEN_COMPRA,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_DETALLE_ORDEN_COMPRA As Long, ByVal ID_SECUENCIAL_ITEM As Long, ByVal UMEDIDA_DETALLE_ORDEN_COMPRA As String, ByVal CANTIDAD_DETALLE_ORDEN_COMPRA As Integer, ByVal VALORU_DETALLE_ORDEN_COMPRA As Decimal, ByVal VALORT_DETALLE_ORDEN_COMPRA As Decimal, ByVal ESTADO_DETALLE_ORDEN_COMPRA As String, ByVal ID_ORDEN_COMPRA As Long) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_DETALLE_ORDEN_COMPRA,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (UMEDIDA_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UMEDIDA_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UMEDIDA_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CANTIDAD_DETALLE_ORDEN_COMPRA,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(VALORU_DETALLE_ORDEN_COMPRA,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(VALORT_DETALLE_ORDEN_COMPRA,Decimal)
            If (ESTADO_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ESTADO_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_ORDEN_COMPRA,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_DETALLE_ORDEN_COMPRA As Long,  _
                    ByVal ID_SECUENCIAL_ITEM As Long,  _
                    ByVal UMEDIDA_DETALLE_ORDEN_COMPRA As String,  _
                    ByVal CANTIDAD_DETALLE_ORDEN_COMPRA As Integer,  _
                    ByVal VALORU_DETALLE_ORDEN_COMPRA As Decimal,  _
                    ByVal VALORT_DETALLE_ORDEN_COMPRA As Decimal,  _
                    ByVal ESTADO_DETALLE_ORDEN_COMPRA As String,  _
                    ByVal ID_ORDEN_COMPRA As Long,  _
                    ByVal Original_ID_DETALLE_ORDEN_COMPRA As Long,  _
                    ByVal Original_ID_SECUENCIAL_ITEM As Long,  _
                    ByVal Original_UMEDIDA_DETALLE_ORDEN_COMPRA As String,  _
                    ByVal Original_CANTIDAD_DETALLE_ORDEN_COMPRA As Integer,  _
                    ByVal Original_VALORU_DETALLE_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_VALORT_DETALLE_ORDEN_COMPRA As Decimal,  _
                    ByVal Original_ESTADO_DETALLE_ORDEN_COMPRA As String,  _
                    ByVal Original_ID_ORDEN_COMPRA As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_DETALLE_ORDEN_COMPRA,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (UMEDIDA_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UMEDIDA_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UMEDIDA_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CANTIDAD_DETALLE_ORDEN_COMPRA,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(VALORU_DETALLE_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(VALORT_DETALLE_ORDEN_COMPRA,Decimal)
            If (ESTADO_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ESTADO_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_ORDEN_COMPRA,Long)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ID_DETALLE_ORDEN_COMPRA,Long)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            If (Original_UMEDIDA_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UMEDIDA_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_UMEDIDA_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CANTIDAD_DETALLE_ORDEN_COMPRA,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_VALORU_DETALLE_ORDEN_COMPRA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_VALORT_DETALLE_ORDEN_COMPRA,Decimal)
            If (Original_ESTADO_DETALLE_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_DETALLE_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ESTADO_DETALLE_ORDEN_COMPRA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ID_ORDEN_COMPRA,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_SECUENCIAL_ITEM As Long, ByVal UMEDIDA_DETALLE_ORDEN_COMPRA As String, ByVal CANTIDAD_DETALLE_ORDEN_COMPRA As Integer, ByVal VALORU_DETALLE_ORDEN_COMPRA As Decimal, ByVal VALORT_DETALLE_ORDEN_COMPRA As Decimal, ByVal ESTADO_DETALLE_ORDEN_COMPRA As String, ByVal ID_ORDEN_COMPRA As Long, ByVal Original_ID_DETALLE_ORDEN_COMPRA As Long, ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_UMEDIDA_DETALLE_ORDEN_COMPRA As String, ByVal Original_CANTIDAD_DETALLE_ORDEN_COMPRA As Integer, ByVal Original_VALORU_DETALLE_ORDEN_COMPRA As Decimal, ByVal Original_VALORT_DETALLE_ORDEN_COMPRA As Decimal, ByVal Original_ESTADO_DETALLE_ORDEN_COMPRA As String, ByVal Original_ID_ORDEN_COMPRA As Long) As Integer
            Return Me.Update(Original_ID_DETALLE_ORDEN_COMPRA, ID_SECUENCIAL_ITEM, UMEDIDA_DETALLE_ORDEN_COMPRA, CANTIDAD_DETALLE_ORDEN_COMPRA, VALORU_DETALLE_ORDEN_COMPRA, VALORT_DETALLE_ORDEN_COMPRA, ESTADO_DETALLE_ORDEN_COMPRA, ID_ORDEN_COMPRA, Original_ID_DETALLE_ORDEN_COMPRA, Original_ID_SECUENCIAL_ITEM, Original_UMEDIDA_DETALLE_ORDEN_COMPRA, Original_CANTIDAD_DETALLE_ORDEN_COMPRA, Original_VALORU_DETALLE_ORDEN_COMPRA, Original_VALORT_DETALLE_ORDEN_COMPRA, Original_ESTADO_DETALLE_ORDEN_COMPRA, Original_ID_ORDEN_COMPRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CIUDADESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CIUDADES"
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("NOMBRE_CIUDADES", "NOMBRE_CIUDADES")
            tableMapping.ColumnMappings.Add("ESTADO_CIUDADES", "ESTADO_CIUDADES")
            tableMapping.ColumnMappings.Add("ID_PROVINCIAS", "ID_PROVINCIAS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CIUDADES] WHERE (([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([EST"& _ 
                "ADO_CIUDADES] = @Original_ESTADO_CIUDADES) AND ([ID_PROVINCIAS] = @Original_ID_P"& _ 
                "ROVINCIAS))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CIUDADES] ([ID_CIUDAD], [NOMBRE_CIUDADES], [ESTADO_CIUDADES], "& _ 
                "[ID_PROVINCIAS]) VALUES (@ID_CIUDAD, @NOMBRE_CIUDADES, @ESTADO_CIUDADES, @ID_PRO"& _ 
                "VINCIAS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FRO"& _ 
                "M CIUDADES WHERE (ID_CIUDAD = @ID_CIUDAD)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CIUDADES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CIUDADES] SET [ID_CIUDAD] = @ID_CIUDAD, [NOMBRE_CIUDADES] = @NOMBRE"& _ 
                "_CIUDADES, [ESTADO_CIUDADES] = @ESTADO_CIUDADES, [ID_PROVINCIAS] = @ID_PROVINCIA"& _ 
                "S WHERE (([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ESTADO_CIUDADES] = @Original_"& _ 
                "ESTADO_CIUDADES) AND ([ID_PROVINCIAS] = @Original_ID_PROVINCIAS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CI"& _ 
                "UDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FROM CIUDADES WHERE (ID_CI"& _ 
                "UDAD = @ID_CIUDAD)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CIUDADES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FROM dbo.CIUDAD"& _ 
                "ES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetOrdenCompra.CIUDADESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetOrdenCompra.CIUDADESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetOrdenCompra.CIUDADESDataTable = New DataSetOrdenCompra.CIUDADESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetOrdenCompra.CIUDADESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetOrdenCompra) As Integer
            Return Me.Adapter.Update(dataSet, "CIUDADES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_CIUDADES,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CIUDAD,Integer)
            If (NOMBRE_CIUDADES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CIUDADES")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_CIUDADES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ESTADO_CIUDADES,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CIUDAD,Integer)
            If (NOMBRE_CIUDADES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CIUDADES")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_CIUDADES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ESTADO_CIUDADES,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_PROVINCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ESTADO_CIUDADES,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Return Me.Update(Original_ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS, Original_ID_CIUDAD, Original_ESTADO_CIUDADES, Original_ID_PROVINCIAS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SECUENCIAL_ITEMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SECUENCIAL_ITEM"
            tableMapping.ColumnMappings.Add("ID_SECUENCIAL_ITEM", "ID_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("CODIGO_SECUENCIAL_ITEM", "CODIGO_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("NOMBRE_SECUENCIAL_ITEM", "NOMBRE_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("FECHA_SECUENCIAL_ITEM", "FECHA_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("ID_MARCA", "ID_MARCA")
            tableMapping.ColumnMappings.Add("ID_MODELO", "ID_MODELO")
            tableMapping.ColumnMappings.Add("ID_MATERIAL", "ID_MATERIAL")
            tableMapping.ColumnMappings.Add("ID_COLOR", "ID_COLOR")
            tableMapping.ColumnMappings.Add("ID_UNIDAD_MEDIDA", "ID_UNIDAD_MEDIDA")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ESTADO_SECUENCIAL_ITEM", "ESTADO_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("ID_SUB_GRUPO_ITEM", "ID_SUB_GRUPO_ITEM")
            tableMapping.ColumnMappings.Add("COSTO", "COSTO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SECUENCIAL_ITEM] WHERE (([ID_SECUENCIAL_ITEM] = @Original_ID_S"& _ 
                "ECUENCIAL_ITEM) AND ([FECHA_SECUENCIAL_ITEM] = @Original_FECHA_SECUENCIAL_ITEM) "& _ 
                "AND ([ID_MARCA] = @Original_ID_MARCA) AND ([ID_MODELO] = @Original_ID_MODELO) AN"& _ 
                "D ([ID_MATERIAL] = @Original_ID_MATERIAL) AND ([ID_COLOR] = @Original_ID_COLOR) "& _ 
                "AND ([ID_UNIDAD_MEDIDA] = @Original_ID_UNIDAD_MEDIDA) AND ([ESTADO_SECUENCIAL_IT"& _ 
                "EM] = @Original_ESTADO_SECUENCIAL_ITEM) AND ((@IsNull_ID_LOTE = 1 AND [ID_LOTE] "& _ 
                "IS NULL) OR ([ID_LOTE] = @Original_ID_LOTE)) AND ([ID_SUB_GRUPO_ITEM] = @Origina"& _ 
                "l_ID_SUB_GRUPO_ITEM) AND ([COSTO] = @Original_COSTO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_LOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SECUENCIAL_ITEM] ([ID_SECUENCIAL_ITEM], [CODIGO_SECUENCIAL_ITE"& _ 
                "M], [NOMBRE_SECUENCIAL_ITEM], [FECHA_SECUENCIAL_ITEM], [ID_MARCA], [ID_MODELO], "& _ 
                "[ID_MATERIAL], [ID_COLOR], [ID_UNIDAD_MEDIDA], [DESCRIPCION], [ESTADO_SECUENCIAL"& _ 
                "_ITEM], [ID_LOTE], [ID_SUB_GRUPO_ITEM], [COSTO]) VALUES (@ID_SECUENCIAL_ITEM, @C"& _ 
                "ODIGO_SECUENCIAL_ITEM, @NOMBRE_SECUENCIAL_ITEM, @FECHA_SECUENCIAL_ITEM, @ID_MARC"& _ 
                "A, @ID_MODELO, @ID_MATERIAL, @ID_COLOR, @ID_UNIDAD_MEDIDA, @DESCRIPCION, @ESTADO"& _ 
                "_SECUENCIAL_ITEM, @ID_LOTE, @ID_SUB_GRUPO_ITEM, @COSTO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_SECUENCIAL_I"& _ 
                "TEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_M"& _ 
                "ARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SE"& _ 
                "CUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM SECUENCIAL_ITEM WHERE (ID_"& _ 
                "SECUENCIAL_ITEM = @ID_SECUENCIAL_ITEM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SECUENCIAL_ITEM] SET [ID_SECUENCIAL_ITEM] = @ID_SECUENCIAL_ITEM, [C"& _ 
                "ODIGO_SECUENCIAL_ITEM] = @CODIGO_SECUENCIAL_ITEM, [NOMBRE_SECUENCIAL_ITEM] = @NO"& _ 
                "MBRE_SECUENCIAL_ITEM, [FECHA_SECUENCIAL_ITEM] = @FECHA_SECUENCIAL_ITEM, [ID_MARC"& _ 
                "A] = @ID_MARCA, [ID_MODELO] = @ID_MODELO, [ID_MATERIAL] = @ID_MATERIAL, [ID_COLO"& _ 
                "R] = @ID_COLOR, [ID_UNIDAD_MEDIDA] = @ID_UNIDAD_MEDIDA, [DESCRIPCION] = @DESCRIP"& _ 
                "CION, [ESTADO_SECUENCIAL_ITEM] = @ESTADO_SECUENCIAL_ITEM, [ID_LOTE] = @ID_LOTE, "& _ 
                "[ID_SUB_GRUPO_ITEM] = @ID_SUB_GRUPO_ITEM, [COSTO] = @COSTO WHERE (([ID_SECUENCIA"& _ 
                "L_ITEM] = @Original_ID_SECUENCIAL_ITEM) AND ([FECHA_SECUENCIAL_ITEM] = @Original"& _ 
                "_FECHA_SECUENCIAL_ITEM) AND ([ID_MARCA] = @Original_ID_MARCA) AND ([ID_MODELO] ="& _ 
                " @Original_ID_MODELO) AND ([ID_MATERIAL] = @Original_ID_MATERIAL) AND ([ID_COLOR"& _ 
                "] = @Original_ID_COLOR) AND ([ID_UNIDAD_MEDIDA] = @Original_ID_UNIDAD_MEDIDA) AN"& _ 
                "D ([ESTADO_SECUENCIAL_ITEM] = @Original_ESTADO_SECUENCIAL_ITEM) AND ((@IsNull_ID"& _ 
                "_LOTE = 1 AND [ID_LOTE] IS NULL) OR ([ID_LOTE] = @Original_ID_LOTE)) AND ([ID_SU"& _ 
                "B_GRUPO_ITEM] = @Original_ID_SUB_GRUPO_ITEM) AND ([COSTO] = @Original_COSTO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA"& _ 
                "_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, "& _ 
                "DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM SECU"& _ 
                "ENCIAL_ITEM WHERE (ID_SECUENCIAL_ITEM = @ID_SECUENCIAL_ITEM)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_LOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_"& _ 
                "SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, D"& _ 
                "ESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM dbo.S"& _ 
                "ECUENCIAL_ITEM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetOrdenCompra.SECUENCIAL_ITEMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetOrdenCompra.SECUENCIAL_ITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetOrdenCompra.SECUENCIAL_ITEMDataTable = New DataSetOrdenCompra.SECUENCIAL_ITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetOrdenCompra.SECUENCIAL_ITEMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetOrdenCompra) As Integer
            Return Me.Adapter.Update(dataSet, "SECUENCIAL_ITEM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_FECHA_SECUENCIAL_ITEM As Date, ByVal Original_ID_MARCA As Integer, ByVal Original_ID_MODELO As Integer, ByVal Original_ID_MATERIAL As Integer, ByVal Original_ID_COLOR As Integer, ByVal Original_ID_UNIDAD_MEDIDA As Integer, ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer, ByVal Original_ID_LOTE As Global.System.Nullable(Of Long), ByVal Original_ID_SUB_GRUPO_ITEM As Long, ByVal Original_COSTO As Decimal) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_MARCA,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_MODELO,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ID_MATERIAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_COLOR,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_UNIDAD_MEDIDA,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ESTADO_SECUENCIAL_ITEM,Integer)
            If (Original_ID_LOTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_LOTE.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_SECUENCIAL_ITEM As Long, ByVal CODIGO_SECUENCIAL_ITEM As String, ByVal NOMBRE_SECUENCIAL_ITEM As String, ByVal FECHA_SECUENCIAL_ITEM As Date, ByVal ID_MARCA As Integer, ByVal ID_MODELO As Integer, ByVal ID_MATERIAL As Integer, ByVal ID_COLOR As Integer, ByVal ID_UNIDAD_MEDIDA As Integer, ByVal DESCRIPCION As String, ByVal ESTADO_SECUENCIAL_ITEM As Integer, ByVal ID_LOTE As Global.System.Nullable(Of Long), ByVal ID_SUB_GRUPO_ITEM As Long, ByVal COSTO As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (CODIGO_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_SECUENCIAL_ITEM")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_SECUENCIAL_ITEM,String)
            End If
            If (NOMBRE_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_SECUENCIAL_ITEM")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRE_SECUENCIAL_ITEM,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_MARCA,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_MODELO,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ID_MATERIAL,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_COLOR,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID_UNIDAD_MEDIDA,Integer)
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ESTADO_SECUENCIAL_ITEM,Integer)
            If (ID_LOTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_LOTE.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_SECUENCIAL_ITEM As Long,  _
                    ByVal CODIGO_SECUENCIAL_ITEM As String,  _
                    ByVal NOMBRE_SECUENCIAL_ITEM As String,  _
                    ByVal FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal ID_MARCA As Integer,  _
                    ByVal ID_MODELO As Integer,  _
                    ByVal ID_MATERIAL As Integer,  _
                    ByVal ID_COLOR As Integer,  _
                    ByVal ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal COSTO As Decimal,  _
                    ByVal Original_ID_SECUENCIAL_ITEM As Long,  _
                    ByVal Original_FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal Original_ID_MARCA As Integer,  _
                    ByVal Original_ID_MODELO As Integer,  _
                    ByVal Original_ID_MATERIAL As Integer,  _
                    ByVal Original_ID_COLOR As Integer,  _
                    ByVal Original_ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal Original_ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal Original_COSTO As Decimal) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (CODIGO_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_SECUENCIAL_ITEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_SECUENCIAL_ITEM,String)
            End If
            If (NOMBRE_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_SECUENCIAL_ITEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRE_SECUENCIAL_ITEM,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_MARCA,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_MODELO,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ID_MATERIAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_COLOR,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ID_UNIDAD_MEDIDA,Integer)
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ESTADO_SECUENCIAL_ITEM,Integer)
            If (ID_LOTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_LOTE.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(COSTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ID_MARCA,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID_MODELO,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_MATERIAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ID_COLOR,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_UNIDAD_MEDIDA,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ESTADO_SECUENCIAL_ITEM,Integer)
            If (Original_ID_LOTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ID_LOTE.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_SECUENCIAL_ITEM As String,  _
                    ByVal NOMBRE_SECUENCIAL_ITEM As String,  _
                    ByVal FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal ID_MARCA As Integer,  _
                    ByVal ID_MODELO As Integer,  _
                    ByVal ID_MATERIAL As Integer,  _
                    ByVal ID_COLOR As Integer,  _
                    ByVal ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal COSTO As Decimal,  _
                    ByVal Original_ID_SECUENCIAL_ITEM As Long,  _
                    ByVal Original_FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal Original_ID_MARCA As Integer,  _
                    ByVal Original_ID_MODELO As Integer,  _
                    ByVal Original_ID_MATERIAL As Integer,  _
                    ByVal Original_ID_COLOR As Integer,  _
                    ByVal Original_ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal Original_ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal Original_COSTO As Decimal) As Integer
            Return Me.Update(Original_ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO, Original_ID_SECUENCIAL_ITEM, Original_FECHA_SECUENCIAL_ITEM, Original_ID_MARCA, Original_ID_MODELO, Original_ID_MATERIAL, Original_ID_COLOR, Original_ID_UNIDAD_MEDIDA, Original_ESTADO_SECUENCIAL_ITEM, Original_ID_LOTE, Original_ID_SUB_GRUPO_ITEM, Original_COSTO)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _oRDEN_COMPRATableAdapter As ORDEN_COMPRATableAdapter
        
        Private _pROVEEDOR_GENERALTableAdapter As PROVEEDOR_GENERALTableAdapter
        
        Private _dETALLE_ORDEN_COMPRATableAdapter As DETALLE_ORDEN_COMPRATableAdapter
        
        Private _cIUDADESTableAdapter As CIUDADESTableAdapter
        
        Private _sECUENCIAL_ITEMTableAdapter As SECUENCIAL_ITEMTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ORDEN_COMPRATableAdapter() As ORDEN_COMPRATableAdapter
            Get
                Return Me._oRDEN_COMPRATableAdapter
            End Get
            Set
                Me._oRDEN_COMPRATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PROVEEDOR_GENERALTableAdapter() As PROVEEDOR_GENERALTableAdapter
            Get
                Return Me._pROVEEDOR_GENERALTableAdapter
            End Get
            Set
                Me._pROVEEDOR_GENERALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DETALLE_ORDEN_COMPRATableAdapter() As DETALLE_ORDEN_COMPRATableAdapter
            Get
                Return Me._dETALLE_ORDEN_COMPRATableAdapter
            End Get
            Set
                Me._dETALLE_ORDEN_COMPRATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CIUDADESTableAdapter() As CIUDADESTableAdapter
            Get
                Return Me._cIUDADESTableAdapter
            End Get
            Set
                Me._cIUDADESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SECUENCIAL_ITEMTableAdapter() As SECUENCIAL_ITEMTableAdapter
            Get
                Return Me._sECUENCIAL_ITEMTableAdapter
            End Get
            Set
                Me._sECUENCIAL_ITEMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._oRDEN_COMPRATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oRDEN_COMPRATableAdapter.Connection) Is Nothing)) Then
                    Return Me._oRDEN_COMPRATableAdapter.Connection
                End If
                If ((Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pROVEEDOR_GENERALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pROVEEDOR_GENERALTableAdapter.Connection
                End If
                If ((Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dETALLE_ORDEN_COMPRATableAdapter.Connection) Is Nothing)) Then
                    Return Me._dETALLE_ORDEN_COMPRATableAdapter.Connection
                End If
                If ((Not (Me._cIUDADESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cIUDADESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cIUDADESTableAdapter.Connection
                End If
                If ((Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sECUENCIAL_ITEMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sECUENCIAL_ITEMTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSetOrdenCompra, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pROVEEDOR_GENERALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oRDEN_COMPRATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DETALLE_ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dETALLE_ORDEN_COMPRATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSetOrdenCompra, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pROVEEDOR_GENERALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oRDEN_COMPRATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DETALLE_ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dETALLE_ORDEN_COMPRATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSetOrdenCompra, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DETALLE_ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dETALLE_ORDEN_COMPRATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ORDEN_COMPRA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oRDEN_COMPRATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pROVEEDOR_GENERALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSetOrdenCompra) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._oRDEN_COMPRATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oRDEN_COMPRATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pROVEEDOR_GENERALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dETALLE_ORDEN_COMPRATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cIUDADESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cIUDADESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sECUENCIAL_ITEMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oRDEN_COMPRATableAdapter, Me._oRDEN_COMPRATableAdapter.Connection)
                    Me._oRDEN_COMPRATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oRDEN_COMPRATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oRDEN_COMPRATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oRDEN_COMPRATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oRDEN_COMPRATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pROVEEDOR_GENERALTableAdapter, Me._pROVEEDOR_GENERALTableAdapter.Connection)
                    Me._pROVEEDOR_GENERALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVEEDOR_GENERALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pROVEEDOR_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pROVEEDOR_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pROVEEDOR_GENERALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dETALLE_ORDEN_COMPRATableAdapter, Me._dETALLE_ORDEN_COMPRATableAdapter.Connection)
                    Me._dETALLE_ORDEN_COMPRATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dETALLE_ORDEN_COMPRATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dETALLE_ORDEN_COMPRATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dETALLE_ORDEN_COMPRATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dETALLE_ORDEN_COMPRATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cIUDADESTableAdapter, Me._cIUDADESTableAdapter.Connection)
                    Me._cIUDADESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cIUDADESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cIUDADESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cIUDADESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cIUDADESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sECUENCIAL_ITEMTableAdapter, Me._sECUENCIAL_ITEMTableAdapter.Connection)
                    Me._sECUENCIAL_ITEMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sECUENCIAL_ITEMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sECUENCIAL_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sECUENCIAL_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sECUENCIAL_ITEMTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._oRDEN_COMPRATableAdapter) Is Nothing) Then
                    Me._oRDEN_COMPRATableAdapter.Connection = CType(revertConnections(Me._oRDEN_COMPRATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oRDEN_COMPRATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pROVEEDOR_GENERALTableAdapter) Is Nothing) Then
                    Me._pROVEEDOR_GENERALTableAdapter.Connection = CType(revertConnections(Me._pROVEEDOR_GENERALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVEEDOR_GENERALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dETALLE_ORDEN_COMPRATableAdapter) Is Nothing) Then
                    Me._dETALLE_ORDEN_COMPRATableAdapter.Connection = CType(revertConnections(Me._dETALLE_ORDEN_COMPRATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dETALLE_ORDEN_COMPRATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    Me._cIUDADESTableAdapter.Connection = CType(revertConnections(Me._cIUDADESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cIUDADESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    Me._sECUENCIAL_ITEMTableAdapter.Connection = CType(revertConnections(Me._sECUENCIAL_ITEMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sECUENCIAL_ITEMTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
