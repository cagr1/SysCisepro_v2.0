'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsEntregaUNIFORMES"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsEntregaUNIFORMES
    Inherits Global.System.Data.DataSet
    
    Private tableDETALLE_UNIFORMES As DETALLE_UNIFORMESDataTable
    
    Private tableKARDEX As KARDEXDataTable
    
    Private tableSECUENCIAL_ITEM As SECUENCIAL_ITEMDataTable
    
    Private tableENTREGA_UNIFORMES As ENTREGA_UNIFORMESDataTable
    
    Private relationKARDEX_DETALLE_UNIFORMES As Global.System.Data.DataRelation
    
    Private relationSECUENCIAL_ITEM_KARDEX As Global.System.Data.DataRelation
    
    Private relationFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DETALLE_UNIFORMES")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLE_UNIFORMESDataTable(ds.Tables("DETALLE_UNIFORMES")))
            End If
            If (Not (ds.Tables("KARDEX")) Is Nothing) Then
                MyBase.Tables.Add(New KARDEXDataTable(ds.Tables("KARDEX")))
            End If
            If (Not (ds.Tables("SECUENCIAL_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New SECUENCIAL_ITEMDataTable(ds.Tables("SECUENCIAL_ITEM")))
            End If
            If (Not (ds.Tables("ENTREGA_UNIFORMES")) Is Nothing) Then
                MyBase.Tables.Add(New ENTREGA_UNIFORMESDataTable(ds.Tables("ENTREGA_UNIFORMES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DETALLE_UNIFORMES() As DETALLE_UNIFORMESDataTable
        Get
            Return Me.tableDETALLE_UNIFORMES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KARDEX() As KARDEXDataTable
        Get
            Return Me.tableKARDEX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SECUENCIAL_ITEM() As SECUENCIAL_ITEMDataTable
        Get
            Return Me.tableSECUENCIAL_ITEM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENTREGA_UNIFORMES() As ENTREGA_UNIFORMESDataTable
        Get
            Return Me.tableENTREGA_UNIFORMES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsEntregaUNIFORMES = CType(MyBase.Clone,dsEntregaUNIFORMES)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DETALLE_UNIFORMES")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLE_UNIFORMESDataTable(ds.Tables("DETALLE_UNIFORMES")))
            End If
            If (Not (ds.Tables("KARDEX")) Is Nothing) Then
                MyBase.Tables.Add(New KARDEXDataTable(ds.Tables("KARDEX")))
            End If
            If (Not (ds.Tables("SECUENCIAL_ITEM")) Is Nothing) Then
                MyBase.Tables.Add(New SECUENCIAL_ITEMDataTable(ds.Tables("SECUENCIAL_ITEM")))
            End If
            If (Not (ds.Tables("ENTREGA_UNIFORMES")) Is Nothing) Then
                MyBase.Tables.Add(New ENTREGA_UNIFORMESDataTable(ds.Tables("ENTREGA_UNIFORMES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDETALLE_UNIFORMES = CType(MyBase.Tables("DETALLE_UNIFORMES"),DETALLE_UNIFORMESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDETALLE_UNIFORMES) Is Nothing) Then
                Me.tableDETALLE_UNIFORMES.InitVars
            End If
        End If
        Me.tableKARDEX = CType(MyBase.Tables("KARDEX"),KARDEXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKARDEX) Is Nothing) Then
                Me.tableKARDEX.InitVars
            End If
        End If
        Me.tableSECUENCIAL_ITEM = CType(MyBase.Tables("SECUENCIAL_ITEM"),SECUENCIAL_ITEMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSECUENCIAL_ITEM) Is Nothing) Then
                Me.tableSECUENCIAL_ITEM.InitVars
            End If
        End If
        Me.tableENTREGA_UNIFORMES = CType(MyBase.Tables("ENTREGA_UNIFORMES"),ENTREGA_UNIFORMESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENTREGA_UNIFORMES) Is Nothing) Then
                Me.tableENTREGA_UNIFORMES.InitVars
            End If
        End If
        Me.relationKARDEX_DETALLE_UNIFORMES = Me.Relations("KARDEX_DETALLE_UNIFORMES")
        Me.relationSECUENCIAL_ITEM_KARDEX = Me.Relations("SECUENCIAL_ITEM_KARDEX")
        Me.relationFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES = Me.Relations("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsEntregaUNIFORMES"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsEntregaUNIFORMES.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDETALLE_UNIFORMES = New DETALLE_UNIFORMESDataTable()
        MyBase.Tables.Add(Me.tableDETALLE_UNIFORMES)
        Me.tableKARDEX = New KARDEXDataTable()
        MyBase.Tables.Add(Me.tableKARDEX)
        Me.tableSECUENCIAL_ITEM = New SECUENCIAL_ITEMDataTable()
        MyBase.Tables.Add(Me.tableSECUENCIAL_ITEM)
        Me.tableENTREGA_UNIFORMES = New ENTREGA_UNIFORMESDataTable()
        MyBase.Tables.Add(Me.tableENTREGA_UNIFORMES)
        Me.relationKARDEX_DETALLE_UNIFORMES = New Global.System.Data.DataRelation("KARDEX_DETALLE_UNIFORMES", New Global.System.Data.DataColumn() {Me.tableKARDEX.ID_KARDEXColumn}, New Global.System.Data.DataColumn() {Me.tableDETALLE_UNIFORMES.ID_KARDEX_DETALLE_UNIFORMESColumn}, false)
        Me.Relations.Add(Me.relationKARDEX_DETALLE_UNIFORMES)
        Me.relationSECUENCIAL_ITEM_KARDEX = New Global.System.Data.DataRelation("SECUENCIAL_ITEM_KARDEX", New Global.System.Data.DataColumn() {Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn}, New Global.System.Data.DataColumn() {Me.tableKARDEX.ID_SECUENCIAL_ITEMColumn}, false)
        Me.Relations.Add(Me.relationSECUENCIAL_ITEM_KARDEX)
        Me.relationFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES = New Global.System.Data.DataRelation("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES", New Global.System.Data.DataColumn() {Me.tableENTREGA_UNIFORMES.ID_UNIFORMESColumn}, New Global.System.Data.DataColumn() {Me.tableDETALLE_UNIFORMES.ID_UNIFORMESColumn}, false)
        Me.Relations.Add(Me.relationFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeDETALLE_UNIFORMES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeKARDEX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSECUENCIAL_ITEM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeENTREGA_UNIFORMES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsEntregaUNIFORMES = New dsEntregaUNIFORMES()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub DETALLE_UNIFORMESRowChangeEventHandler(ByVal sender As Object, ByVal e As DETALLE_UNIFORMESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub KARDEXRowChangeEventHandler(ByVal sender As Object, ByVal e As KARDEXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub SECUENCIAL_ITEMRowChangeEventHandler(ByVal sender As Object, ByVal e As SECUENCIAL_ITEMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ENTREGA_UNIFORMESRowChangeEventHandler(ByVal sender As Object, ByVal e As ENTREGA_UNIFORMESRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DETALLE_UNIFORMESDataTable
        Inherits Global.System.Data.TypedTableBase(Of DETALLE_UNIFORMESRow)
        
        Private columnID_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnID_KARDEX_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnID_DETALLE_KARDEX_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnOBSERVACION_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnESTADO_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnFECHA_RENOVACION_DETALLE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnID_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DETALLE_UNIFORMES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_KARDEX_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_KARDEX_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_DETALLE_KARDEX_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_DETALLE_KARDEX_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACION_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_RENOVACION_DETALLE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_RENOVACION_DETALLE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DETALLE_UNIFORMESRow
            Get
                Return CType(Me.Rows(index),DETALLE_UNIFORMESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_UNIFORMESRowChanging As DETALLE_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_UNIFORMESRowChanged As DETALLE_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_UNIFORMESRowDeleting As DETALLE_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DETALLE_UNIFORMESRowDeleted As DETALLE_UNIFORMESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddDETALLE_UNIFORMESRow(ByVal row As DETALLE_UNIFORMESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddDETALLE_UNIFORMESRow(ByVal ID_DETALLE_UNIFORMES As Long, ByVal parentKARDEXRowByKARDEX_DETALLE_UNIFORMES As KARDEXRow, ByVal ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal OBSERVACION_DETALLE_UNIFORMES As String, ByVal CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal ESTADO_DETALLE_UNIFORMES As Integer, ByVal FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal parentENTREGA_UNIFORMESRowByFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES As ENTREGA_UNIFORMESRow, ByVal OBSERVACION As String) As DETALLE_UNIFORMESRow
            Dim rowDETALLE_UNIFORMESRow As DETALLE_UNIFORMESRow = CType(Me.NewRow,DETALLE_UNIFORMESRow)
            Dim columnValuesArray() As Object = New Object() {ID_DETALLE_UNIFORMES, Nothing, ID_DETALLE_KARDEX_DETALLE_UNIFORMES, OBSERVACION_DETALLE_UNIFORMES, CANTIDAD_DETALLE_UNIFORMES, ESTADO_DETALLE_UNIFORMES, FECHA_RENOVACION_DETALLE_UNIFORMES, Nothing, OBSERVACION}
            If (Not (parentKARDEXRowByKARDEX_DETALLE_UNIFORMES) Is Nothing) Then
                columnValuesArray(1) = parentKARDEXRowByKARDEX_DETALLE_UNIFORMES(0)
            End If
            If (Not (parentENTREGA_UNIFORMESRowByFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES) Is Nothing) Then
                columnValuesArray(7) = parentENTREGA_UNIFORMESRowByFK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES(0)
            End If
            rowDETALLE_UNIFORMESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDETALLE_UNIFORMESRow)
            Return rowDETALLE_UNIFORMESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_DETALLE_UNIFORMES(ByVal ID_DETALLE_UNIFORMES As Long) As DETALLE_UNIFORMESRow
            Return CType(Me.Rows.Find(New Object() {ID_DETALLE_UNIFORMES}),DETALLE_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DETALLE_UNIFORMESDataTable = CType(MyBase.Clone,DETALLE_UNIFORMESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DETALLE_UNIFORMESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_DETALLE_UNIFORMES = MyBase.Columns("ID_DETALLE_UNIFORMES")
            Me.columnID_KARDEX_DETALLE_UNIFORMES = MyBase.Columns("ID_KARDEX_DETALLE_UNIFORMES")
            Me.columnID_DETALLE_KARDEX_DETALLE_UNIFORMES = MyBase.Columns("ID_DETALLE_KARDEX_DETALLE_UNIFORMES")
            Me.columnOBSERVACION_DETALLE_UNIFORMES = MyBase.Columns("OBSERVACION_DETALLE_UNIFORMES")
            Me.columnCANTIDAD_DETALLE_UNIFORMES = MyBase.Columns("CANTIDAD_DETALLE_UNIFORMES")
            Me.columnESTADO_DETALLE_UNIFORMES = MyBase.Columns("ESTADO_DETALLE_UNIFORMES")
            Me.columnFECHA_RENOVACION_DETALLE_UNIFORMES = MyBase.Columns("FECHA_RENOVACION_DETALLE_UNIFORMES")
            Me.columnID_UNIFORMES = MyBase.Columns("ID_UNIFORMES")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("ID_DETALLE_UNIFORMES", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_DETALLE_UNIFORMES)
            Me.columnID_KARDEX_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("ID_KARDEX_DETALLE_UNIFORMES", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_KARDEX_DETALLE_UNIFORMES)
            Me.columnID_DETALLE_KARDEX_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("ID_DETALLE_KARDEX_DETALLE_UNIFORMES", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_DETALLE_KARDEX_DETALLE_UNIFORMES)
            Me.columnOBSERVACION_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("OBSERVACION_DETALLE_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION_DETALLE_UNIFORMES)
            Me.columnCANTIDAD_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("CANTIDAD_DETALLE_UNIFORMES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_DETALLE_UNIFORMES)
            Me.columnESTADO_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("ESTADO_DETALLE_UNIFORMES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_DETALLE_UNIFORMES)
            Me.columnFECHA_RENOVACION_DETALLE_UNIFORMES = New Global.System.Data.DataColumn("FECHA_RENOVACION_DETALLE_UNIFORMES", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_RENOVACION_DETALLE_UNIFORMES)
            Me.columnID_UNIFORMES = New Global.System.Data.DataColumn("ID_UNIFORMES", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UNIFORMES)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_DETALLE_UNIFORMES}, true))
            Me.columnID_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnID_DETALLE_UNIFORMES.Unique = true
            Me.columnID_KARDEX_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnID_DETALLE_KARDEX_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnOBSERVACION_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnOBSERVACION_DETALLE_UNIFORMES.MaxLength = 2147483647
            Me.columnCANTIDAD_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnESTADO_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnFECHA_RENOVACION_DETALLE_UNIFORMES.AllowDBNull = false
            Me.columnID_UNIFORMES.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewDETALLE_UNIFORMESRow() As DETALLE_UNIFORMESRow
            Return CType(Me.NewRow,DETALLE_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DETALLE_UNIFORMESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DETALLE_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DETALLE_UNIFORMESRowChangedEvent) Is Nothing) Then
                RaiseEvent DETALLE_UNIFORMESRowChanged(Me, New DETALLE_UNIFORMESRowChangeEvent(CType(e.Row,DETALLE_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DETALLE_UNIFORMESRowChangingEvent) Is Nothing) Then
                RaiseEvent DETALLE_UNIFORMESRowChanging(Me, New DETALLE_UNIFORMESRowChangeEvent(CType(e.Row,DETALLE_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DETALLE_UNIFORMESRowDeletedEvent) Is Nothing) Then
                RaiseEvent DETALLE_UNIFORMESRowDeleted(Me, New DETALLE_UNIFORMESRowChangeEvent(CType(e.Row,DETALLE_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DETALLE_UNIFORMESRowDeletingEvent) Is Nothing) Then
                RaiseEvent DETALLE_UNIFORMESRowDeleting(Me, New DETALLE_UNIFORMESRowChangeEvent(CType(e.Row,DETALLE_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveDETALLE_UNIFORMESRow(ByVal row As DETALLE_UNIFORMESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEntregaUNIFORMES = New dsEntregaUNIFORMES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DETALLE_UNIFORMESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KARDEXDataTable
        Inherits Global.System.Data.TypedTableBase(Of KARDEXRow)
        
        Private columnID_KARDEX As Global.System.Data.DataColumn
        
        Private columnID_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KARDEX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_KARDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_KARDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KARDEXRow
            Get
                Return CType(Me.Rows(index),KARDEXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event KARDEXRowChanging As KARDEXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event KARDEXRowChanged As KARDEXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event KARDEXRowDeleting As KARDEXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event KARDEXRowDeleted As KARDEXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddKARDEXRow(ByVal row As KARDEXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddKARDEXRow(ByVal ID_KARDEX As Long, ByVal parentSECUENCIAL_ITEMRowBySECUENCIAL_ITEM_KARDEX As SECUENCIAL_ITEMRow, ByVal FECHA As Date, ByVal CANTIDAD As Integer, ByVal ESTADO As Integer) As KARDEXRow
            Dim rowKARDEXRow As KARDEXRow = CType(Me.NewRow,KARDEXRow)
            Dim columnValuesArray() As Object = New Object() {ID_KARDEX, Nothing, FECHA, CANTIDAD, ESTADO}
            If (Not (parentSECUENCIAL_ITEMRowBySECUENCIAL_ITEM_KARDEX) Is Nothing) Then
                columnValuesArray(1) = parentSECUENCIAL_ITEMRowBySECUENCIAL_ITEM_KARDEX(0)
            End If
            rowKARDEXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKARDEXRow)
            Return rowKARDEXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_KARDEX(ByVal ID_KARDEX As Long) As KARDEXRow
            Return CType(Me.Rows.Find(New Object() {ID_KARDEX}),KARDEXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KARDEXDataTable = CType(MyBase.Clone,KARDEXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KARDEXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_KARDEX = MyBase.Columns("ID_KARDEX")
            Me.columnID_SECUENCIAL_ITEM = MyBase.Columns("ID_SECUENCIAL_ITEM")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnESTADO = MyBase.Columns("ESTADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_KARDEX = New Global.System.Data.DataColumn("ID_KARDEX", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_KARDEX)
            Me.columnID_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ID_SECUENCIAL_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SECUENCIAL_ITEM)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_KARDEX}, true))
            Me.columnID_KARDEX.AllowDBNull = false
            Me.columnID_KARDEX.Unique = true
            Me.columnID_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnFECHA.AllowDBNull = false
            Me.columnCANTIDAD.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewKARDEXRow() As KARDEXRow
            Return CType(Me.NewRow,KARDEXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KARDEXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KARDEXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KARDEXRowChangedEvent) Is Nothing) Then
                RaiseEvent KARDEXRowChanged(Me, New KARDEXRowChangeEvent(CType(e.Row,KARDEXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KARDEXRowChangingEvent) Is Nothing) Then
                RaiseEvent KARDEXRowChanging(Me, New KARDEXRowChangeEvent(CType(e.Row,KARDEXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KARDEXRowDeletedEvent) Is Nothing) Then
                RaiseEvent KARDEXRowDeleted(Me, New KARDEXRowChangeEvent(CType(e.Row,KARDEXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KARDEXRowDeletingEvent) Is Nothing) Then
                RaiseEvent KARDEXRowDeleting(Me, New KARDEXRowChangeEvent(CType(e.Row,KARDEXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveKARDEXRow(ByVal row As KARDEXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEntregaUNIFORMES = New dsEntregaUNIFORMES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KARDEXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SECUENCIAL_ITEMDataTable
        Inherits Global.System.Data.TypedTableBase(Of SECUENCIAL_ITEMRow)
        
        Private columnID_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnCODIGO_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnNOMBRE_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnFECHA_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnID_MARCA As Global.System.Data.DataColumn
        
        Private columnID_MODELO As Global.System.Data.DataColumn
        
        Private columnID_MATERIAL As Global.System.Data.DataColumn
        
        Private columnID_COLOR As Global.System.Data.DataColumn
        
        Private columnID_UNIDAD_MEDIDA As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnESTADO_SECUENCIAL_ITEM As Global.System.Data.DataColumn
        
        Private columnID_LOTE As Global.System.Data.DataColumn
        
        Private columnID_SUB_GRUPO_ITEM As Global.System.Data.DataColumn
        
        Private columnCOSTO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SECUENCIAL_ITEM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MODELOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MODELO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_MATERIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MATERIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_COLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_COLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_UNIDAD_MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UNIDAD_MEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_SECUENCIAL_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SECUENCIAL_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SUB_GRUPO_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SUB_GRUPO_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SECUENCIAL_ITEMRow
            Get
                Return CType(Me.Rows(index),SECUENCIAL_ITEMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowChanging As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowChanged As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowDeleting As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SECUENCIAL_ITEMRowDeleted As SECUENCIAL_ITEMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSECUENCIAL_ITEMRow(ByVal row As SECUENCIAL_ITEMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSECUENCIAL_ITEMRow(ByVal ID_SECUENCIAL_ITEM As Long, ByVal CODIGO_SECUENCIAL_ITEM As String, ByVal NOMBRE_SECUENCIAL_ITEM As String, ByVal FECHA_SECUENCIAL_ITEM As Date, ByVal ID_MARCA As Integer, ByVal ID_MODELO As Integer, ByVal ID_MATERIAL As Integer, ByVal ID_COLOR As Integer, ByVal ID_UNIDAD_MEDIDA As Integer, ByVal DESCRIPCION As String, ByVal ESTADO_SECUENCIAL_ITEM As Integer, ByVal ID_LOTE As Long, ByVal ID_SUB_GRUPO_ITEM As Long, ByVal COSTO As Decimal) As SECUENCIAL_ITEMRow
            Dim rowSECUENCIAL_ITEMRow As SECUENCIAL_ITEMRow = CType(Me.NewRow,SECUENCIAL_ITEMRow)
            Dim columnValuesArray() As Object = New Object() {ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO}
            rowSECUENCIAL_ITEMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSECUENCIAL_ITEMRow)
            Return rowSECUENCIAL_ITEMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_SECUENCIAL_ITEM(ByVal ID_SECUENCIAL_ITEM As Long) As SECUENCIAL_ITEMRow
            Return CType(Me.Rows.Find(New Object() {ID_SECUENCIAL_ITEM}),SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SECUENCIAL_ITEMDataTable = CType(MyBase.Clone,SECUENCIAL_ITEMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SECUENCIAL_ITEMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_SECUENCIAL_ITEM = MyBase.Columns("ID_SECUENCIAL_ITEM")
            Me.columnCODIGO_SECUENCIAL_ITEM = MyBase.Columns("CODIGO_SECUENCIAL_ITEM")
            Me.columnNOMBRE_SECUENCIAL_ITEM = MyBase.Columns("NOMBRE_SECUENCIAL_ITEM")
            Me.columnFECHA_SECUENCIAL_ITEM = MyBase.Columns("FECHA_SECUENCIAL_ITEM")
            Me.columnID_MARCA = MyBase.Columns("ID_MARCA")
            Me.columnID_MODELO = MyBase.Columns("ID_MODELO")
            Me.columnID_MATERIAL = MyBase.Columns("ID_MATERIAL")
            Me.columnID_COLOR = MyBase.Columns("ID_COLOR")
            Me.columnID_UNIDAD_MEDIDA = MyBase.Columns("ID_UNIDAD_MEDIDA")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnESTADO_SECUENCIAL_ITEM = MyBase.Columns("ESTADO_SECUENCIAL_ITEM")
            Me.columnID_LOTE = MyBase.Columns("ID_LOTE")
            Me.columnID_SUB_GRUPO_ITEM = MyBase.Columns("ID_SUB_GRUPO_ITEM")
            Me.columnCOSTO = MyBase.Columns("COSTO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ID_SECUENCIAL_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SECUENCIAL_ITEM)
            Me.columnCODIGO_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("CODIGO_SECUENCIAL_ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_SECUENCIAL_ITEM)
            Me.columnNOMBRE_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("NOMBRE_SECUENCIAL_ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_SECUENCIAL_ITEM)
            Me.columnFECHA_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("FECHA_SECUENCIAL_ITEM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SECUENCIAL_ITEM)
            Me.columnID_MARCA = New Global.System.Data.DataColumn("ID_MARCA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MARCA)
            Me.columnID_MODELO = New Global.System.Data.DataColumn("ID_MODELO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MODELO)
            Me.columnID_MATERIAL = New Global.System.Data.DataColumn("ID_MATERIAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MATERIAL)
            Me.columnID_COLOR = New Global.System.Data.DataColumn("ID_COLOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_COLOR)
            Me.columnID_UNIDAD_MEDIDA = New Global.System.Data.DataColumn("ID_UNIDAD_MEDIDA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UNIDAD_MEDIDA)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnESTADO_SECUENCIAL_ITEM = New Global.System.Data.DataColumn("ESTADO_SECUENCIAL_ITEM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SECUENCIAL_ITEM)
            Me.columnID_LOTE = New Global.System.Data.DataColumn("ID_LOTE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LOTE)
            Me.columnID_SUB_GRUPO_ITEM = New Global.System.Data.DataColumn("ID_SUB_GRUPO_ITEM", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SUB_GRUPO_ITEM)
            Me.columnCOSTO = New Global.System.Data.DataColumn("COSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_SECUENCIAL_ITEM}, true))
            Me.columnID_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_SECUENCIAL_ITEM.Unique = true
            Me.columnCODIGO_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnCODIGO_SECUENCIAL_ITEM.MaxLength = 2147483647
            Me.columnNOMBRE_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnNOMBRE_SECUENCIAL_ITEM.MaxLength = 2147483647
            Me.columnFECHA_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_MARCA.AllowDBNull = false
            Me.columnID_MODELO.AllowDBNull = false
            Me.columnID_MATERIAL.AllowDBNull = false
            Me.columnID_COLOR.AllowDBNull = false
            Me.columnID_UNIDAD_MEDIDA.AllowDBNull = false
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 2147483647
            Me.columnESTADO_SECUENCIAL_ITEM.AllowDBNull = false
            Me.columnID_SUB_GRUPO_ITEM.AllowDBNull = false
            Me.columnCOSTO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSECUENCIAL_ITEMRow() As SECUENCIAL_ITEMRow
            Return CType(Me.NewRow,SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SECUENCIAL_ITEMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SECUENCIAL_ITEMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SECUENCIAL_ITEMRowChangedEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowChanged(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SECUENCIAL_ITEMRowChangingEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowChanging(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SECUENCIAL_ITEMRowDeletedEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowDeleted(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SECUENCIAL_ITEMRowDeletingEvent) Is Nothing) Then
                RaiseEvent SECUENCIAL_ITEMRowDeleting(Me, New SECUENCIAL_ITEMRowChangeEvent(CType(e.Row,SECUENCIAL_ITEMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSECUENCIAL_ITEMRow(ByVal row As SECUENCIAL_ITEMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEntregaUNIFORMES = New dsEntregaUNIFORMES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SECUENCIAL_ITEMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENTREGA_UNIFORMESDataTable
        Inherits Global.System.Data.TypedTableBase(Of ENTREGA_UNIFORMESRow)
        
        Private columnID_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnCODIGO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnVERSION_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnFECHA_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnNOMBRE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnCEDULA_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnCLIENTE_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnFECHA_INGRESO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnREALIZADO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnREVISADO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnAPROBADO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnREGISTRADO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnESTADO_UNIFORMES As Global.System.Data.DataColumn
        
        Private columnOBSERVACION_UNIFORMES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENTREGA_UNIFORMES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VERSION_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVERSION_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULA_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CLIENTE_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENTE_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_INGRESO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_INGRESO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property REALIZADO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREALIZADO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property REVISADO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISADO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property APROBADO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPROBADO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property REGISTRADO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGISTRADO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACION_UNIFORMESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION_UNIFORMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENTREGA_UNIFORMESRow
            Get
                Return CType(Me.Rows(index),ENTREGA_UNIFORMESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ENTREGA_UNIFORMESRowChanging As ENTREGA_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ENTREGA_UNIFORMESRowChanged As ENTREGA_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ENTREGA_UNIFORMESRowDeleting As ENTREGA_UNIFORMESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ENTREGA_UNIFORMESRowDeleted As ENTREGA_UNIFORMESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddENTREGA_UNIFORMESRow(ByVal row As ENTREGA_UNIFORMESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddENTREGA_UNIFORMESRow(ByVal ID_UNIFORMES As Long, ByVal CODIGO_UNIFORMES As String, ByVal VERSION_UNIFORMES As String, ByVal FECHA_UNIFORMES As Date, ByVal NOMBRE_UNIFORMES As String, ByVal CEDULA_UNIFORMES As String, ByVal CLIENTE_UNIFORMES As String, ByVal FECHA_INGRESO_UNIFORMES As Date, ByVal REALIZADO_UNIFORMES As String, ByVal REVISADO_UNIFORMES As String, ByVal APROBADO_UNIFORMES As String, ByVal REGISTRADO_UNIFORMES As String, ByVal ESTADO_UNIFORMES As Integer, ByVal OBSERVACION_UNIFORMES As String) As ENTREGA_UNIFORMESRow
            Dim rowENTREGA_UNIFORMESRow As ENTREGA_UNIFORMESRow = CType(Me.NewRow,ENTREGA_UNIFORMESRow)
            Dim columnValuesArray() As Object = New Object() {ID_UNIFORMES, CODIGO_UNIFORMES, VERSION_UNIFORMES, FECHA_UNIFORMES, NOMBRE_UNIFORMES, CEDULA_UNIFORMES, CLIENTE_UNIFORMES, FECHA_INGRESO_UNIFORMES, REALIZADO_UNIFORMES, REVISADO_UNIFORMES, APROBADO_UNIFORMES, REGISTRADO_UNIFORMES, ESTADO_UNIFORMES, OBSERVACION_UNIFORMES}
            rowENTREGA_UNIFORMESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENTREGA_UNIFORMESRow)
            Return rowENTREGA_UNIFORMESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_UNIFORMES(ByVal ID_UNIFORMES As Long) As ENTREGA_UNIFORMESRow
            Return CType(Me.Rows.Find(New Object() {ID_UNIFORMES}),ENTREGA_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENTREGA_UNIFORMESDataTable = CType(MyBase.Clone,ENTREGA_UNIFORMESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENTREGA_UNIFORMESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_UNIFORMES = MyBase.Columns("ID_UNIFORMES")
            Me.columnCODIGO_UNIFORMES = MyBase.Columns("CODIGO_UNIFORMES")
            Me.columnVERSION_UNIFORMES = MyBase.Columns("VERSION_UNIFORMES")
            Me.columnFECHA_UNIFORMES = MyBase.Columns("FECHA_UNIFORMES")
            Me.columnNOMBRE_UNIFORMES = MyBase.Columns("NOMBRE_UNIFORMES")
            Me.columnCEDULA_UNIFORMES = MyBase.Columns("CEDULA_UNIFORMES")
            Me.columnCLIENTE_UNIFORMES = MyBase.Columns("CLIENTE_UNIFORMES")
            Me.columnFECHA_INGRESO_UNIFORMES = MyBase.Columns("FECHA_INGRESO_UNIFORMES")
            Me.columnREALIZADO_UNIFORMES = MyBase.Columns("REALIZADO_UNIFORMES")
            Me.columnREVISADO_UNIFORMES = MyBase.Columns("REVISADO_UNIFORMES")
            Me.columnAPROBADO_UNIFORMES = MyBase.Columns("APROBADO_UNIFORMES")
            Me.columnREGISTRADO_UNIFORMES = MyBase.Columns("REGISTRADO_UNIFORMES")
            Me.columnESTADO_UNIFORMES = MyBase.Columns("ESTADO_UNIFORMES")
            Me.columnOBSERVACION_UNIFORMES = MyBase.Columns("OBSERVACION_UNIFORMES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_UNIFORMES = New Global.System.Data.DataColumn("ID_UNIFORMES", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_UNIFORMES)
            Me.columnCODIGO_UNIFORMES = New Global.System.Data.DataColumn("CODIGO_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_UNIFORMES)
            Me.columnVERSION_UNIFORMES = New Global.System.Data.DataColumn("VERSION_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVERSION_UNIFORMES)
            Me.columnFECHA_UNIFORMES = New Global.System.Data.DataColumn("FECHA_UNIFORMES", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_UNIFORMES)
            Me.columnNOMBRE_UNIFORMES = New Global.System.Data.DataColumn("NOMBRE_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_UNIFORMES)
            Me.columnCEDULA_UNIFORMES = New Global.System.Data.DataColumn("CEDULA_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA_UNIFORMES)
            Me.columnCLIENTE_UNIFORMES = New Global.System.Data.DataColumn("CLIENTE_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENTE_UNIFORMES)
            Me.columnFECHA_INGRESO_UNIFORMES = New Global.System.Data.DataColumn("FECHA_INGRESO_UNIFORMES", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_INGRESO_UNIFORMES)
            Me.columnREALIZADO_UNIFORMES = New Global.System.Data.DataColumn("REALIZADO_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREALIZADO_UNIFORMES)
            Me.columnREVISADO_UNIFORMES = New Global.System.Data.DataColumn("REVISADO_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISADO_UNIFORMES)
            Me.columnAPROBADO_UNIFORMES = New Global.System.Data.DataColumn("APROBADO_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPROBADO_UNIFORMES)
            Me.columnREGISTRADO_UNIFORMES = New Global.System.Data.DataColumn("REGISTRADO_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGISTRADO_UNIFORMES)
            Me.columnESTADO_UNIFORMES = New Global.System.Data.DataColumn("ESTADO_UNIFORMES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_UNIFORMES)
            Me.columnOBSERVACION_UNIFORMES = New Global.System.Data.DataColumn("OBSERVACION_UNIFORMES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION_UNIFORMES)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_UNIFORMES}, true))
            Me.columnID_UNIFORMES.AllowDBNull = false
            Me.columnID_UNIFORMES.Unique = true
            Me.columnCODIGO_UNIFORMES.AllowDBNull = false
            Me.columnCODIGO_UNIFORMES.MaxLength = 2147483647
            Me.columnVERSION_UNIFORMES.AllowDBNull = false
            Me.columnVERSION_UNIFORMES.MaxLength = 2147483647
            Me.columnFECHA_UNIFORMES.AllowDBNull = false
            Me.columnNOMBRE_UNIFORMES.AllowDBNull = false
            Me.columnNOMBRE_UNIFORMES.MaxLength = 2147483647
            Me.columnCEDULA_UNIFORMES.AllowDBNull = false
            Me.columnCEDULA_UNIFORMES.MaxLength = 2147483647
            Me.columnCLIENTE_UNIFORMES.AllowDBNull = false
            Me.columnCLIENTE_UNIFORMES.MaxLength = 2147483647
            Me.columnFECHA_INGRESO_UNIFORMES.AllowDBNull = false
            Me.columnREALIZADO_UNIFORMES.AllowDBNull = false
            Me.columnREALIZADO_UNIFORMES.MaxLength = 2147483647
            Me.columnREVISADO_UNIFORMES.AllowDBNull = false
            Me.columnREVISADO_UNIFORMES.MaxLength = 2147483647
            Me.columnAPROBADO_UNIFORMES.AllowDBNull = false
            Me.columnAPROBADO_UNIFORMES.MaxLength = 2147483647
            Me.columnREGISTRADO_UNIFORMES.AllowDBNull = false
            Me.columnREGISTRADO_UNIFORMES.MaxLength = 2147483647
            Me.columnESTADO_UNIFORMES.AllowDBNull = false
            Me.columnOBSERVACION_UNIFORMES.AllowDBNull = false
            Me.columnOBSERVACION_UNIFORMES.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewENTREGA_UNIFORMESRow() As ENTREGA_UNIFORMESRow
            Return CType(Me.NewRow,ENTREGA_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENTREGA_UNIFORMESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENTREGA_UNIFORMESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENTREGA_UNIFORMESRowChangedEvent) Is Nothing) Then
                RaiseEvent ENTREGA_UNIFORMESRowChanged(Me, New ENTREGA_UNIFORMESRowChangeEvent(CType(e.Row,ENTREGA_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENTREGA_UNIFORMESRowChangingEvent) Is Nothing) Then
                RaiseEvent ENTREGA_UNIFORMESRowChanging(Me, New ENTREGA_UNIFORMESRowChangeEvent(CType(e.Row,ENTREGA_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENTREGA_UNIFORMESRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENTREGA_UNIFORMESRowDeleted(Me, New ENTREGA_UNIFORMESRowChangeEvent(CType(e.Row,ENTREGA_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENTREGA_UNIFORMESRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENTREGA_UNIFORMESRowDeleting(Me, New ENTREGA_UNIFORMESRowChangeEvent(CType(e.Row,ENTREGA_UNIFORMESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveENTREGA_UNIFORMESRow(ByVal row As ENTREGA_UNIFORMESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEntregaUNIFORMES = New dsEntregaUNIFORMES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENTREGA_UNIFORMESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DETALLE_UNIFORMESRow
        Inherits Global.System.Data.DataRow
        
        Private tableDETALLE_UNIFORMES As DETALLE_UNIFORMESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDETALLE_UNIFORMES = CType(Me.Table,DETALLE_UNIFORMESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_DETALLE_UNIFORMES() As Long
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.ID_DETALLE_UNIFORMESColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.ID_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_KARDEX_DETALLE_UNIFORMES() As Long
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.ID_KARDEX_DETALLE_UNIFORMESColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.ID_KARDEX_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_DETALLE_KARDEX_DETALLE_UNIFORMES() As Long
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.ID_DETALLE_KARDEX_DETALLE_UNIFORMESColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.ID_DETALLE_KARDEX_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACION_DETALLE_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.OBSERVACION_DETALLE_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.OBSERVACION_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_DETALLE_UNIFORMES() As Integer
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.CANTIDAD_DETALLE_UNIFORMESColumn),Integer)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.CANTIDAD_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_DETALLE_UNIFORMES() As Integer
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.ESTADO_DETALLE_UNIFORMESColumn),Integer)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.ESTADO_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_RENOVACION_DETALLE_UNIFORMES() As Date
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.FECHA_RENOVACION_DETALLE_UNIFORMESColumn),Date)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.FECHA_RENOVACION_DETALLE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_UNIFORMES() As Long
            Get
                Return CType(Me(Me.tableDETALLE_UNIFORMES.ID_UNIFORMESColumn),Long)
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.ID_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE_UNIFORMES.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACION' de la tabla 'DETALLE_UNIFORMES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE_UNIFORMES.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KARDEXRow() As KARDEXRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("KARDEX_DETALLE_UNIFORMES")),KARDEXRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("KARDEX_DETALLE_UNIFORMES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ENTREGA_UNIFORMESRow() As ENTREGA_UNIFORMESRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES")),ENTREGA_UNIFORMESRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE_UNIFORMES.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableDETALLE_UNIFORMES.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KARDEXRow
        Inherits Global.System.Data.DataRow
        
        Private tableKARDEX As KARDEXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKARDEX = CType(Me.Table,KARDEXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_KARDEX() As Long
            Get
                Return CType(Me(Me.tableKARDEX.ID_KARDEXColumn),Long)
            End Get
            Set
                Me(Me.tableKARDEX.ID_KARDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SECUENCIAL_ITEM() As Long
            Get
                Return CType(Me(Me.tableKARDEX.ID_SECUENCIAL_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableKARDEX.ID_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA() As Date
            Get
                Return CType(Me(Me.tableKARDEX.FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableKARDEX.FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD() As Integer
            Get
                Return CType(Me(Me.tableKARDEX.CANTIDADColumn),Integer)
            End Get
            Set
                Me(Me.tableKARDEX.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO() As Integer
            Get
                Return CType(Me(Me.tableKARDEX.ESTADOColumn),Integer)
            End Get
            Set
                Me(Me.tableKARDEX.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SECUENCIAL_ITEMRow() As SECUENCIAL_ITEMRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("SECUENCIAL_ITEM_KARDEX")),SECUENCIAL_ITEMRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("SECUENCIAL_ITEM_KARDEX"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetDETALLE_UNIFORMESRows() As DETALLE_UNIFORMESRow()
            If (Me.Table.ChildRelations("KARDEX_DETALLE_UNIFORMES") Is Nothing) Then
                Return New DETALLE_UNIFORMESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("KARDEX_DETALLE_UNIFORMES")),DETALLE_UNIFORMESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SECUENCIAL_ITEMRow
        Inherits Global.System.Data.DataRow
        
        Private tableSECUENCIAL_ITEM As SECUENCIAL_ITEMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSECUENCIAL_ITEM = CType(Me.Table,SECUENCIAL_ITEMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SECUENCIAL_ITEM() As Long
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_SECUENCIAL_ITEM() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.CODIGO_SECUENCIAL_ITEMColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.CODIGO_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_SECUENCIAL_ITEM() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.NOMBRE_SECUENCIAL_ITEMColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.NOMBRE_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SECUENCIAL_ITEM() As Date
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.FECHA_SECUENCIAL_ITEMColumn),Date)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.FECHA_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MARCA() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MARCAColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MODELO() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MODELOColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MODELOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_MATERIAL() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_MATERIALColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_MATERIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_COLOR() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_COLORColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_COLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_UNIDAD_MEDIDA() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_UNIDAD_MEDIDAColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_UNIDAD_MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_SECUENCIAL_ITEM() As Integer
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ESTADO_SECUENCIAL_ITEMColumn),Integer)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ESTADO_SECUENCIAL_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LOTE() As Long
            Get
                Try 
                    Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_LOTE' de la tabla 'SECUENCIAL_ITEM' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SUB_GRUPO_ITEM() As Long
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.ID_SUB_GRUPO_ITEMColumn),Long)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.ID_SUB_GRUPO_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COSTO() As Decimal
            Get
                Return CType(Me(Me.tableSECUENCIAL_ITEM.COSTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSECUENCIAL_ITEM.COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_LOTENull() As Boolean
            Return Me.IsNull(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_LOTENull()
            Me(Me.tableSECUENCIAL_ITEM.ID_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetKARDEXRows() As KARDEXRow()
            If (Me.Table.ChildRelations("SECUENCIAL_ITEM_KARDEX") Is Nothing) Then
                Return New KARDEXRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("SECUENCIAL_ITEM_KARDEX")),KARDEXRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ENTREGA_UNIFORMESRow
        Inherits Global.System.Data.DataRow
        
        Private tableENTREGA_UNIFORMES As ENTREGA_UNIFORMESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableENTREGA_UNIFORMES = CType(Me.Table,ENTREGA_UNIFORMESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_UNIFORMES() As Long
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.ID_UNIFORMESColumn),Long)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.ID_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.CODIGO_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.CODIGO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VERSION_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.VERSION_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.VERSION_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_UNIFORMES() As Date
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.FECHA_UNIFORMESColumn),Date)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.FECHA_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.NOMBRE_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.NOMBRE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.CEDULA_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.CEDULA_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CLIENTE_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.CLIENTE_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.CLIENTE_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_INGRESO_UNIFORMES() As Date
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.FECHA_INGRESO_UNIFORMESColumn),Date)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.FECHA_INGRESO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property REALIZADO_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.REALIZADO_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.REALIZADO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property REVISADO_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.REVISADO_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.REVISADO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property APROBADO_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.APROBADO_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.APROBADO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property REGISTRADO_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.REGISTRADO_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.REGISTRADO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_UNIFORMES() As Integer
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.ESTADO_UNIFORMESColumn),Integer)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.ESTADO_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACION_UNIFORMES() As String
            Get
                Return CType(Me(Me.tableENTREGA_UNIFORMES.OBSERVACION_UNIFORMESColumn),String)
            End Get
            Set
                Me(Me.tableENTREGA_UNIFORMES.OBSERVACION_UNIFORMESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetDETALLE_UNIFORMESRows() As DETALLE_UNIFORMESRow()
            If (Me.Table.ChildRelations("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES") Is Nothing) Then
                Return New DETALLE_UNIFORMESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_DETALLE_UNIFORMES_ENTREGA_UNIFORMES")),DETALLE_UNIFORMESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class DETALLE_UNIFORMESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DETALLE_UNIFORMESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As DETALLE_UNIFORMESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As DETALLE_UNIFORMESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class KARDEXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KARDEXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As KARDEXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As KARDEXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class SECUENCIAL_ITEMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SECUENCIAL_ITEMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As SECUENCIAL_ITEMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As SECUENCIAL_ITEMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ENTREGA_UNIFORMESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ENTREGA_UNIFORMESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ENTREGA_UNIFORMESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ENTREGA_UNIFORMESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsEntregaUNIFORMESTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DETALLE_UNIFORMESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DETALLE_UNIFORMES"
            tableMapping.ColumnMappings.Add("ID_DETALLE_UNIFORMES", "ID_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("ID_KARDEX_DETALLE_UNIFORMES", "ID_KARDEX_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("ID_DETALLE_KARDEX_DETALLE_UNIFORMES", "ID_DETALLE_KARDEX_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("OBSERVACION_DETALLE_UNIFORMES", "OBSERVACION_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("CANTIDAD_DETALLE_UNIFORMES", "CANTIDAD_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("ESTADO_DETALLE_UNIFORMES", "ESTADO_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("FECHA_RENOVACION_DETALLE_UNIFORMES", "FECHA_RENOVACION_DETALLE_UNIFORMES")
            tableMapping.ColumnMappings.Add("ID_UNIFORMES", "ID_UNIFORMES")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DETALLE_UNIFORMES] WHERE (([ID_DETALLE_UNIFORMES] = @Original_"& _ 
                "ID_DETALLE_UNIFORMES) AND ([ID_KARDEX_DETALLE_UNIFORMES] = @Original_ID_KARDEX_D"& _ 
                "ETALLE_UNIFORMES) AND ([ID_DETALLE_KARDEX_DETALLE_UNIFORMES] = @Original_ID_DETA"& _ 
                "LLE_KARDEX_DETALLE_UNIFORMES) AND ([CANTIDAD_DETALLE_UNIFORMES] = @Original_CANT"& _ 
                "IDAD_DETALLE_UNIFORMES) AND ([ESTADO_DETALLE_UNIFORMES] = @Original_ESTADO_DETAL"& _ 
                "LE_UNIFORMES) AND ([FECHA_RENOVACION_DETALLE_UNIFORMES] = @Original_FECHA_RENOVA"& _ 
                "CION_DETALLE_UNIFORMES) AND ([ID_UNIFORMES] = @Original_ID_UNIFORMES))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DETALLE_UNIFORMES] ([ID_DETALLE_UNIFORMES], [ID_KARDEX_DETALLE"& _ 
                "_UNIFORMES], [ID_DETALLE_KARDEX_DETALLE_UNIFORMES], [OBSERVACION_DETALLE_UNIFORM"& _ 
                "ES], [CANTIDAD_DETALLE_UNIFORMES], [ESTADO_DETALLE_UNIFORMES], [FECHA_RENOVACION"& _ 
                "_DETALLE_UNIFORMES], [ID_UNIFORMES]) VALUES (@ID_DETALLE_UNIFORMES, @ID_KARDEX_D"& _ 
                "ETALLE_UNIFORMES, @ID_DETALLE_KARDEX_DETALLE_UNIFORMES, @OBSERVACION_DETALLE_UNI"& _ 
                "FORMES, @CANTIDAD_DETALLE_UNIFORMES, @ESTADO_DETALLE_UNIFORMES, @FECHA_RENOVACIO"& _ 
                "N_DETALLE_UNIFORMES, @ID_UNIFORMES);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_DETALLE_UNIFORMES, ID_KARDEX_DET"& _ 
                "ALLE_UNIFORMES, ID_DETALLE_KARDEX_DETALLE_UNIFORMES, OBSERVACION_DETALLE_UNIFORM"& _ 
                "ES, CANTIDAD_DETALLE_UNIFORMES, ESTADO_DETALLE_UNIFORMES, FECHA_RENOVACION_DETAL"& _ 
                "LE_UNIFORMES, ID_UNIFORMES FROM DETALLE_UNIFORMES WHERE (ID_DETALLE_UNIFORMES = "& _ 
                "@ID_DETALLE_UNIFORMES)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DETALLE_UNIFORMES] SET [ID_DETALLE_UNIFORMES] = @ID_DETALLE_UNIFORM"& _ 
                "ES, [ID_KARDEX_DETALLE_UNIFORMES] = @ID_KARDEX_DETALLE_UNIFORMES, [ID_DETALLE_KA"& _ 
                "RDEX_DETALLE_UNIFORMES] = @ID_DETALLE_KARDEX_DETALLE_UNIFORMES, [OBSERVACION_DET"& _ 
                "ALLE_UNIFORMES] = @OBSERVACION_DETALLE_UNIFORMES, [CANTIDAD_DETALLE_UNIFORMES] ="& _ 
                " @CANTIDAD_DETALLE_UNIFORMES, [ESTADO_DETALLE_UNIFORMES] = @ESTADO_DETALLE_UNIFO"& _ 
                "RMES, [FECHA_RENOVACION_DETALLE_UNIFORMES] = @FECHA_RENOVACION_DETALLE_UNIFORMES"& _ 
                ", [ID_UNIFORMES] = @ID_UNIFORMES WHERE (([ID_DETALLE_UNIFORMES] = @Original_ID_D"& _ 
                "ETALLE_UNIFORMES) AND ([ID_KARDEX_DETALLE_UNIFORMES] = @Original_ID_KARDEX_DETAL"& _ 
                "LE_UNIFORMES) AND ([ID_DETALLE_KARDEX_DETALLE_UNIFORMES] = @Original_ID_DETALLE_"& _ 
                "KARDEX_DETALLE_UNIFORMES) AND ([CANTIDAD_DETALLE_UNIFORMES] = @Original_CANTIDAD"& _ 
                "_DETALLE_UNIFORMES) AND ([ESTADO_DETALLE_UNIFORMES] = @Original_ESTADO_DETALLE_U"& _ 
                "NIFORMES) AND ([FECHA_RENOVACION_DETALLE_UNIFORMES] = @Original_FECHA_RENOVACION"& _ 
                "_DETALLE_UNIFORMES) AND ([ID_UNIFORMES] = @Original_ID_UNIFORMES));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_D"& _ 
                "ETALLE_UNIFORMES, ID_KARDEX_DETALLE_UNIFORMES, ID_DETALLE_KARDEX_DETALLE_UNIFORM"& _ 
                "ES, OBSERVACION_DETALLE_UNIFORMES, CANTIDAD_DETALLE_UNIFORMES, ESTADO_DETALLE_UN"& _ 
                "IFORMES, FECHA_RENOVACION_DETALLE_UNIFORMES, ID_UNIFORMES FROM DETALLE_UNIFORMES"& _ 
                " WHERE (ID_DETALLE_UNIFORMES = @ID_DETALLE_UNIFORMES)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_DETALLE_KARDEX_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_DETALLE_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_DETALLE_UNIFORMES, ID_KARDEX_DETALLE_UNIFORMES, ID_DETALLE_KARDEX_DETAL"& _ 
                "LE_UNIFORMES, OBSERVACION_DETALLE_UNIFORMES, CANTIDAD_DETALLE_UNIFORMES, ESTADO_"& _ 
                "DETALLE_UNIFORMES, FECHA_RENOVACION_DETALLE_UNIFORMES, ID_UNIFORMES FROM dbo.DET"& _ 
                "ALLE_UNIFORMES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsEntregaUNIFORMES.DETALLE_UNIFORMESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsEntregaUNIFORMES.DETALLE_UNIFORMESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsEntregaUNIFORMES.DETALLE_UNIFORMESDataTable = New dsEntregaUNIFORMES.DETALLE_UNIFORMESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsEntregaUNIFORMES.DETALLE_UNIFORMESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsEntregaUNIFORMES) As Integer
            Return Me.Adapter.Update(dataSet, "DETALLE_UNIFORMES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_DETALLE_UNIFORMES As Long, ByVal Original_ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal Original_ESTADO_DETALLE_UNIFORMES As Integer, ByVal Original_FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal Original_ID_UNIFORMES As Long) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_DETALLE_UNIFORMES,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CANTIDAD_DETALLE_UNIFORMES,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ESTADO_DETALLE_UNIFORMES,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_FECHA_RENOVACION_DETALLE_UNIFORMES,Date)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_UNIFORMES,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_DETALLE_UNIFORMES As Long, ByVal ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal OBSERVACION_DETALLE_UNIFORMES As String, ByVal CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal ESTADO_DETALLE_UNIFORMES As Integer, ByVal FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal ID_UNIFORMES As Long) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_DETALLE_UNIFORMES,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ID_DETALLE_KARDEX_DETALLE_UNIFORMES,Long)
            If (OBSERVACION_DETALLE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACION_DETALLE_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(OBSERVACION_DETALLE_UNIFORMES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CANTIDAD_DETALLE_UNIFORMES,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ESTADO_DETALLE_UNIFORMES,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECHA_RENOVACION_DETALLE_UNIFORMES,Date)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_UNIFORMES,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_DETALLE_UNIFORMES As Long, ByVal ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal OBSERVACION_DETALLE_UNIFORMES As String, ByVal CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal ESTADO_DETALLE_UNIFORMES As Integer, ByVal FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal ID_UNIFORMES As Long, ByVal Original_ID_DETALLE_UNIFORMES As Long, ByVal Original_ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal Original_ESTADO_DETALLE_UNIFORMES As Integer, ByVal Original_FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal Original_ID_UNIFORMES As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_DETALLE_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ID_DETALLE_KARDEX_DETALLE_UNIFORMES,Long)
            If (OBSERVACION_DETALLE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACION_DETALLE_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(OBSERVACION_DETALLE_UNIFORMES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CANTIDAD_DETALLE_UNIFORMES,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ESTADO_DETALLE_UNIFORMES,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECHA_RENOVACION_DETALLE_UNIFORMES,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ID_DETALLE_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ID_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CANTIDAD_DETALLE_UNIFORMES,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ESTADO_DETALLE_UNIFORMES,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_FECHA_RENOVACION_DETALLE_UNIFORMES,Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_UNIFORMES,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal OBSERVACION_DETALLE_UNIFORMES As String, ByVal CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal ESTADO_DETALLE_UNIFORMES As Integer, ByVal FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal ID_UNIFORMES As Long, ByVal Original_ID_DETALLE_UNIFORMES As Long, ByVal Original_ID_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES As Long, ByVal Original_CANTIDAD_DETALLE_UNIFORMES As Integer, ByVal Original_ESTADO_DETALLE_UNIFORMES As Integer, ByVal Original_FECHA_RENOVACION_DETALLE_UNIFORMES As Date, ByVal Original_ID_UNIFORMES As Long) As Integer
            Return Me.Update(Original_ID_DETALLE_UNIFORMES, ID_KARDEX_DETALLE_UNIFORMES, ID_DETALLE_KARDEX_DETALLE_UNIFORMES, OBSERVACION_DETALLE_UNIFORMES, CANTIDAD_DETALLE_UNIFORMES, ESTADO_DETALLE_UNIFORMES, FECHA_RENOVACION_DETALLE_UNIFORMES, ID_UNIFORMES, Original_ID_DETALLE_UNIFORMES, Original_ID_KARDEX_DETALLE_UNIFORMES, Original_ID_DETALLE_KARDEX_DETALLE_UNIFORMES, Original_CANTIDAD_DETALLE_UNIFORMES, Original_ESTADO_DETALLE_UNIFORMES, Original_FECHA_RENOVACION_DETALLE_UNIFORMES, Original_ID_UNIFORMES)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class KARDEXTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "KARDEX"
            tableMapping.ColumnMappings.Add("ID_KARDEX", "ID_KARDEX")
            tableMapping.ColumnMappings.Add("ID_SECUENCIAL_ITEM", "ID_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KARDEX] WHERE (([ID_KARDEX] = @Original_ID_KARDEX) AND ([ID_SE"& _ 
                "CUENCIAL_ITEM] = @Original_ID_SECUENCIAL_ITEM) AND ([FECHA] = @Original_FECHA) A"& _ 
                "ND ([CANTIDAD] = @Original_CANTIDAD) AND ([ESTADO] = @Original_ESTADO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_KARDEX", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KARDEX] ([ID_KARDEX], [ID_SECUENCIAL_ITEM], [FECHA], [CANTIDAD"& _ 
                "], [ESTADO]) VALUES (@ID_KARDEX, @ID_SECUENCIAL_ITEM, @FECHA, @CANTIDAD, @ESTADO"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_KARDEX, ID_SECUENCIAL_ITEM, FECHA, CANTIDAD, ESTADO FROM KARDEX WH"& _ 
                "ERE (ID_KARDEX = @ID_KARDEX)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_KARDEX", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[KARDEX] SET [ID_KARDEX] = @ID_KARDEX, [ID_SECUENCIAL_ITEM] = @ID_SE"& _ 
                "CUENCIAL_ITEM, [FECHA] = @FECHA, [CANTIDAD] = @CANTIDAD, [ESTADO] = @ESTADO WHER"& _ 
                "E (([ID_KARDEX] = @Original_ID_KARDEX) AND ([ID_SECUENCIAL_ITEM] = @Original_ID_"& _ 
                "SECUENCIAL_ITEM) AND ([FECHA] = @Original_FECHA) AND ([CANTIDAD] = @Original_CAN"& _ 
                "TIDAD) AND ([ESTADO] = @Original_ESTADO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_KARDEX, ID_SECUENCIAL_ITEM"& _ 
                ", FECHA, CANTIDAD, ESTADO FROM KARDEX WHERE (ID_KARDEX = @ID_KARDEX)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_KARDEX", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_KARDEX", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_KARDEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_KARDEX, ID_SECUENCIAL_ITEM, FECHA, CANTIDAD, ESTADO FROM dbo.KARDEX"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsEntregaUNIFORMES.KARDEXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsEntregaUNIFORMES.KARDEXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsEntregaUNIFORMES.KARDEXDataTable = New dsEntregaUNIFORMES.KARDEXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsEntregaUNIFORMES.KARDEXDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsEntregaUNIFORMES) As Integer
            Return Me.Adapter.Update(dataSet, "KARDEX")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_KARDEX As Long, ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_FECHA As Date, ByVal Original_CANTIDAD As Integer, ByVal Original_ESTADO As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_KARDEX,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FECHA,Date)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CANTIDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_KARDEX As Long, ByVal ID_SECUENCIAL_ITEM As Long, ByVal FECHA As Date, ByVal CANTIDAD As Integer, ByVal ESTADO As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_KARDEX,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FECHA,Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CANTIDAD,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_KARDEX As Long, ByVal ID_SECUENCIAL_ITEM As Long, ByVal FECHA As Date, ByVal CANTIDAD As Integer, ByVal ESTADO As Integer, ByVal Original_ID_KARDEX As Long, ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_FECHA As Date, ByVal Original_CANTIDAD As Integer, ByVal Original_ESTADO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_KARDEX,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FECHA,Date)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CANTIDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ESTADO,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_KARDEX,Long)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FECHA,Date)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_CANTIDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_SECUENCIAL_ITEM As Long, ByVal FECHA As Date, ByVal CANTIDAD As Integer, ByVal ESTADO As Integer, ByVal Original_ID_KARDEX As Long, ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_FECHA As Date, ByVal Original_CANTIDAD As Integer, ByVal Original_ESTADO As Integer) As Integer
            Return Me.Update(Original_ID_KARDEX, ID_SECUENCIAL_ITEM, FECHA, CANTIDAD, ESTADO, Original_ID_KARDEX, Original_ID_SECUENCIAL_ITEM, Original_FECHA, Original_CANTIDAD, Original_ESTADO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SECUENCIAL_ITEMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SECUENCIAL_ITEM"
            tableMapping.ColumnMappings.Add("ID_SECUENCIAL_ITEM", "ID_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("CODIGO_SECUENCIAL_ITEM", "CODIGO_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("NOMBRE_SECUENCIAL_ITEM", "NOMBRE_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("FECHA_SECUENCIAL_ITEM", "FECHA_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("ID_MARCA", "ID_MARCA")
            tableMapping.ColumnMappings.Add("ID_MODELO", "ID_MODELO")
            tableMapping.ColumnMappings.Add("ID_MATERIAL", "ID_MATERIAL")
            tableMapping.ColumnMappings.Add("ID_COLOR", "ID_COLOR")
            tableMapping.ColumnMappings.Add("ID_UNIDAD_MEDIDA", "ID_UNIDAD_MEDIDA")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ESTADO_SECUENCIAL_ITEM", "ESTADO_SECUENCIAL_ITEM")
            tableMapping.ColumnMappings.Add("ID_LOTE", "ID_LOTE")
            tableMapping.ColumnMappings.Add("ID_SUB_GRUPO_ITEM", "ID_SUB_GRUPO_ITEM")
            tableMapping.ColumnMappings.Add("COSTO", "COSTO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SECUENCIAL_ITEM] WHERE (([ID_SECUENCIAL_ITEM] = @Original_ID_S"& _ 
                "ECUENCIAL_ITEM) AND ([FECHA_SECUENCIAL_ITEM] = @Original_FECHA_SECUENCIAL_ITEM) "& _ 
                "AND ([ID_MARCA] = @Original_ID_MARCA) AND ([ID_MODELO] = @Original_ID_MODELO) AN"& _ 
                "D ([ID_MATERIAL] = @Original_ID_MATERIAL) AND ([ID_COLOR] = @Original_ID_COLOR) "& _ 
                "AND ([ID_UNIDAD_MEDIDA] = @Original_ID_UNIDAD_MEDIDA) AND ([ESTADO_SECUENCIAL_IT"& _ 
                "EM] = @Original_ESTADO_SECUENCIAL_ITEM) AND ((@IsNull_ID_LOTE = 1 AND [ID_LOTE] "& _ 
                "IS NULL) OR ([ID_LOTE] = @Original_ID_LOTE)) AND ([ID_SUB_GRUPO_ITEM] = @Origina"& _ 
                "l_ID_SUB_GRUPO_ITEM) AND ([COSTO] = @Original_COSTO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_LOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SECUENCIAL_ITEM] ([ID_SECUENCIAL_ITEM], [CODIGO_SECUENCIAL_ITE"& _ 
                "M], [NOMBRE_SECUENCIAL_ITEM], [FECHA_SECUENCIAL_ITEM], [ID_MARCA], [ID_MODELO], "& _ 
                "[ID_MATERIAL], [ID_COLOR], [ID_UNIDAD_MEDIDA], [DESCRIPCION], [ESTADO_SECUENCIAL"& _ 
                "_ITEM], [ID_LOTE], [ID_SUB_GRUPO_ITEM], [COSTO]) VALUES (@ID_SECUENCIAL_ITEM, @C"& _ 
                "ODIGO_SECUENCIAL_ITEM, @NOMBRE_SECUENCIAL_ITEM, @FECHA_SECUENCIAL_ITEM, @ID_MARC"& _ 
                "A, @ID_MODELO, @ID_MATERIAL, @ID_COLOR, @ID_UNIDAD_MEDIDA, @DESCRIPCION, @ESTADO"& _ 
                "_SECUENCIAL_ITEM, @ID_LOTE, @ID_SUB_GRUPO_ITEM, @COSTO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_SECUENCIAL_I"& _ 
                "TEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_M"& _ 
                "ARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SE"& _ 
                "CUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM SECUENCIAL_ITEM WHERE (ID_"& _ 
                "SECUENCIAL_ITEM = @ID_SECUENCIAL_ITEM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SECUENCIAL_ITEM] SET [ID_SECUENCIAL_ITEM] = @ID_SECUENCIAL_ITEM, [C"& _ 
                "ODIGO_SECUENCIAL_ITEM] = @CODIGO_SECUENCIAL_ITEM, [NOMBRE_SECUENCIAL_ITEM] = @NO"& _ 
                "MBRE_SECUENCIAL_ITEM, [FECHA_SECUENCIAL_ITEM] = @FECHA_SECUENCIAL_ITEM, [ID_MARC"& _ 
                "A] = @ID_MARCA, [ID_MODELO] = @ID_MODELO, [ID_MATERIAL] = @ID_MATERIAL, [ID_COLO"& _ 
                "R] = @ID_COLOR, [ID_UNIDAD_MEDIDA] = @ID_UNIDAD_MEDIDA, [DESCRIPCION] = @DESCRIP"& _ 
                "CION, [ESTADO_SECUENCIAL_ITEM] = @ESTADO_SECUENCIAL_ITEM, [ID_LOTE] = @ID_LOTE, "& _ 
                "[ID_SUB_GRUPO_ITEM] = @ID_SUB_GRUPO_ITEM, [COSTO] = @COSTO WHERE (([ID_SECUENCIA"& _ 
                "L_ITEM] = @Original_ID_SECUENCIAL_ITEM) AND ([FECHA_SECUENCIAL_ITEM] = @Original"& _ 
                "_FECHA_SECUENCIAL_ITEM) AND ([ID_MARCA] = @Original_ID_MARCA) AND ([ID_MODELO] ="& _ 
                " @Original_ID_MODELO) AND ([ID_MATERIAL] = @Original_ID_MATERIAL) AND ([ID_COLOR"& _ 
                "] = @Original_ID_COLOR) AND ([ID_UNIDAD_MEDIDA] = @Original_ID_UNIDAD_MEDIDA) AN"& _ 
                "D ([ESTADO_SECUENCIAL_ITEM] = @Original_ESTADO_SECUENCIAL_ITEM) AND ((@IsNull_ID"& _ 
                "_LOTE = 1 AND [ID_LOTE] IS NULL) OR ([ID_LOTE] = @Original_ID_LOTE)) AND ([ID_SU"& _ 
                "B_GRUPO_ITEM] = @Original_ID_SUB_GRUPO_ITEM) AND ([COSTO] = @Original_COSTO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA"& _ 
                "_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, "& _ 
                "DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM SECU"& _ 
                "ENCIAL_ITEM WHERE (ID_SECUENCIAL_ITEM = @ID_SECUENCIAL_ITEM)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MARCA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MARCA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MODELO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MODELO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_MATERIAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_MATERIAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIDAD_MEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIDAD_MEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SECUENCIAL_ITEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SECUENCIAL_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_LOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LOTE", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUB_GRUPO_ITEM", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUB_GRUPO_ITEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_"& _ 
                "SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, D"& _ 
                "ESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO FROM dbo.S"& _ 
                "ECUENCIAL_ITEM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsEntregaUNIFORMES.SECUENCIAL_ITEMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsEntregaUNIFORMES.SECUENCIAL_ITEMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsEntregaUNIFORMES.SECUENCIAL_ITEMDataTable = New dsEntregaUNIFORMES.SECUENCIAL_ITEMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsEntregaUNIFORMES.SECUENCIAL_ITEMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsEntregaUNIFORMES) As Integer
            Return Me.Adapter.Update(dataSet, "SECUENCIAL_ITEM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_SECUENCIAL_ITEM As Long, ByVal Original_FECHA_SECUENCIAL_ITEM As Date, ByVal Original_ID_MARCA As Integer, ByVal Original_ID_MODELO As Integer, ByVal Original_ID_MATERIAL As Integer, ByVal Original_ID_COLOR As Integer, ByVal Original_ID_UNIDAD_MEDIDA As Integer, ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer, ByVal Original_ID_LOTE As Global.System.Nullable(Of Long), ByVal Original_ID_SUB_GRUPO_ITEM As Long, ByVal Original_COSTO As Decimal) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_MARCA,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_MODELO,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ID_MATERIAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_COLOR,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_UNIDAD_MEDIDA,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ESTADO_SECUENCIAL_ITEM,Integer)
            If (Original_ID_LOTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_LOTE.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_SECUENCIAL_ITEM As Long, ByVal CODIGO_SECUENCIAL_ITEM As String, ByVal NOMBRE_SECUENCIAL_ITEM As String, ByVal FECHA_SECUENCIAL_ITEM As Date, ByVal ID_MARCA As Integer, ByVal ID_MODELO As Integer, ByVal ID_MATERIAL As Integer, ByVal ID_COLOR As Integer, ByVal ID_UNIDAD_MEDIDA As Integer, ByVal DESCRIPCION As String, ByVal ESTADO_SECUENCIAL_ITEM As Integer, ByVal ID_LOTE As Global.System.Nullable(Of Long), ByVal ID_SUB_GRUPO_ITEM As Long, ByVal COSTO As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (CODIGO_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_SECUENCIAL_ITEM")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_SECUENCIAL_ITEM,String)
            End If
            If (NOMBRE_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_SECUENCIAL_ITEM")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRE_SECUENCIAL_ITEM,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_MARCA,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_MODELO,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ID_MATERIAL,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_COLOR,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID_UNIDAD_MEDIDA,Integer)
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ESTADO_SECUENCIAL_ITEM,Integer)
            If (ID_LOTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_LOTE.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_SECUENCIAL_ITEM As Long,  _
                    ByVal CODIGO_SECUENCIAL_ITEM As String,  _
                    ByVal NOMBRE_SECUENCIAL_ITEM As String,  _
                    ByVal FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal ID_MARCA As Integer,  _
                    ByVal ID_MODELO As Integer,  _
                    ByVal ID_MATERIAL As Integer,  _
                    ByVal ID_COLOR As Integer,  _
                    ByVal ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal COSTO As Decimal,  _
                    ByVal Original_ID_SECUENCIAL_ITEM As Long,  _
                    ByVal Original_FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal Original_ID_MARCA As Integer,  _
                    ByVal Original_ID_MODELO As Integer,  _
                    ByVal Original_ID_MATERIAL As Integer,  _
                    ByVal Original_ID_COLOR As Integer,  _
                    ByVal Original_ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal Original_ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal Original_COSTO As Decimal) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_SECUENCIAL_ITEM,Long)
            If (CODIGO_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_SECUENCIAL_ITEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_SECUENCIAL_ITEM,String)
            End If
            If (NOMBRE_SECUENCIAL_ITEM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_SECUENCIAL_ITEM")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRE_SECUENCIAL_ITEM,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_MARCA,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_MODELO,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ID_MATERIAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_COLOR,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ID_UNIDAD_MEDIDA,Integer)
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ESTADO_SECUENCIAL_ITEM,Integer)
            If (ID_LOTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_LOTE.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(COSTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_SECUENCIAL_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FECHA_SECUENCIAL_ITEM,Date)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ID_MARCA,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID_MODELO,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_MATERIAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ID_COLOR,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_UNIDAD_MEDIDA,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ESTADO_SECUENCIAL_ITEM,Integer)
            If (Original_ID_LOTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ID_LOTE.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ID_SUB_GRUPO_ITEM,Long)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_COSTO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_SECUENCIAL_ITEM As String,  _
                    ByVal NOMBRE_SECUENCIAL_ITEM As String,  _
                    ByVal FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal ID_MARCA As Integer,  _
                    ByVal ID_MODELO As Integer,  _
                    ByVal ID_MATERIAL As Integer,  _
                    ByVal ID_COLOR As Integer,  _
                    ByVal ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal COSTO As Decimal,  _
                    ByVal Original_ID_SECUENCIAL_ITEM As Long,  _
                    ByVal Original_FECHA_SECUENCIAL_ITEM As Date,  _
                    ByVal Original_ID_MARCA As Integer,  _
                    ByVal Original_ID_MODELO As Integer,  _
                    ByVal Original_ID_MATERIAL As Integer,  _
                    ByVal Original_ID_COLOR As Integer,  _
                    ByVal Original_ID_UNIDAD_MEDIDA As Integer,  _
                    ByVal Original_ESTADO_SECUENCIAL_ITEM As Integer,  _
                    ByVal Original_ID_LOTE As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SUB_GRUPO_ITEM As Long,  _
                    ByVal Original_COSTO As Decimal) As Integer
            Return Me.Update(Original_ID_SECUENCIAL_ITEM, CODIGO_SECUENCIAL_ITEM, NOMBRE_SECUENCIAL_ITEM, FECHA_SECUENCIAL_ITEM, ID_MARCA, ID_MODELO, ID_MATERIAL, ID_COLOR, ID_UNIDAD_MEDIDA, DESCRIPCION, ESTADO_SECUENCIAL_ITEM, ID_LOTE, ID_SUB_GRUPO_ITEM, COSTO, Original_ID_SECUENCIAL_ITEM, Original_FECHA_SECUENCIAL_ITEM, Original_ID_MARCA, Original_ID_MODELO, Original_ID_MATERIAL, Original_ID_COLOR, Original_ID_UNIDAD_MEDIDA, Original_ESTADO_SECUENCIAL_ITEM, Original_ID_LOTE, Original_ID_SUB_GRUPO_ITEM, Original_COSTO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ENTREGA_UNIFORMESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ENTREGA_UNIFORMES"
            tableMapping.ColumnMappings.Add("ID_UNIFORMES", "ID_UNIFORMES")
            tableMapping.ColumnMappings.Add("CODIGO_UNIFORMES", "CODIGO_UNIFORMES")
            tableMapping.ColumnMappings.Add("VERSION_UNIFORMES", "VERSION_UNIFORMES")
            tableMapping.ColumnMappings.Add("FECHA_UNIFORMES", "FECHA_UNIFORMES")
            tableMapping.ColumnMappings.Add("NOMBRE_UNIFORMES", "NOMBRE_UNIFORMES")
            tableMapping.ColumnMappings.Add("CEDULA_UNIFORMES", "CEDULA_UNIFORMES")
            tableMapping.ColumnMappings.Add("CLIENTE_UNIFORMES", "CLIENTE_UNIFORMES")
            tableMapping.ColumnMappings.Add("FECHA_INGRESO_UNIFORMES", "FECHA_INGRESO_UNIFORMES")
            tableMapping.ColumnMappings.Add("REALIZADO_UNIFORMES", "REALIZADO_UNIFORMES")
            tableMapping.ColumnMappings.Add("REVISADO_UNIFORMES", "REVISADO_UNIFORMES")
            tableMapping.ColumnMappings.Add("APROBADO_UNIFORMES", "APROBADO_UNIFORMES")
            tableMapping.ColumnMappings.Add("REGISTRADO_UNIFORMES", "REGISTRADO_UNIFORMES")
            tableMapping.ColumnMappings.Add("ESTADO_UNIFORMES", "ESTADO_UNIFORMES")
            tableMapping.ColumnMappings.Add("OBSERVACION_UNIFORMES", "OBSERVACION_UNIFORMES")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ENTREGA_UNIFORMES] WHERE (([ID_UNIFORMES] = @Original_ID_UNIFO"& _ 
                "RMES) AND ([FECHA_UNIFORMES] = @Original_FECHA_UNIFORMES) AND ([FECHA_INGRESO_UN"& _ 
                "IFORMES] = @Original_FECHA_INGRESO_UNIFORMES) AND ([ESTADO_UNIFORMES] = @Origina"& _ 
                "l_ESTADO_UNIFORMES))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ENTREGA_UNIFORMES] ([ID_UNIFORMES], [CODIGO_UNIFORMES], [VERSI"& _ 
                "ON_UNIFORMES], [FECHA_UNIFORMES], [NOMBRE_UNIFORMES], [CEDULA_UNIFORMES], [CLIEN"& _ 
                "TE_UNIFORMES], [FECHA_INGRESO_UNIFORMES], [REALIZADO_UNIFORMES], [REVISADO_UNIFO"& _ 
                "RMES], [APROBADO_UNIFORMES], [REGISTRADO_UNIFORMES], [ESTADO_UNIFORMES], [OBSERV"& _ 
                "ACION_UNIFORMES]) VALUES (@ID_UNIFORMES, @CODIGO_UNIFORMES, @VERSION_UNIFORMES, "& _ 
                "@FECHA_UNIFORMES, @NOMBRE_UNIFORMES, @CEDULA_UNIFORMES, @CLIENTE_UNIFORMES, @FEC"& _ 
                "HA_INGRESO_UNIFORMES, @REALIZADO_UNIFORMES, @REVISADO_UNIFORMES, @APROBADO_UNIFO"& _ 
                "RMES, @REGISTRADO_UNIFORMES, @ESTADO_UNIFORMES, @OBSERVACION_UNIFORMES);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT"& _ 
                " ID_UNIFORMES, CODIGO_UNIFORMES, VERSION_UNIFORMES, FECHA_UNIFORMES, NOMBRE_UNIF"& _ 
                "ORMES, CEDULA_UNIFORMES, CLIENTE_UNIFORMES, FECHA_INGRESO_UNIFORMES, REALIZADO_U"& _ 
                "NIFORMES, REVISADO_UNIFORMES, APROBADO_UNIFORMES, REGISTRADO_UNIFORMES, ESTADO_U"& _ 
                "NIFORMES, OBSERVACION_UNIFORMES FROM ENTREGA_UNIFORMES WHERE (ID_UNIFORMES = @ID"& _ 
                "_UNIFORMES)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VERSION_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VERSION_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENTE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENTE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REALIZADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REALIZADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APROBADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APROBADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REGISTRADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REGISTRADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ENTREGA_UNIFORMES] SET [ID_UNIFORMES] = @ID_UNIFORMES, [CODIGO_UNIF"& _ 
                "ORMES] = @CODIGO_UNIFORMES, [VERSION_UNIFORMES] = @VERSION_UNIFORMES, [FECHA_UNI"& _ 
                "FORMES] = @FECHA_UNIFORMES, [NOMBRE_UNIFORMES] = @NOMBRE_UNIFORMES, [CEDULA_UNIF"& _ 
                "ORMES] = @CEDULA_UNIFORMES, [CLIENTE_UNIFORMES] = @CLIENTE_UNIFORMES, [FECHA_ING"& _ 
                "RESO_UNIFORMES] = @FECHA_INGRESO_UNIFORMES, [REALIZADO_UNIFORMES] = @REALIZADO_U"& _ 
                "NIFORMES, [REVISADO_UNIFORMES] = @REVISADO_UNIFORMES, [APROBADO_UNIFORMES] = @AP"& _ 
                "ROBADO_UNIFORMES, [REGISTRADO_UNIFORMES] = @REGISTRADO_UNIFORMES, [ESTADO_UNIFOR"& _ 
                "MES] = @ESTADO_UNIFORMES, [OBSERVACION_UNIFORMES] = @OBSERVACION_UNIFORMES WHERE"& _ 
                " (([ID_UNIFORMES] = @Original_ID_UNIFORMES) AND ([FECHA_UNIFORMES] = @Original_F"& _ 
                "ECHA_UNIFORMES) AND ([FECHA_INGRESO_UNIFORMES] = @Original_FECHA_INGRESO_UNIFORM"& _ 
                "ES) AND ([ESTADO_UNIFORMES] = @Original_ESTADO_UNIFORMES));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_UNIFORMES"& _ 
                ", CODIGO_UNIFORMES, VERSION_UNIFORMES, FECHA_UNIFORMES, NOMBRE_UNIFORMES, CEDULA"& _ 
                "_UNIFORMES, CLIENTE_UNIFORMES, FECHA_INGRESO_UNIFORMES, REALIZADO_UNIFORMES, REV"& _ 
                "ISADO_UNIFORMES, APROBADO_UNIFORMES, REGISTRADO_UNIFORMES, ESTADO_UNIFORMES, OBS"& _ 
                "ERVACION_UNIFORMES FROM ENTREGA_UNIFORMES WHERE (ID_UNIFORMES = @ID_UNIFORMES)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VERSION_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VERSION_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENTE_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENTE_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REALIZADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REALIZADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APROBADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APROBADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REGISTRADO_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REGISTRADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION_UNIFORMES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION_UNIFORMES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_UNIFORMES", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_UNIFORMES", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_UNIFORMES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_UNIFORMES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_UNIFORMES, CODIGO_UNIFORMES, VERSION_UNIFORMES, FECHA_UNIFORMES, NOMBRE"& _ 
                "_UNIFORMES, CEDULA_UNIFORMES, CLIENTE_UNIFORMES, FECHA_INGRESO_UNIFORMES, REALIZ"& _ 
                "ADO_UNIFORMES, REVISADO_UNIFORMES, APROBADO_UNIFORMES, REGISTRADO_UNIFORMES, EST"& _ 
                "ADO_UNIFORMES, OBSERVACION_UNIFORMES FROM dbo.ENTREGA_UNIFORMES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsEntregaUNIFORMES.ENTREGA_UNIFORMESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsEntregaUNIFORMES.ENTREGA_UNIFORMESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsEntregaUNIFORMES.ENTREGA_UNIFORMESDataTable = New dsEntregaUNIFORMES.ENTREGA_UNIFORMESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsEntregaUNIFORMES.ENTREGA_UNIFORMESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsEntregaUNIFORMES) As Integer
            Return Me.Adapter.Update(dataSet, "ENTREGA_UNIFORMES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_UNIFORMES As Long, ByVal Original_FECHA_UNIFORMES As Date, ByVal Original_FECHA_INGRESO_UNIFORMES As Date, ByVal Original_ESTADO_UNIFORMES As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_UNIFORMES,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_UNIFORMES,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FECHA_INGRESO_UNIFORMES,Date)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ESTADO_UNIFORMES,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_UNIFORMES As Long, ByVal CODIGO_UNIFORMES As String, ByVal VERSION_UNIFORMES As String, ByVal FECHA_UNIFORMES As Date, ByVal NOMBRE_UNIFORMES As String, ByVal CEDULA_UNIFORMES As String, ByVal CLIENTE_UNIFORMES As String, ByVal FECHA_INGRESO_UNIFORMES As Date, ByVal REALIZADO_UNIFORMES As String, ByVal REVISADO_UNIFORMES As String, ByVal APROBADO_UNIFORMES As String, ByVal REGISTRADO_UNIFORMES As String, ByVal ESTADO_UNIFORMES As Integer, ByVal OBSERVACION_UNIFORMES As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_UNIFORMES,Long)
            If (CODIGO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_UNIFORMES,String)
            End If
            If (VERSION_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("VERSION_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(VERSION_UNIFORMES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_UNIFORMES,Date)
            If (NOMBRE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NOMBRE_UNIFORMES,String)
            End If
            If (CEDULA_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CEDULA_UNIFORMES,String)
            End If
            If (CLIENTE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CLIENTE_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CLIENTE_UNIFORMES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(FECHA_INGRESO_UNIFORMES,Date)
            If (REALIZADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REALIZADO_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(REALIZADO_UNIFORMES,String)
            End If
            If (REVISADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REVISADO_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(REVISADO_UNIFORMES,String)
            End If
            If (APROBADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APROBADO_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(APROBADO_UNIFORMES,String)
            End If
            If (REGISTRADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REGISTRADO_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(REGISTRADO_UNIFORMES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ESTADO_UNIFORMES,Integer)
            If (OBSERVACION_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACION_UNIFORMES")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OBSERVACION_UNIFORMES,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_UNIFORMES As Long,  _
                    ByVal CODIGO_UNIFORMES As String,  _
                    ByVal VERSION_UNIFORMES As String,  _
                    ByVal FECHA_UNIFORMES As Date,  _
                    ByVal NOMBRE_UNIFORMES As String,  _
                    ByVal CEDULA_UNIFORMES As String,  _
                    ByVal CLIENTE_UNIFORMES As String,  _
                    ByVal FECHA_INGRESO_UNIFORMES As Date,  _
                    ByVal REALIZADO_UNIFORMES As String,  _
                    ByVal REVISADO_UNIFORMES As String,  _
                    ByVal APROBADO_UNIFORMES As String,  _
                    ByVal REGISTRADO_UNIFORMES As String,  _
                    ByVal ESTADO_UNIFORMES As Integer,  _
                    ByVal OBSERVACION_UNIFORMES As String,  _
                    ByVal Original_ID_UNIFORMES As Long,  _
                    ByVal Original_FECHA_UNIFORMES As Date,  _
                    ByVal Original_FECHA_INGRESO_UNIFORMES As Date,  _
                    ByVal Original_ESTADO_UNIFORMES As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_UNIFORMES,Long)
            If (CODIGO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_UNIFORMES,String)
            End If
            If (VERSION_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("VERSION_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(VERSION_UNIFORMES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_UNIFORMES,Date)
            If (NOMBRE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NOMBRE_UNIFORMES,String)
            End If
            If (CEDULA_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CEDULA_UNIFORMES,String)
            End If
            If (CLIENTE_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CLIENTE_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CLIENTE_UNIFORMES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(FECHA_INGRESO_UNIFORMES,Date)
            If (REALIZADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REALIZADO_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(REALIZADO_UNIFORMES,String)
            End If
            If (REVISADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REVISADO_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(REVISADO_UNIFORMES,String)
            End If
            If (APROBADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APROBADO_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(APROBADO_UNIFORMES,String)
            End If
            If (REGISTRADO_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("REGISTRADO_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(REGISTRADO_UNIFORMES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ESTADO_UNIFORMES,Integer)
            If (OBSERVACION_UNIFORMES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACION_UNIFORMES")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OBSERVACION_UNIFORMES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID_UNIFORMES,Long)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FECHA_UNIFORMES,Date)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_FECHA_INGRESO_UNIFORMES,Date)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ESTADO_UNIFORMES,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_UNIFORMES As String,  _
                    ByVal VERSION_UNIFORMES As String,  _
                    ByVal FECHA_UNIFORMES As Date,  _
                    ByVal NOMBRE_UNIFORMES As String,  _
                    ByVal CEDULA_UNIFORMES As String,  _
                    ByVal CLIENTE_UNIFORMES As String,  _
                    ByVal FECHA_INGRESO_UNIFORMES As Date,  _
                    ByVal REALIZADO_UNIFORMES As String,  _
                    ByVal REVISADO_UNIFORMES As String,  _
                    ByVal APROBADO_UNIFORMES As String,  _
                    ByVal REGISTRADO_UNIFORMES As String,  _
                    ByVal ESTADO_UNIFORMES As Integer,  _
                    ByVal OBSERVACION_UNIFORMES As String,  _
                    ByVal Original_ID_UNIFORMES As Long,  _
                    ByVal Original_FECHA_UNIFORMES As Date,  _
                    ByVal Original_FECHA_INGRESO_UNIFORMES As Date,  _
                    ByVal Original_ESTADO_UNIFORMES As Integer) As Integer
            Return Me.Update(Original_ID_UNIFORMES, CODIGO_UNIFORMES, VERSION_UNIFORMES, FECHA_UNIFORMES, NOMBRE_UNIFORMES, CEDULA_UNIFORMES, CLIENTE_UNIFORMES, FECHA_INGRESO_UNIFORMES, REALIZADO_UNIFORMES, REVISADO_UNIFORMES, APROBADO_UNIFORMES, REGISTRADO_UNIFORMES, ESTADO_UNIFORMES, OBSERVACION_UNIFORMES, Original_ID_UNIFORMES, Original_FECHA_UNIFORMES, Original_FECHA_INGRESO_UNIFORMES, Original_ESTADO_UNIFORMES)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _dETALLE_UNIFORMESTableAdapter As DETALLE_UNIFORMESTableAdapter
        
        Private _kARDEXTableAdapter As KARDEXTableAdapter
        
        Private _sECUENCIAL_ITEMTableAdapter As SECUENCIAL_ITEMTableAdapter
        
        Private _eNTREGA_UNIFORMESTableAdapter As ENTREGA_UNIFORMESTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DETALLE_UNIFORMESTableAdapter() As DETALLE_UNIFORMESTableAdapter
            Get
                Return Me._dETALLE_UNIFORMESTableAdapter
            End Get
            Set
                Me._dETALLE_UNIFORMESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property KARDEXTableAdapter() As KARDEXTableAdapter
            Get
                Return Me._kARDEXTableAdapter
            End Get
            Set
                Me._kARDEXTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SECUENCIAL_ITEMTableAdapter() As SECUENCIAL_ITEMTableAdapter
            Get
                Return Me._sECUENCIAL_ITEMTableAdapter
            End Get
            Set
                Me._sECUENCIAL_ITEMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ENTREGA_UNIFORMESTableAdapter() As ENTREGA_UNIFORMESTableAdapter
            Get
                Return Me._eNTREGA_UNIFORMESTableAdapter
            End Get
            Set
                Me._eNTREGA_UNIFORMESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dETALLE_UNIFORMESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dETALLE_UNIFORMESTableAdapter.Connection
                End If
                If ((Not (Me._kARDEXTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._kARDEXTableAdapter.Connection) Is Nothing)) Then
                    Return Me._kARDEXTableAdapter.Connection
                End If
                If ((Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sECUENCIAL_ITEMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sECUENCIAL_ITEMTableAdapter.Connection
                End If
                If ((Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._eNTREGA_UNIFORMESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._eNTREGA_UNIFORMESTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsEntregaUNIFORMES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.KARDEX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._kARDEXTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ENTREGA_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._eNTREGA_UNIFORMESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DETALLE_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dETALLE_UNIFORMESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsEntregaUNIFORMES, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.KARDEX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._kARDEXTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ENTREGA_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._eNTREGA_UNIFORMESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DETALLE_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dETALLE_UNIFORMESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsEntregaUNIFORMES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DETALLE_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dETALLE_UNIFORMESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ENTREGA_UNIFORMES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._eNTREGA_UNIFORMESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.KARDEX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._kARDEXTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SECUENCIAL_ITEM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sECUENCIAL_ITEMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsEntregaUNIFORMES) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dETALLE_UNIFORMESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._kARDEXTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._kARDEXTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sECUENCIAL_ITEMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._eNTREGA_UNIFORMESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dETALLE_UNIFORMESTableAdapter, Me._dETALLE_UNIFORMESTableAdapter.Connection)
                    Me._dETALLE_UNIFORMESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dETALLE_UNIFORMESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dETALLE_UNIFORMESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dETALLE_UNIFORMESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dETALLE_UNIFORMESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._kARDEXTableAdapter, Me._kARDEXTableAdapter.Connection)
                    Me._kARDEXTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._kARDEXTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._kARDEXTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._kARDEXTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._kARDEXTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sECUENCIAL_ITEMTableAdapter, Me._sECUENCIAL_ITEMTableAdapter.Connection)
                    Me._sECUENCIAL_ITEMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sECUENCIAL_ITEMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sECUENCIAL_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sECUENCIAL_ITEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sECUENCIAL_ITEMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._eNTREGA_UNIFORMESTableAdapter, Me._eNTREGA_UNIFORMESTableAdapter.Connection)
                    Me._eNTREGA_UNIFORMESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._eNTREGA_UNIFORMESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._eNTREGA_UNIFORMESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._eNTREGA_UNIFORMESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._eNTREGA_UNIFORMESTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._dETALLE_UNIFORMESTableAdapter) Is Nothing) Then
                    Me._dETALLE_UNIFORMESTableAdapter.Connection = CType(revertConnections(Me._dETALLE_UNIFORMESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dETALLE_UNIFORMESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._kARDEXTableAdapter) Is Nothing) Then
                    Me._kARDEXTableAdapter.Connection = CType(revertConnections(Me._kARDEXTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._kARDEXTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sECUENCIAL_ITEMTableAdapter) Is Nothing) Then
                    Me._sECUENCIAL_ITEMTableAdapter.Connection = CType(revertConnections(Me._sECUENCIAL_ITEMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sECUENCIAL_ITEMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._eNTREGA_UNIFORMESTableAdapter) Is Nothing) Then
                    Me._eNTREGA_UNIFORMESTableAdapter.Connection = CType(revertConnections(Me._eNTREGA_UNIFORMESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._eNTREGA_UNIFORMESTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
