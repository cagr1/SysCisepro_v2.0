'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetComprobanteIngresoBancos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetComprobanteIngresoBancos
    Inherits Global.System.Data.DataSet
    
    Private tableASIENTOS_LIBRO_DIARIO As ASIENTOS_LIBRO_DIARIODataTable
    
    Private tableBANCOS As BANCOSDataTable
    
    Private tableCLIENTE_GENERAL As CLIENTE_GENERALDataTable
    
    Private tableCOMPROBANTE_INGRESO_BANCOS As COMPROBANTE_INGRESO_BANCOSDataTable
    
    Private tableCUENTAS_BANCOS As CUENTAS_BANCOSDataTable
    
    Private tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable
    
    Private relationNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataRelation
    
    Private relationASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO As Global.System.Data.DataRelation
    
    Private relationCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataRelation
    
    Private relationBANCOS_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataRelation
    
    Private relationCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ASIENTOS_LIBRO_DIARIO")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_LIBRO_DIARIODataTable(ds.Tables("ASIENTOS_LIBRO_DIARIO")))
            End If
            If (Not (ds.Tables("BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New BANCOSDataTable(ds.Tables("BANCOS")))
            End If
            If (Not (ds.Tables("CLIENTE_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTE_GENERALDataTable(ds.Tables("CLIENTE_GENERAL")))
            End If
            If (Not (ds.Tables("COMPROBANTE_INGRESO_BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTE_INGRESO_BANCOSDataTable(ds.Tables("COMPROBANTE_INGRESO_BANCOS")))
            End If
            If (Not (ds.Tables("CUENTAS_BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New CUENTAS_BANCOSDataTable(ds.Tables("CUENTAS_BANCOS")))
            End If
            If (Not (ds.Tables("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable(ds.Tables("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_LIBRO_DIARIO() As ASIENTOS_LIBRO_DIARIODataTable
        Get
            Return Me.tableASIENTOS_LIBRO_DIARIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BANCOS() As BANCOSDataTable
        Get
            Return Me.tableBANCOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CLIENTE_GENERAL() As CLIENTE_GENERALDataTable
        Get
            Return Me.tableCLIENTE_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COMPROBANTE_INGRESO_BANCOS() As COMPROBANTE_INGRESO_BANCOSDataTable
        Get
            Return Me.tableCOMPROBANTE_INGRESO_BANCOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CUENTAS_BANCOS() As CUENTAS_BANCOSDataTable
        Get
            Return Me.tableCUENTAS_BANCOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable
        Get
            Return Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetComprobanteIngresoBancos = CType(MyBase.Clone,DataSetComprobanteIngresoBancos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ASIENTOS_LIBRO_DIARIO")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_LIBRO_DIARIODataTable(ds.Tables("ASIENTOS_LIBRO_DIARIO")))
            End If
            If (Not (ds.Tables("BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New BANCOSDataTable(ds.Tables("BANCOS")))
            End If
            If (Not (ds.Tables("CLIENTE_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTE_GENERALDataTable(ds.Tables("CLIENTE_GENERAL")))
            End If
            If (Not (ds.Tables("COMPROBANTE_INGRESO_BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTE_INGRESO_BANCOSDataTable(ds.Tables("COMPROBANTE_INGRESO_BANCOS")))
            End If
            If (Not (ds.Tables("CUENTAS_BANCOS")) Is Nothing) Then
                MyBase.Tables.Add(New CUENTAS_BANCOSDataTable(ds.Tables("CUENTAS_BANCOS")))
            End If
            If (Not (ds.Tables("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable(ds.Tables("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableASIENTOS_LIBRO_DIARIO = CType(MyBase.Tables("ASIENTOS_LIBRO_DIARIO"),ASIENTOS_LIBRO_DIARIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_LIBRO_DIARIO) Is Nothing) Then
                Me.tableASIENTOS_LIBRO_DIARIO.InitVars
            End If
        End If
        Me.tableBANCOS = CType(MyBase.Tables("BANCOS"),BANCOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBANCOS) Is Nothing) Then
                Me.tableBANCOS.InitVars
            End If
        End If
        Me.tableCLIENTE_GENERAL = CType(MyBase.Tables("CLIENTE_GENERAL"),CLIENTE_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCLIENTE_GENERAL) Is Nothing) Then
                Me.tableCLIENTE_GENERAL.InitVars
            End If
        End If
        Me.tableCOMPROBANTE_INGRESO_BANCOS = CType(MyBase.Tables("COMPROBANTE_INGRESO_BANCOS"),COMPROBANTE_INGRESO_BANCOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOMPROBANTE_INGRESO_BANCOS) Is Nothing) Then
                Me.tableCOMPROBANTE_INGRESO_BANCOS.InitVars
            End If
        End If
        Me.tableCUENTAS_BANCOS = CType(MyBase.Tables("CUENTAS_BANCOS"),CUENTAS_BANCOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCUENTAS_BANCOS) Is Nothing) Then
                Me.tableCUENTAS_BANCOS.InitVars
            End If
        End If
        Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO = CType(MyBase.Tables("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO"),NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable)
        If (initTable = true) Then
            If (Not (Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO) Is Nothing) Then
                Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.InitVars
            End If
        End If
        Me.relationNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS = Me.Relations("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS")
        Me.relationASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO = Me.Relations("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")
        Me.relationCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS = Me.Relations("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS")
        Me.relationBANCOS_COMPROBANTE_INGRESO_BANCOS = Me.Relations("BANCOS_COMPROBANTE_INGRESO_BANCOS")
        Me.relationCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS = Me.Relations("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetComprobanteIngresoBancos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetComprobanteIngresoBancos.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableASIENTOS_LIBRO_DIARIO = New ASIENTOS_LIBRO_DIARIODataTable()
        MyBase.Tables.Add(Me.tableASIENTOS_LIBRO_DIARIO)
        Me.tableBANCOS = New BANCOSDataTable()
        MyBase.Tables.Add(Me.tableBANCOS)
        Me.tableCLIENTE_GENERAL = New CLIENTE_GENERALDataTable()
        MyBase.Tables.Add(Me.tableCLIENTE_GENERAL)
        Me.tableCOMPROBANTE_INGRESO_BANCOS = New COMPROBANTE_INGRESO_BANCOSDataTable()
        MyBase.Tables.Add(Me.tableCOMPROBANTE_INGRESO_BANCOS)
        Me.tableCUENTAS_BANCOS = New CUENTAS_BANCOSDataTable()
        MyBase.Tables.Add(Me.tableCUENTAS_BANCOS)
        Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO = New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable()
        MyBase.Tables.Add(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO)
        Me.relationNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataRelation("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS", New Global.System.Data.DataColumn() {Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_COMPROBANTE_INGRESO_BANCOSColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_COMPROBANTE_INGRESO_BANCOSColumn}, false)
        Me.Relations.Add(Me.relationNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS)
        Me.relationASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO = New Global.System.Data.DataRelation("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO", New Global.System.Data.DataColumn() {Me.tableASIENTOS_LIBRO_DIARIO.NUMERO_REGISTRO_ASIENTOColumn}, New Global.System.Data.DataColumn() {Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.NUMERO_REGISTROColumn}, false)
        Me.Relations.Add(Me.relationASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO)
        Me.relationCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataRelation("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS", New Global.System.Data.DataColumn() {Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CLIENTE_GENERALColumn}, false)
        Me.Relations.Add(Me.relationCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS)
        Me.relationBANCOS_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataRelation("BANCOS_COMPROBANTE_INGRESO_BANCOS", New Global.System.Data.DataColumn() {Me.tableBANCOS.ID_BANCOColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_BANCOColumn}, false)
        Me.Relations.Add(Me.relationBANCOS_COMPROBANTE_INGRESO_BANCOS)
        Me.relationCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataRelation("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS", New Global.System.Data.DataColumn() {Me.tableCUENTAS_BANCOS.ID_CUENTA_BANCOSColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CUENTA_BANCOSColumn}, false)
        Me.Relations.Add(Me.relationCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeASIENTOS_LIBRO_DIARIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeBANCOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCLIENTE_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCOMPROBANTE_INGRESO_BANCOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCUENTAS_BANCOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ASIENTOS_LIBRO_DIARIORowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_LIBRO_DIARIORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub BANCOSRowChangeEventHandler(ByVal sender As Object, ByVal e As BANCOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CLIENTE_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENTE_GENERALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub COMPROBANTE_INGRESO_BANCOSRowChangeEventHandler(ByVal sender As Object, ByVal e As COMPROBANTE_INGRESO_BANCOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CUENTAS_BANCOSRowChangeEventHandler(ByVal sender As Object, ByVal e As CUENTAS_BANCOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEventHandler(ByVal sender As Object, ByVal e As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_LIBRO_DIARIODataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_LIBRO_DIARIORow)
        
        Private columnID_ASIENTO As Global.System.Data.DataColumn
        
        Private columnFECHA_ASIENTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_CUENTA_ASIENTO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CUENTA_ASIENTO As Global.System.Data.DataColumn
        
        Private columnCONCEPTO_ASIENTO As Global.System.Data.DataColumn
        
        Private columnDETALLE_TRANSACCION_ASIENTO As Global.System.Data.DataColumn
        
        Private columnPROVINCIA_ASIENTO As Global.System.Data.DataColumn
        
        Private columnCIUDAD_ASIENTO As Global.System.Data.DataColumn
        
        Private columnPARROQUIA_ASIENTO As Global.System.Data.DataColumn
        
        Private columnCENTRO_COSTO_ASIENTO As Global.System.Data.DataColumn
        
        Private columnVALOR_DEBE_ASIENTO As Global.System.Data.DataColumn
        
        Private columnVALOR_HABER_ASIENTO As Global.System.Data.DataColumn
        
        Private columnNUMERO_REGISTRO_ASIENTO As Global.System.Data.DataColumn
        
        Private columnDEBE_HABER As Global.System.Data.DataColumn
        
        Private columnCONCILIAR_ASIENTO As Global.System.Data.DataColumn
        
        Private columnESTADO_ASIENTO As Global.System.Data.DataColumn
        
        Private columnID_LIBRO_DIARIO As Global.System.Data.DataColumn
        
        Private columnESTADO_MAYOR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_LIBRO_DIARIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_CUENTA_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CUENTA_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_CUENTA_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CUENTA_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONCEPTO_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DETALLE_TRANSACCION_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_TRANSACCION_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PROVINCIA_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCIA_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CIUDAD_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIUDAD_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PARROQUIA_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARROQUIA_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CENTRO_COSTO_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_COSTO_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_DEBE_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_DEBE_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_HABER_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_HABER_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_REGISTRO_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_REGISTRO_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DEBE_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONCILIAR_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCILIAR_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LIBRO_DIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LIBRO_DIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_MAYORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_MAYOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_LIBRO_DIARIORow
            Get
                Return CType(Me.Rows(index),ASIENTOS_LIBRO_DIARIORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ASIENTOS_LIBRO_DIARIORowChanging As ASIENTOS_LIBRO_DIARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ASIENTOS_LIBRO_DIARIORowChanged As ASIENTOS_LIBRO_DIARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ASIENTOS_LIBRO_DIARIORowDeleting As ASIENTOS_LIBRO_DIARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ASIENTOS_LIBRO_DIARIORowDeleted As ASIENTOS_LIBRO_DIARIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddASIENTOS_LIBRO_DIARIORow(ByVal row As ASIENTOS_LIBRO_DIARIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddASIENTOS_LIBRO_DIARIORow( _
                    ByVal ID_ASIENTO As Long,  _
                    ByVal FECHA_ASIENTO As Date,  _
                    ByVal CODIGO_CUENTA_ASIENTO As String,  _
                    ByVal NOMBRE_CUENTA_ASIENTO As String,  _
                    ByVal CONCEPTO_ASIENTO As String,  _
                    ByVal DETALLE_TRANSACCION_ASIENTO As String,  _
                    ByVal PROVINCIA_ASIENTO As String,  _
                    ByVal CIUDAD_ASIENTO As String,  _
                    ByVal PARROQUIA_ASIENTO As String,  _
                    ByVal CENTRO_COSTO_ASIENTO As String,  _
                    ByVal VALOR_DEBE_ASIENTO As Decimal,  _
                    ByVal VALOR_HABER_ASIENTO As Decimal,  _
                    ByVal NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal DEBE_HABER As Integer,  _
                    ByVal CONCILIAR_ASIENTO As Integer,  _
                    ByVal ESTADO_ASIENTO As Integer,  _
                    ByVal ID_LIBRO_DIARIO As Long,  _
                    ByVal ESTADO_MAYOR As Integer) As ASIENTOS_LIBRO_DIARIORow
            Dim rowASIENTOS_LIBRO_DIARIORow As ASIENTOS_LIBRO_DIARIORow = CType(Me.NewRow,ASIENTOS_LIBRO_DIARIORow)
            Dim columnValuesArray() As Object = New Object() {ID_ASIENTO, FECHA_ASIENTO, CODIGO_CUENTA_ASIENTO, NOMBRE_CUENTA_ASIENTO, CONCEPTO_ASIENTO, DETALLE_TRANSACCION_ASIENTO, PROVINCIA_ASIENTO, CIUDAD_ASIENTO, PARROQUIA_ASIENTO, CENTRO_COSTO_ASIENTO, VALOR_DEBE_ASIENTO, VALOR_HABER_ASIENTO, NUMERO_REGISTRO_ASIENTO, DEBE_HABER, CONCILIAR_ASIENTO, ESTADO_ASIENTO, ID_LIBRO_DIARIO, ESTADO_MAYOR}
            rowASIENTOS_LIBRO_DIARIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_LIBRO_DIARIORow)
            Return rowASIENTOS_LIBRO_DIARIORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_ASIENTO(ByVal ID_ASIENTO As Long) As ASIENTOS_LIBRO_DIARIORow
            Return CType(Me.Rows.Find(New Object() {ID_ASIENTO}),ASIENTOS_LIBRO_DIARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_LIBRO_DIARIODataTable = CType(MyBase.Clone,ASIENTOS_LIBRO_DIARIODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_LIBRO_DIARIODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_ASIENTO = MyBase.Columns("ID_ASIENTO")
            Me.columnFECHA_ASIENTO = MyBase.Columns("FECHA_ASIENTO")
            Me.columnCODIGO_CUENTA_ASIENTO = MyBase.Columns("CODIGO_CUENTA_ASIENTO")
            Me.columnNOMBRE_CUENTA_ASIENTO = MyBase.Columns("NOMBRE_CUENTA_ASIENTO")
            Me.columnCONCEPTO_ASIENTO = MyBase.Columns("CONCEPTO_ASIENTO")
            Me.columnDETALLE_TRANSACCION_ASIENTO = MyBase.Columns("DETALLE_TRANSACCION_ASIENTO")
            Me.columnPROVINCIA_ASIENTO = MyBase.Columns("PROVINCIA_ASIENTO")
            Me.columnCIUDAD_ASIENTO = MyBase.Columns("CIUDAD_ASIENTO")
            Me.columnPARROQUIA_ASIENTO = MyBase.Columns("PARROQUIA_ASIENTO")
            Me.columnCENTRO_COSTO_ASIENTO = MyBase.Columns("CENTRO_COSTO_ASIENTO")
            Me.columnVALOR_DEBE_ASIENTO = MyBase.Columns("VALOR_DEBE_ASIENTO")
            Me.columnVALOR_HABER_ASIENTO = MyBase.Columns("VALOR_HABER_ASIENTO")
            Me.columnNUMERO_REGISTRO_ASIENTO = MyBase.Columns("NUMERO_REGISTRO_ASIENTO")
            Me.columnDEBE_HABER = MyBase.Columns("DEBE_HABER")
            Me.columnCONCILIAR_ASIENTO = MyBase.Columns("CONCILIAR_ASIENTO")
            Me.columnESTADO_ASIENTO = MyBase.Columns("ESTADO_ASIENTO")
            Me.columnID_LIBRO_DIARIO = MyBase.Columns("ID_LIBRO_DIARIO")
            Me.columnESTADO_MAYOR = MyBase.Columns("ESTADO_MAYOR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_ASIENTO = New Global.System.Data.DataColumn("ID_ASIENTO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ASIENTO)
            Me.columnFECHA_ASIENTO = New Global.System.Data.DataColumn("FECHA_ASIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ASIENTO)
            Me.columnCODIGO_CUENTA_ASIENTO = New Global.System.Data.DataColumn("CODIGO_CUENTA_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CUENTA_ASIENTO)
            Me.columnNOMBRE_CUENTA_ASIENTO = New Global.System.Data.DataColumn("NOMBRE_CUENTA_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CUENTA_ASIENTO)
            Me.columnCONCEPTO_ASIENTO = New Global.System.Data.DataColumn("CONCEPTO_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO_ASIENTO)
            Me.columnDETALLE_TRANSACCION_ASIENTO = New Global.System.Data.DataColumn("DETALLE_TRANSACCION_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_TRANSACCION_ASIENTO)
            Me.columnPROVINCIA_ASIENTO = New Global.System.Data.DataColumn("PROVINCIA_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCIA_ASIENTO)
            Me.columnCIUDAD_ASIENTO = New Global.System.Data.DataColumn("CIUDAD_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIUDAD_ASIENTO)
            Me.columnPARROQUIA_ASIENTO = New Global.System.Data.DataColumn("PARROQUIA_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARROQUIA_ASIENTO)
            Me.columnCENTRO_COSTO_ASIENTO = New Global.System.Data.DataColumn("CENTRO_COSTO_ASIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_COSTO_ASIENTO)
            Me.columnVALOR_DEBE_ASIENTO = New Global.System.Data.DataColumn("VALOR_DEBE_ASIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_DEBE_ASIENTO)
            Me.columnVALOR_HABER_ASIENTO = New Global.System.Data.DataColumn("VALOR_HABER_ASIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_HABER_ASIENTO)
            Me.columnNUMERO_REGISTRO_ASIENTO = New Global.System.Data.DataColumn("NUMERO_REGISTRO_ASIENTO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_REGISTRO_ASIENTO)
            Me.columnDEBE_HABER = New Global.System.Data.DataColumn("DEBE_HABER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_HABER)
            Me.columnCONCILIAR_ASIENTO = New Global.System.Data.DataColumn("CONCILIAR_ASIENTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCILIAR_ASIENTO)
            Me.columnESTADO_ASIENTO = New Global.System.Data.DataColumn("ESTADO_ASIENTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_ASIENTO)
            Me.columnID_LIBRO_DIARIO = New Global.System.Data.DataColumn("ID_LIBRO_DIARIO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LIBRO_DIARIO)
            Me.columnESTADO_MAYOR = New Global.System.Data.DataColumn("ESTADO_MAYOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_MAYOR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_ASIENTO}, true))
            Me.columnID_ASIENTO.AllowDBNull = false
            Me.columnID_ASIENTO.Unique = true
            Me.columnFECHA_ASIENTO.AllowDBNull = false
            Me.columnCODIGO_CUENTA_ASIENTO.AllowDBNull = false
            Me.columnCODIGO_CUENTA_ASIENTO.MaxLength = 2147483647
            Me.columnNOMBRE_CUENTA_ASIENTO.AllowDBNull = false
            Me.columnNOMBRE_CUENTA_ASIENTO.MaxLength = 2147483647
            Me.columnCONCEPTO_ASIENTO.AllowDBNull = false
            Me.columnCONCEPTO_ASIENTO.MaxLength = 2147483647
            Me.columnDETALLE_TRANSACCION_ASIENTO.AllowDBNull = false
            Me.columnDETALLE_TRANSACCION_ASIENTO.MaxLength = 2147483647
            Me.columnPROVINCIA_ASIENTO.AllowDBNull = false
            Me.columnPROVINCIA_ASIENTO.MaxLength = 2147483647
            Me.columnCIUDAD_ASIENTO.AllowDBNull = false
            Me.columnCIUDAD_ASIENTO.MaxLength = 2147483647
            Me.columnPARROQUIA_ASIENTO.AllowDBNull = false
            Me.columnPARROQUIA_ASIENTO.MaxLength = 2147483647
            Me.columnCENTRO_COSTO_ASIENTO.AllowDBNull = false
            Me.columnCENTRO_COSTO_ASIENTO.MaxLength = 2147483647
            Me.columnNUMERO_REGISTRO_ASIENTO.AllowDBNull = false
            Me.columnDEBE_HABER.AllowDBNull = false
            Me.columnESTADO_ASIENTO.AllowDBNull = false
            Me.columnID_LIBRO_DIARIO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewASIENTOS_LIBRO_DIARIORow() As ASIENTOS_LIBRO_DIARIORow
            Return CType(Me.NewRow,ASIENTOS_LIBRO_DIARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_LIBRO_DIARIORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_LIBRO_DIARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_LIBRO_DIARIORowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_LIBRO_DIARIORowChanged(Me, New ASIENTOS_LIBRO_DIARIORowChangeEvent(CType(e.Row,ASIENTOS_LIBRO_DIARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_LIBRO_DIARIORowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_LIBRO_DIARIORowChanging(Me, New ASIENTOS_LIBRO_DIARIORowChangeEvent(CType(e.Row,ASIENTOS_LIBRO_DIARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_LIBRO_DIARIORowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_LIBRO_DIARIORowDeleted(Me, New ASIENTOS_LIBRO_DIARIORowChangeEvent(CType(e.Row,ASIENTOS_LIBRO_DIARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_LIBRO_DIARIORowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_LIBRO_DIARIORowDeleting(Me, New ASIENTOS_LIBRO_DIARIORowChangeEvent(CType(e.Row,ASIENTOS_LIBRO_DIARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveASIENTOS_LIBRO_DIARIORow(ByVal row As ASIENTOS_LIBRO_DIARIORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_LIBRO_DIARIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BANCOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of BANCOSRow)
        
        Private columnID_BANCO As Global.System.Data.DataColumn
        
        Private columnCODIGO_BANCO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_BANCO As Global.System.Data.DataColumn
        
        Private columnDIRECCION_BANCO As Global.System.Data.DataColumn
        
        Private columnOFICIAL_CREDITO_BANCO As Global.System.Data.DataColumn
        
        Private columnTELEFONO_BANCO As Global.System.Data.DataColumn
        
        Private columnFAX_BANCO As Global.System.Data.DataColumn
        
        Private columnEMAIL_BANCO As Global.System.Data.DataColumn
        
        Private columnESTADO_BANCO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BANCOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OFICIAL_CREDITO_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFICIAL_CREDITO_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FAX_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAIL_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BANCOSRow
            Get
                Return CType(Me.Rows(index),BANCOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BANCOSRowChanging As BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BANCOSRowChanged As BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BANCOSRowDeleting As BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BANCOSRowDeleted As BANCOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddBANCOSRow(ByVal row As BANCOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddBANCOSRow(ByVal ID_BANCO As Integer, ByVal CODIGO_BANCO As String, ByVal NOMBRE_BANCO As String, ByVal DIRECCION_BANCO As String, ByVal OFICIAL_CREDITO_BANCO As String, ByVal TELEFONO_BANCO As String, ByVal FAX_BANCO As String, ByVal EMAIL_BANCO As String, ByVal ESTADO_BANCO As Integer) As BANCOSRow
            Dim rowBANCOSRow As BANCOSRow = CType(Me.NewRow,BANCOSRow)
            Dim columnValuesArray() As Object = New Object() {ID_BANCO, CODIGO_BANCO, NOMBRE_BANCO, DIRECCION_BANCO, OFICIAL_CREDITO_BANCO, TELEFONO_BANCO, FAX_BANCO, EMAIL_BANCO, ESTADO_BANCO}
            rowBANCOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBANCOSRow)
            Return rowBANCOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_BANCO(ByVal ID_BANCO As Integer) As BANCOSRow
            Return CType(Me.Rows.Find(New Object() {ID_BANCO}),BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BANCOSDataTable = CType(MyBase.Clone,BANCOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BANCOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_BANCO = MyBase.Columns("ID_BANCO")
            Me.columnCODIGO_BANCO = MyBase.Columns("CODIGO_BANCO")
            Me.columnNOMBRE_BANCO = MyBase.Columns("NOMBRE_BANCO")
            Me.columnDIRECCION_BANCO = MyBase.Columns("DIRECCION_BANCO")
            Me.columnOFICIAL_CREDITO_BANCO = MyBase.Columns("OFICIAL_CREDITO_BANCO")
            Me.columnTELEFONO_BANCO = MyBase.Columns("TELEFONO_BANCO")
            Me.columnFAX_BANCO = MyBase.Columns("FAX_BANCO")
            Me.columnEMAIL_BANCO = MyBase.Columns("EMAIL_BANCO")
            Me.columnESTADO_BANCO = MyBase.Columns("ESTADO_BANCO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_BANCO = New Global.System.Data.DataColumn("ID_BANCO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BANCO)
            Me.columnCODIGO_BANCO = New Global.System.Data.DataColumn("CODIGO_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_BANCO)
            Me.columnNOMBRE_BANCO = New Global.System.Data.DataColumn("NOMBRE_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_BANCO)
            Me.columnDIRECCION_BANCO = New Global.System.Data.DataColumn("DIRECCION_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_BANCO)
            Me.columnOFICIAL_CREDITO_BANCO = New Global.System.Data.DataColumn("OFICIAL_CREDITO_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFICIAL_CREDITO_BANCO)
            Me.columnTELEFONO_BANCO = New Global.System.Data.DataColumn("TELEFONO_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_BANCO)
            Me.columnFAX_BANCO = New Global.System.Data.DataColumn("FAX_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX_BANCO)
            Me.columnEMAIL_BANCO = New Global.System.Data.DataColumn("EMAIL_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_BANCO)
            Me.columnESTADO_BANCO = New Global.System.Data.DataColumn("ESTADO_BANCO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_BANCO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_BANCO}, true))
            Me.columnID_BANCO.AllowDBNull = false
            Me.columnID_BANCO.Unique = true
            Me.columnCODIGO_BANCO.MaxLength = 2147483647
            Me.columnNOMBRE_BANCO.AllowDBNull = false
            Me.columnNOMBRE_BANCO.MaxLength = 2147483647
            Me.columnDIRECCION_BANCO.AllowDBNull = false
            Me.columnDIRECCION_BANCO.MaxLength = 2147483647
            Me.columnOFICIAL_CREDITO_BANCO.AllowDBNull = false
            Me.columnOFICIAL_CREDITO_BANCO.MaxLength = 2147483647
            Me.columnTELEFONO_BANCO.AllowDBNull = false
            Me.columnTELEFONO_BANCO.MaxLength = 2147483647
            Me.columnFAX_BANCO.AllowDBNull = false
            Me.columnFAX_BANCO.MaxLength = 2147483647
            Me.columnEMAIL_BANCO.AllowDBNull = false
            Me.columnEMAIL_BANCO.MaxLength = 2147483647
            Me.columnESTADO_BANCO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewBANCOSRow() As BANCOSRow
            Return CType(Me.NewRow,BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BANCOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BANCOSRowChangedEvent) Is Nothing) Then
                RaiseEvent BANCOSRowChanged(Me, New BANCOSRowChangeEvent(CType(e.Row,BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BANCOSRowChangingEvent) Is Nothing) Then
                RaiseEvent BANCOSRowChanging(Me, New BANCOSRowChangeEvent(CType(e.Row,BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BANCOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent BANCOSRowDeleted(Me, New BANCOSRowChangeEvent(CType(e.Row,BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BANCOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent BANCOSRowDeleting(Me, New BANCOSRowChangeEvent(CType(e.Row,BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveBANCOSRow(ByVal row As BANCOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BANCOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CLIENTE_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENTE_GENERALRow)
        
        Private columnID_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCODIGO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_IDENTIFICACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnRUC_CI_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As Global.System.Data.DataColumn
        
        Private columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnDIRECCION_UBICACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnDIRECCION_FACTURACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONSORCIO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnTELEFONO_1_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_2_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnEMAIL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONTACTO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnFECHA_INGRESO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnESTADO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CLIENTE_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_IDENTIFICACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RUC_CI_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CI_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_UBICACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_FACTURACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSORCIO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSORCIO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_1_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_1_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_2_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_2_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAIL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_INGRESO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_INGRESO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONES_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CLIENTE_GENERALRow
            Get
                Return CType(Me.Rows(index),CLIENTE_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowChanging As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowChanged As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowDeleting As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowDeleted As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCLIENTE_GENERALRow(ByVal row As CLIENTE_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCLIENTE_GENERALRow( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Date,  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String) As CLIENTE_GENERALRow
            Dim rowCLIENTE_GENERALRow As CLIENTE_GENERALRow = CType(Me.NewRow,CLIENTE_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE_GENERAL}
            rowCLIENTE_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENTE_GENERALRow)
            Return rowCLIENTE_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CLIENTE_GENERAL(ByVal ID_CLIENTE_GENERAL As Long) As CLIENTE_GENERALRow
            Return CType(Me.Rows.Find(New Object() {ID_CLIENTE_GENERAL}),CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENTE_GENERALDataTable = CType(MyBase.Clone,CLIENTE_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENTE_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CLIENTE_GENERAL = MyBase.Columns("ID_CLIENTE_GENERAL")
            Me.columnCODIGO_CLIENTE_GENERAL = MyBase.Columns("CODIGO_CLIENTE_GENERAL")
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL = MyBase.Columns("TIPO_IDENTIFICACION_CLIENTE_GENERAL")
            Me.columnRUC_CI_CLIENTE_GENERAL = MyBase.Columns("RUC_CI_CLIENTE_GENERAL")
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL = MyBase.Columns("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL")
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL = MyBase.Columns("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL")
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = MyBase.Columns("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL")
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL = MyBase.Columns("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL")
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL = MyBase.Columns("DIRECCION_UBICACION_CLIENTE_GENERAL")
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL = MyBase.Columns("DIRECCION_FACTURACION_CLIENTE_GENERAL")
            Me.columnCONSORCIO_CLIENTE_GENERAL = MyBase.Columns("CONSORCIO_CLIENTE_GENERAL")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnTELEFONO_1_CLIENTE_GENERAL = MyBase.Columns("TELEFONO_1_CLIENTE_GENERAL")
            Me.columnTELEFONO_2_CLIENTE_GENERAL = MyBase.Columns("TELEFONO_2_CLIENTE_GENERAL")
            Me.columnEMAIL_CLIENTE_GENERAL = MyBase.Columns("EMAIL_CLIENTE_GENERAL")
            Me.columnCONTACTO_CLIENTE_GENERAL = MyBase.Columns("CONTACTO_CLIENTE_GENERAL")
            Me.columnFECHA_INGRESO_CLIENTE_GENERAL = MyBase.Columns("FECHA_INGRESO_CLIENTE_GENERAL")
            Me.columnTIPO_CLIENTE_GENERAL = MyBase.Columns("TIPO_CLIENTE_GENERAL")
            Me.columnOBSERVACIONES_CLIENTE_GENERAL = MyBase.Columns("OBSERVACIONES_CLIENTE_GENERAL")
            Me.columnESTADO_CLIENTE_GENERAL = MyBase.Columns("ESTADO_CLIENTE_GENERAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ID_CLIENTE_GENERAL", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CLIENTE_GENERAL)
            Me.columnCODIGO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CODIGO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CLIENTE_GENERAL)
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TIPO_IDENTIFICACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL)
            Me.columnRUC_CI_CLIENTE_GENERAL = New Global.System.Data.DataColumn("RUC_CI_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CI_CLIENTE_GENERAL)
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL)
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL = New Global.System.Data.DataColumn("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL)
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL)
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL = New Global.System.Data.DataColumn("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL)
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("DIRECCION_UBICACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL)
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("DIRECCION_FACTURACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL)
            Me.columnCONSORCIO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CONSORCIO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSORCIO_CLIENTE_GENERAL)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnTELEFONO_1_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TELEFONO_1_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_1_CLIENTE_GENERAL)
            Me.columnTELEFONO_2_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TELEFONO_2_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_2_CLIENTE_GENERAL)
            Me.columnEMAIL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("EMAIL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_CLIENTE_GENERAL)
            Me.columnCONTACTO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CONTACTO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO_CLIENTE_GENERAL)
            Me.columnFECHA_INGRESO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("FECHA_INGRESO_CLIENTE_GENERAL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_INGRESO_CLIENTE_GENERAL)
            Me.columnTIPO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TIPO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CLIENTE_GENERAL)
            Me.columnOBSERVACIONES_CLIENTE_GENERAL = New Global.System.Data.DataColumn("OBSERVACIONES_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES_CLIENTE_GENERAL)
            Me.columnESTADO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ESTADO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CLIENTE_GENERAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CLIENTE_GENERAL}, true))
            Me.columnID_CLIENTE_GENERAL.AllowDBNull = false
            Me.columnID_CLIENTE_GENERAL.Unique = true
            Me.columnCODIGO_CLIENTE_GENERAL.MaxLength = 15
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL.MaxLength = 10
            Me.columnRUC_CI_CLIENTE_GENERAL.MaxLength = 15
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL.MaxLength = 2147483647
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL.MaxLength = 50
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL.MaxLength = 5
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnCONSORCIO_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnTELEFONO_1_CLIENTE_GENERAL.MaxLength = 50
            Me.columnTELEFONO_2_CLIENTE_GENERAL.MaxLength = 50
            Me.columnEMAIL_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnCONTACTO_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnTIPO_CLIENTE_GENERAL.MaxLength = 50
            Me.columnOBSERVACIONES_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnESTADO_CLIENTE_GENERAL.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCLIENTE_GENERALRow() As CLIENTE_GENERALRow
            Return CType(Me.NewRow,CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENTE_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENTE_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowChanged(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENTE_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowChanging(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENTE_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowDeleted(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENTE_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowDeleting(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCLIENTE_GENERALRow(ByVal row As CLIENTE_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENTE_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COMPROBANTE_INGRESO_BANCOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPROBANTE_INGRESO_BANCOSRow)
        
        Private columnID_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnFECHA_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnNUMERO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnID_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnVALOR_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnESTADO_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIA As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnID_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnID_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnID_BANCO As Global.System.Data.DataColumn
        
        Private columnID_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COMPROBANTE_INGRESO_BANCOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ACTIVIDAD_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONCEPTO_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FORMA_PAGO_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONES_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COMPROBANTE_INGRESO_BANCOSRow
            Get
                Return CType(Me.Rows(index),COMPROBANTE_INGRESO_BANCOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event COMPROBANTE_INGRESO_BANCOSRowChanging As COMPROBANTE_INGRESO_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event COMPROBANTE_INGRESO_BANCOSRowChanged As COMPROBANTE_INGRESO_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event COMPROBANTE_INGRESO_BANCOSRowDeleting As COMPROBANTE_INGRESO_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event COMPROBANTE_INGRESO_BANCOSRowDeleted As COMPROBANTE_INGRESO_BANCOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCOMPROBANTE_INGRESO_BANCOSRow(ByVal row As COMPROBANTE_INGRESO_BANCOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCOMPROBANTE_INGRESO_BANCOSRow( _
                    ByVal parentNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowByNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow,  _
                    ByVal FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal parentCLIENTE_GENERALRowByCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS As CLIENTE_GENERALRow,  _
                    ByVal ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal CONCEPTO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal parentBANCOSRowByBANCOS_COMPROBANTE_INGRESO_BANCOS As BANCOSRow,  _
                    ByVal parentCUENTAS_BANCOSRowByCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS As CUENTAS_BANCOSRow) As COMPROBANTE_INGRESO_BANCOSRow
            Dim rowCOMPROBANTE_INGRESO_BANCOSRow As COMPROBANTE_INGRESO_BANCOSRow = CType(Me.NewRow,COMPROBANTE_INGRESO_BANCOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FECHA_COMPROBANTE_INGRESO_BANCOS, NUMERO_FACTURA_VENTA, Nothing, ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, CONCEPTO_COMPROBANTE_INGRESO_BANCOS, FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS, VALOR_COMPROBANTE_INGRESO_BANCOS, NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS, ESTADO_COMPROBANTE_INGRESO_BANCOS, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ID_CENTRO_COSTO, Nothing, Nothing}
            If (Not (parentNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowByNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS) Is Nothing) Then
                columnValuesArray(0) = parentNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowByNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS(0)
            End If
            If (Not (parentCLIENTE_GENERALRowByCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS) Is Nothing) Then
                columnValuesArray(3) = parentCLIENTE_GENERALRowByCLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS(0)
            End If
            If (Not (parentBANCOSRowByBANCOS_COMPROBANTE_INGRESO_BANCOS) Is Nothing) Then
                columnValuesArray(15) = parentBANCOSRowByBANCOS_COMPROBANTE_INGRESO_BANCOS(0)
            End If
            If (Not (parentCUENTAS_BANCOSRowByCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS) Is Nothing) Then
                columnValuesArray(16) = parentCUENTAS_BANCOSRowByCUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS(0)
            End If
            rowCOMPROBANTE_INGRESO_BANCOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPROBANTE_INGRESO_BANCOSRow)
            Return rowCOMPROBANTE_INGRESO_BANCOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_COMPROBANTE_INGRESO_BANCOS(ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long) As COMPROBANTE_INGRESO_BANCOSRow
            Return CType(Me.Rows.Find(New Object() {ID_COMPROBANTE_INGRESO_BANCOS}),COMPROBANTE_INGRESO_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPROBANTE_INGRESO_BANCOSDataTable = CType(MyBase.Clone,COMPROBANTE_INGRESO_BANCOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPROBANTE_INGRESO_BANCOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("ID_COMPROBANTE_INGRESO_BANCOS")
            Me.columnFECHA_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("FECHA_COMPROBANTE_INGRESO_BANCOS")
            Me.columnNUMERO_FACTURA_VENTA = MyBase.Columns("NUMERO_FACTURA_VENTA")
            Me.columnID_CLIENTE_GENERAL = MyBase.Columns("ID_CLIENTE_GENERAL")
            Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("CONCEPTO_COMPROBANTE_INGRESO_BANCOS")
            Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS")
            Me.columnVALOR_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("VALOR_COMPROBANTE_INGRESO_BANCOS")
            Me.columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS")
            Me.columnESTADO_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("ESTADO_COMPROBANTE_INGRESO_BANCOS")
            Me.columnID_PROVINCIA = MyBase.Columns("ID_PROVINCIA")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnID_PARROQUIAS = MyBase.Columns("ID_PARROQUIAS")
            Me.columnID_CENTRO_COSTO = MyBase.Columns("ID_CENTRO_COSTO")
            Me.columnID_BANCO = MyBase.Columns("ID_BANCO")
            Me.columnID_CUENTA_BANCOS = MyBase.Columns("ID_CUENTA_BANCOS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("ID_COMPROBANTE_INGRESO_BANCOS", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_COMPROBANTE_INGRESO_BANCOS)
            Me.columnFECHA_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("FECHA_COMPROBANTE_INGRESO_BANCOS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMPROBANTE_INGRESO_BANCOS)
            Me.columnNUMERO_FACTURA_VENTA = New Global.System.Data.DataColumn("NUMERO_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_FACTURA_VENTA)
            Me.columnID_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ID_CLIENTE_GENERAL", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CLIENTE_GENERAL)
            Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS)
            Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("CONCEPTO_COMPROBANTE_INGRESO_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS)
            Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS)
            Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS)
            Me.columnVALOR_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("VALOR_COMPROBANTE_INGRESO_BANCOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_COMPROBANTE_INGRESO_BANCOS)
            Me.columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS)
            Me.columnESTADO_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("ESTADO_COMPROBANTE_INGRESO_BANCOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_COMPROBANTE_INGRESO_BANCOS)
            Me.columnID_PROVINCIA = New Global.System.Data.DataColumn("ID_PROVINCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIA)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnID_PARROQUIAS = New Global.System.Data.DataColumn("ID_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARROQUIAS)
            Me.columnID_CENTRO_COSTO = New Global.System.Data.DataColumn("ID_CENTRO_COSTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CENTRO_COSTO)
            Me.columnID_BANCO = New Global.System.Data.DataColumn("ID_BANCO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BANCO)
            Me.columnID_CUENTA_BANCOS = New Global.System.Data.DataColumn("ID_CUENTA_BANCOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CUENTA_BANCOS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_COMPROBANTE_INGRESO_BANCOS}, true))
            Me.columnID_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnID_COMPROBANTE_INGRESO_BANCOS.Unique = true
            Me.columnFECHA_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnNUMERO_FACTURA_VENTA.AllowDBNull = false
            Me.columnNUMERO_FACTURA_VENTA.MaxLength = 2147483647
            Me.columnID_CLIENTE_GENERAL.AllowDBNull = false
            Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnACTIVIDAD_COMPROBANTE_INGRESO_BANCOS.MaxLength = 50
            Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnCONCEPTO_COMPROBANTE_INGRESO_BANCOS.MaxLength = 2147483647
            Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnFORMA_PAGO_COMPROBANTE_INGRESO_BANCOS.MaxLength = 50
            Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnOBSERVACIONES_COMPROBANTE_INGRESO_BANCOS.MaxLength = 2147483647
            Me.columnVALOR_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS.MaxLength = 50
            Me.columnESTADO_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnID_PROVINCIA.AllowDBNull = false
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_PARROQUIAS.AllowDBNull = false
            Me.columnID_CENTRO_COSTO.AllowDBNull = false
            Me.columnID_BANCO.AllowDBNull = false
            Me.columnID_CUENTA_BANCOS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCOMPROBANTE_INGRESO_BANCOSRow() As COMPROBANTE_INGRESO_BANCOSRow
            Return CType(Me.NewRow,COMPROBANTE_INGRESO_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPROBANTE_INGRESO_BANCOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPROBANTE_INGRESO_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPROBANTE_INGRESO_BANCOSRowChangedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTE_INGRESO_BANCOSRowChanged(Me, New COMPROBANTE_INGRESO_BANCOSRowChangeEvent(CType(e.Row,COMPROBANTE_INGRESO_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPROBANTE_INGRESO_BANCOSRowChangingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTE_INGRESO_BANCOSRowChanging(Me, New COMPROBANTE_INGRESO_BANCOSRowChangeEvent(CType(e.Row,COMPROBANTE_INGRESO_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPROBANTE_INGRESO_BANCOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTE_INGRESO_BANCOSRowDeleted(Me, New COMPROBANTE_INGRESO_BANCOSRowChangeEvent(CType(e.Row,COMPROBANTE_INGRESO_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPROBANTE_INGRESO_BANCOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTE_INGRESO_BANCOSRowDeleting(Me, New COMPROBANTE_INGRESO_BANCOSRowChangeEvent(CType(e.Row,COMPROBANTE_INGRESO_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCOMPROBANTE_INGRESO_BANCOSRow(ByVal row As COMPROBANTE_INGRESO_BANCOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPROBANTE_INGRESO_BANCOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CUENTAS_BANCOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CUENTAS_BANCOSRow)
        
        Private columnID_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        Private columnNUMERO_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        Private columnMONTO_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        Private columnTIPO_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        Private columnESTADO_CUENTA_BANCOS As Global.System.Data.DataColumn
        
        Private columnID_BANCO As Global.System.Data.DataColumn
        
        Private columnCODIGO_PLAN_CUENTAS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CUENTAS_BANCOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MONTO_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTO_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CUENTA_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CUENTA_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_PLAN_CUENTASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PLAN_CUENTAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CUENTAS_BANCOSRow
            Get
                Return CType(Me.Rows(index),CUENTAS_BANCOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CUENTAS_BANCOSRowChanging As CUENTAS_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CUENTAS_BANCOSRowChanged As CUENTAS_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CUENTAS_BANCOSRowDeleting As CUENTAS_BANCOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CUENTAS_BANCOSRowDeleted As CUENTAS_BANCOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCUENTAS_BANCOSRow(ByVal row As CUENTAS_BANCOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCUENTAS_BANCOSRow(ByVal ID_CUENTA_BANCOS As Integer, ByVal NUMERO_CUENTA_BANCOS As String, ByVal MONTO_CUENTA_BANCOS As Decimal, ByVal TIPO_CUENTA_BANCOS As String, ByVal ESTADO_CUENTA_BANCOS As Integer, ByVal ID_BANCO As Integer, ByVal CODIGO_PLAN_CUENTAS As String) As CUENTAS_BANCOSRow
            Dim rowCUENTAS_BANCOSRow As CUENTAS_BANCOSRow = CType(Me.NewRow,CUENTAS_BANCOSRow)
            Dim columnValuesArray() As Object = New Object() {ID_CUENTA_BANCOS, NUMERO_CUENTA_BANCOS, MONTO_CUENTA_BANCOS, TIPO_CUENTA_BANCOS, ESTADO_CUENTA_BANCOS, ID_BANCO, CODIGO_PLAN_CUENTAS}
            rowCUENTAS_BANCOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCUENTAS_BANCOSRow)
            Return rowCUENTAS_BANCOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CUENTA_BANCOS(ByVal ID_CUENTA_BANCOS As Integer) As CUENTAS_BANCOSRow
            Return CType(Me.Rows.Find(New Object() {ID_CUENTA_BANCOS}),CUENTAS_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CUENTAS_BANCOSDataTable = CType(MyBase.Clone,CUENTAS_BANCOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CUENTAS_BANCOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CUENTA_BANCOS = MyBase.Columns("ID_CUENTA_BANCOS")
            Me.columnNUMERO_CUENTA_BANCOS = MyBase.Columns("NUMERO_CUENTA_BANCOS")
            Me.columnMONTO_CUENTA_BANCOS = MyBase.Columns("MONTO_CUENTA_BANCOS")
            Me.columnTIPO_CUENTA_BANCOS = MyBase.Columns("TIPO_CUENTA_BANCOS")
            Me.columnESTADO_CUENTA_BANCOS = MyBase.Columns("ESTADO_CUENTA_BANCOS")
            Me.columnID_BANCO = MyBase.Columns("ID_BANCO")
            Me.columnCODIGO_PLAN_CUENTAS = MyBase.Columns("CODIGO_PLAN_CUENTAS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CUENTA_BANCOS = New Global.System.Data.DataColumn("ID_CUENTA_BANCOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CUENTA_BANCOS)
            Me.columnNUMERO_CUENTA_BANCOS = New Global.System.Data.DataColumn("NUMERO_CUENTA_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_CUENTA_BANCOS)
            Me.columnMONTO_CUENTA_BANCOS = New Global.System.Data.DataColumn("MONTO_CUENTA_BANCOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTO_CUENTA_BANCOS)
            Me.columnTIPO_CUENTA_BANCOS = New Global.System.Data.DataColumn("TIPO_CUENTA_BANCOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CUENTA_BANCOS)
            Me.columnESTADO_CUENTA_BANCOS = New Global.System.Data.DataColumn("ESTADO_CUENTA_BANCOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CUENTA_BANCOS)
            Me.columnID_BANCO = New Global.System.Data.DataColumn("ID_BANCO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BANCO)
            Me.columnCODIGO_PLAN_CUENTAS = New Global.System.Data.DataColumn("CODIGO_PLAN_CUENTAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PLAN_CUENTAS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CUENTA_BANCOS}, true))
            Me.columnID_CUENTA_BANCOS.AllowDBNull = false
            Me.columnID_CUENTA_BANCOS.Unique = true
            Me.columnNUMERO_CUENTA_BANCOS.AllowDBNull = false
            Me.columnNUMERO_CUENTA_BANCOS.MaxLength = 50
            Me.columnMONTO_CUENTA_BANCOS.AllowDBNull = false
            Me.columnTIPO_CUENTA_BANCOS.AllowDBNull = false
            Me.columnTIPO_CUENTA_BANCOS.MaxLength = 50
            Me.columnESTADO_CUENTA_BANCOS.AllowDBNull = false
            Me.columnID_BANCO.AllowDBNull = false
            Me.columnCODIGO_PLAN_CUENTAS.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCUENTAS_BANCOSRow() As CUENTAS_BANCOSRow
            Return CType(Me.NewRow,CUENTAS_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CUENTAS_BANCOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CUENTAS_BANCOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CUENTAS_BANCOSRowChangedEvent) Is Nothing) Then
                RaiseEvent CUENTAS_BANCOSRowChanged(Me, New CUENTAS_BANCOSRowChangeEvent(CType(e.Row,CUENTAS_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CUENTAS_BANCOSRowChangingEvent) Is Nothing) Then
                RaiseEvent CUENTAS_BANCOSRowChanging(Me, New CUENTAS_BANCOSRowChangeEvent(CType(e.Row,CUENTAS_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CUENTAS_BANCOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CUENTAS_BANCOSRowDeleted(Me, New CUENTAS_BANCOSRowChangeEvent(CType(e.Row,CUENTAS_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CUENTAS_BANCOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CUENTAS_BANCOSRowDeleting(Me, New CUENTAS_BANCOSRowChangeEvent(CType(e.Row,CUENTAS_BANCOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCUENTAS_BANCOSRow(ByVal row As CUENTAS_BANCOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CUENTAS_BANCOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable
        Inherits Global.System.Data.TypedTableBase(Of NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
        
        Private columnID_COMPROBANTE_INGRESO_BANCOS As Global.System.Data.DataColumn
        
        Private columnID_LIBRO_DIARIO As Global.System.Data.DataColumn
        
        Private columnID_ASIENTO As Global.System.Data.DataColumn
        
        Private columnNUMERO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnTempID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_COMPROBANTE_INGRESO_BANCOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_COMPROBANTE_INGRESO_BANCOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LIBRO_DIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LIBRO_DIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ASIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ASIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TempIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Get
                Return CType(Me.Rows(index),NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChanging As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChanged As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeleting As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeleted As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow(ByVal row As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow(ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal ID_LIBRO_DIARIO As Long, ByVal ID_ASIENTO As Long, ByVal parentASIENTOS_LIBRO_DIARIORowByASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO As ASIENTOS_LIBRO_DIARIORow) As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Dim rowNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow = CType(Me.NewRow,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            Dim columnValuesArray() As Object = New Object() {ID_COMPROBANTE_INGRESO_BANCOS, ID_LIBRO_DIARIO, ID_ASIENTO, Nothing, Nothing}
            If (Not (parentASIENTOS_LIBRO_DIARIORowByASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO) Is Nothing) Then
                columnValuesArray(3) = parentASIENTOS_LIBRO_DIARIORowByASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO(12)
            End If
            rowNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            Return rowNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByTempID(ByVal TempID As Integer) As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Return CType(Me.Rows.Find(New Object() {TempID}),NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable = CType(MyBase.Clone,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_COMPROBANTE_INGRESO_BANCOS = MyBase.Columns("ID_COMPROBANTE_INGRESO_BANCOS")
            Me.columnID_LIBRO_DIARIO = MyBase.Columns("ID_LIBRO_DIARIO")
            Me.columnID_ASIENTO = MyBase.Columns("ID_ASIENTO")
            Me.columnNUMERO_REGISTRO = MyBase.Columns("NUMERO_REGISTRO")
            Me.columnTempID = MyBase.Columns("TempID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_COMPROBANTE_INGRESO_BANCOS = New Global.System.Data.DataColumn("ID_COMPROBANTE_INGRESO_BANCOS", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_COMPROBANTE_INGRESO_BANCOS)
            Me.columnID_LIBRO_DIARIO = New Global.System.Data.DataColumn("ID_LIBRO_DIARIO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LIBRO_DIARIO)
            Me.columnID_ASIENTO = New Global.System.Data.DataColumn("ID_ASIENTO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ASIENTO)
            Me.columnNUMERO_REGISTRO = New Global.System.Data.DataColumn("NUMERO_REGISTRO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_REGISTRO)
            Me.columnTempID = New Global.System.Data.DataColumn("TempID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTempID}, true))
            Me.columnID_COMPROBANTE_INGRESO_BANCOS.AllowDBNull = false
            Me.columnID_LIBRO_DIARIO.AllowDBNull = false
            Me.columnID_ASIENTO.AllowDBNull = false
            Me.columnNUMERO_REGISTRO.AllowDBNull = false
            Me.columnTempID.AutoIncrement = true
            Me.columnTempID.AutoIncrementSeed = -1
            Me.columnTempID.AutoIncrementStep = -1
            Me.columnTempID.AllowDBNull = false
            Me.columnTempID.ReadOnly = true
            Me.columnTempID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Return CType(Me.NewRow,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangedEvent) Is Nothing) Then
                RaiseEvent NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChanged(Me, New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent(CType(e.Row,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangingEvent) Is Nothing) Then
                RaiseEvent NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChanging(Me, New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent(CType(e.Row,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeletedEvent) Is Nothing) Then
                RaiseEvent NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeleted(Me, New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent(CType(e.Row,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeletingEvent) Is Nothing) Then
                RaiseEvent NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowDeleting(Me, New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent(CType(e.Row,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow(ByVal row As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetComprobanteIngresoBancos = New DataSetComprobanteIngresoBancos()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ASIENTOS_LIBRO_DIARIORow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_LIBRO_DIARIO As ASIENTOS_LIBRO_DIARIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_LIBRO_DIARIO = CType(Me.Table,ASIENTOS_LIBRO_DIARIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ASIENTO() As Long
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.ID_ASIENTOColumn),Long)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.ID_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_ASIENTO() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.FECHA_ASIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.FECHA_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_CUENTA_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.CODIGO_CUENTA_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.CODIGO_CUENTA_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_CUENTA_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.NOMBRE_CUENTA_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.NOMBRE_CUENTA_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONCEPTO_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.CONCEPTO_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.CONCEPTO_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DETALLE_TRANSACCION_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.DETALLE_TRANSACCION_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.DETALLE_TRANSACCION_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROVINCIA_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.PROVINCIA_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.PROVINCIA_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CIUDAD_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.CIUDAD_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.CIUDAD_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PARROQUIA_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.PARROQUIA_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.PARROQUIA_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CENTRO_COSTO_ASIENTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.CENTRO_COSTO_ASIENTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.CENTRO_COSTO_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_DEBE_ASIENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_DEBE_ASIENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALOR_DEBE_ASIENTO' de la tabla 'ASIENTOS_LIBRO_DIARIO' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_DEBE_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_HABER_ASIENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_HABER_ASIENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALOR_HABER_ASIENTO' de la tabla 'ASIENTOS_LIBRO_DIARIO' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_HABER_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_REGISTRO_ASIENTO() As Long
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.NUMERO_REGISTRO_ASIENTOColumn),Long)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.NUMERO_REGISTRO_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DEBE_HABER() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.DEBE_HABERColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.DEBE_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONCILIAR_ASIENTO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.CONCILIAR_ASIENTOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONCILIAR_ASIENTO' de la tabla 'ASIENTOS_LIBRO_DIARIO' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.CONCILIAR_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_ASIENTO() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_ASIENTOColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LIBRO_DIARIO() As Long
            Get
                Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.ID_LIBRO_DIARIOColumn),Long)
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.ID_LIBRO_DIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_MAYOR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_MAYORColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_MAYOR' de la tabla 'ASIENTOS_LIBRO_DIARIO' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_MAYORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVALOR_DEBE_ASIENTONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_DEBE_ASIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVALOR_DEBE_ASIENTONull()
            Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_DEBE_ASIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsVALOR_HABER_ASIENTONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_HABER_ASIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetVALOR_HABER_ASIENTONull()
            Me(Me.tableASIENTOS_LIBRO_DIARIO.VALOR_HABER_ASIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONCILIAR_ASIENTONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_LIBRO_DIARIO.CONCILIAR_ASIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONCILIAR_ASIENTONull()
            Me(Me.tableASIENTOS_LIBRO_DIARIO.CONCILIAR_ASIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsESTADO_MAYORNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_MAYORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetESTADO_MAYORNull()
            Me(Me.tableASIENTOS_LIBRO_DIARIO.ESTADO_MAYORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORows() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow()
            If (Me.Table.ChildRelations("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO") Is Nothing) Then
                Return New NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")),NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BANCOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableBANCOS As BANCOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBANCOS = CType(Me.Table,BANCOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_BANCO() As Integer
            Get
                Return CType(Me(Me.tableBANCOS.ID_BANCOColumn),Integer)
            End Get
            Set
                Me(Me.tableBANCOS.ID_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_BANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableBANCOS.CODIGO_BANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_BANCO' de la tabla 'BANCOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBANCOS.CODIGO_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.NOMBRE_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.NOMBRE_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.DIRECCION_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.DIRECCION_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OFICIAL_CREDITO_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.OFICIAL_CREDITO_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.OFICIAL_CREDITO_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.TELEFONO_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.TELEFONO_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FAX_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.FAX_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.FAX_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL_BANCO() As String
            Get
                Return CType(Me(Me.tableBANCOS.EMAIL_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableBANCOS.EMAIL_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_BANCO() As Integer
            Get
                Return CType(Me(Me.tableBANCOS.ESTADO_BANCOColumn),Integer)
            End Get
            Set
                Me(Me.tableBANCOS.ESTADO_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCODIGO_BANCONull() As Boolean
            Return Me.IsNull(Me.tableBANCOS.CODIGO_BANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCODIGO_BANCONull()
            Me(Me.tableBANCOS.CODIGO_BANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCOMPROBANTE_INGRESO_BANCOSRows() As COMPROBANTE_INGRESO_BANCOSRow()
            If (Me.Table.ChildRelations("BANCOS_COMPROBANTE_INGRESO_BANCOS") Is Nothing) Then
                Return New COMPROBANTE_INGRESO_BANCOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("BANCOS_COMPROBANTE_INGRESO_BANCOS")),COMPROBANTE_INGRESO_BANCOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENTE_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCLIENTE_GENERAL As CLIENTE_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENTE_GENERAL = CType(Me.Table,CLIENTE_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CLIENTE_GENERAL() As Long
            Get
                Return CType(Me(Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn),Long)
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_IDENTIFICACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_IDENTIFICACION_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RUC_CI_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CI_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL' de la tabla 'CL"& _ 
                            "IENTE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL' de la tabla 'CLIEN"& _ 
                            "TE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBLIG_LLEVAR_CONT_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBLIG_LLEVAR_CONT_CLIENTE_GENERAL' de la tabla 'CLIENTE_G"& _ 
                            "ENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_UBICACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_UBICACION_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_FACTURACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_FACTURACION_CLIENTE_GENERAL' de la tabla 'CLIEN"& _ 
                            "TE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSORCIO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONSORCIO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_CIUDAD' de la tabla 'CLIENTE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_1_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_1_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_2_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_2_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMAIL_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTACTO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_INGRESO_CLIENTE_GENERAL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_INGRESO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENER"& _ 
                            "AL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACIONES_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENER"& _ 
                            "AL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCODIGO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCODIGO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIPO_IDENTIFICACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIPO_IDENTIFICACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRUC_CI_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRUC_CI_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOMPRE_RAZON_SOCIAL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOMPRE_RAZON_SOCIAL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALNull()
            Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNRO_RES_CONT_ESPECIAL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNRO_RES_CONT_ESPECIAL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBLIG_LLEVAR_CONT_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBLIG_LLEVAR_CONT_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDIRECCION_UBICACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDIRECCION_UBICACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDIRECCION_FACTURACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDIRECCION_FACTURACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSORCIO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSORCIO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_CIUDADNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_CIUDADNull()
            Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_1_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_1_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_2_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_2_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMAIL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMAIL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_INGRESO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_INGRESO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIPO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIPO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBSERVACIONES_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBSERVACIONES_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsESTADO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetESTADO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCOMPROBANTE_INGRESO_BANCOSRows() As COMPROBANTE_INGRESO_BANCOSRow()
            If (Me.Table.ChildRelations("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS") Is Nothing) Then
                Return New COMPROBANTE_INGRESO_BANCOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS")),COMPROBANTE_INGRESO_BANCOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMPROBANTE_INGRESO_BANCOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOMPROBANTE_INGRESO_BANCOS As COMPROBANTE_INGRESO_BANCOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPROBANTE_INGRESO_BANCOS = CType(Me.Table,COMPROBANTE_INGRESO_BANCOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_COMPROBANTE_INGRESO_BANCOS() As Long
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_COMPROBANTE_INGRESO_BANCOSColumn),Long)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_COMPROBANTE_INGRESO_BANCOS() As Date
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.FECHA_COMPROBANTE_INGRESO_BANCOSColumn),Date)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.FECHA_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_FACTURA_VENTA() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_FACTURA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CLIENTE_GENERAL() As Long
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CLIENTE_GENERALColumn),Long)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ACTIVIDAD_COMPROBANTE_INGRESO_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ACTIVIDAD_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONCEPTO_COMPROBANTE_INGRESO_BANCOS() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.CONCEPTO_COMPROBANTE_INGRESO_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.CONCEPTO_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.FORMA_PAGO_COMPROBANTE_INGRESO_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.FORMA_PAGO_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.OBSERVACIONES_COMPROBANTE_INGRESO_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.OBSERVACIONES_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_COMPROBANTE_INGRESO_BANCOS() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.VALOR_COMPROBANTE_INGRESO_BANCOSColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.VALOR_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS' de la tabla '"& _ 
                            "COMPROBANTE_INGRESO_BANCOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_COMPROBANTE_INGRESO_BANCOS() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ESTADO_COMPROBANTE_INGRESO_BANCOSColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ESTADO_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIA() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_PROVINCIAColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CENTRO_COSTO() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CENTRO_COSTOColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_BANCO() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_BANCOColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CUENTA_BANCOS() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CUENTA_BANCOSColumn),Integer)
            End Get
            Set
                Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.ID_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS")),NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CLIENTE_GENERALRow() As CLIENTE_GENERALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS")),CLIENTE_GENERALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CLIENTE_GENERAL_COMPROBANTE_INGRESO_BANCOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BANCOSRow() As BANCOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("BANCOS_COMPROBANTE_INGRESO_BANCOS")),BANCOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("BANCOS_COMPROBANTE_INGRESO_BANCOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CUENTAS_BANCOSRow() As CUENTAS_BANCOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS")),CUENTAS_BANCOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSNull()
            Me(Me.tableCOMPROBANTE_INGRESO_BANCOS.NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CUENTAS_BANCOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCUENTAS_BANCOS As CUENTAS_BANCOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCUENTAS_BANCOS = CType(Me.Table,CUENTAS_BANCOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CUENTA_BANCOS() As Integer
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.ID_CUENTA_BANCOSColumn),Integer)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.ID_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_CUENTA_BANCOS() As String
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.NUMERO_CUENTA_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.NUMERO_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MONTO_CUENTA_BANCOS() As Decimal
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.MONTO_CUENTA_BANCOSColumn),Decimal)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.MONTO_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_CUENTA_BANCOS() As String
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.TIPO_CUENTA_BANCOSColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.TIPO_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CUENTA_BANCOS() As Integer
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.ESTADO_CUENTA_BANCOSColumn),Integer)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.ESTADO_CUENTA_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_BANCO() As Integer
            Get
                Return CType(Me(Me.tableCUENTAS_BANCOS.ID_BANCOColumn),Integer)
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.ID_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_PLAN_CUENTAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCUENTAS_BANCOS.CODIGO_PLAN_CUENTASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_PLAN_CUENTAS' de la tabla 'CUENTAS_BANCOS' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCUENTAS_BANCOS.CODIGO_PLAN_CUENTASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCODIGO_PLAN_CUENTASNull() As Boolean
            Return Me.IsNull(Me.tableCUENTAS_BANCOS.CODIGO_PLAN_CUENTASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCODIGO_PLAN_CUENTASNull()
            Me(Me.tableCUENTAS_BANCOS.CODIGO_PLAN_CUENTASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCOMPROBANTE_INGRESO_BANCOSRows() As COMPROBANTE_INGRESO_BANCOSRow()
            If (Me.Table.ChildRelations("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS") Is Nothing) Then
                Return New COMPROBANTE_INGRESO_BANCOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CUENTAS_BANCOS_COMPROBANTE_INGRESO_BANCOS")),COMPROBANTE_INGRESO_BANCOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
        Inherits Global.System.Data.DataRow
        
        Private tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO = CType(Me.Table,NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_COMPROBANTE_INGRESO_BANCOS() As Long
            Get
                Return CType(Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_COMPROBANTE_INGRESO_BANCOSColumn),Long)
            End Get
            Set
                Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_COMPROBANTE_INGRESO_BANCOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LIBRO_DIARIO() As Long
            Get
                Return CType(Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_LIBRO_DIARIOColumn),Long)
            End Get
            Set
                Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_LIBRO_DIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ASIENTO() As Long
            Get
                Return CType(Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_ASIENTOColumn),Long)
            End Get
            Set
                Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.ID_ASIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_REGISTRO() As Long
            Get
                Return CType(Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.NUMERO_REGISTROColumn),Long)
            End Get
            Set
                Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.NUMERO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TempID() As Integer
            Get
                Return CType(Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.TempIDColumn),Integer)
            End Get
            Set
                Me(Me.tableNUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.TempIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ASIENTOS_LIBRO_DIARIORow() As ASIENTOS_LIBRO_DIARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")),ASIENTOS_LIBRO_DIARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ASIENTOS_LIBRO_DIARIO_NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCOMPROBANTE_INGRESO_BANCOSRows() As COMPROBANTE_INGRESO_BANCOSRow()
            If (Me.Table.ChildRelations("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS") Is Nothing) Then
                Return New COMPROBANTE_INGRESO_BANCOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO_COMPROBANTE_INGRESO_BANCOS")),COMPROBANTE_INGRESO_BANCOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ASIENTOS_LIBRO_DIARIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_LIBRO_DIARIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ASIENTOS_LIBRO_DIARIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ASIENTOS_LIBRO_DIARIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class BANCOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BANCOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As BANCOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As BANCOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CLIENTE_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CLIENTE_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CLIENTE_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CLIENTE_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class COMPROBANTE_INGRESO_BANCOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COMPROBANTE_INGRESO_BANCOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As COMPROBANTE_INGRESO_BANCOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As COMPROBANTE_INGRESO_BANCOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CUENTAS_BANCOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CUENTAS_BANCOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CUENTAS_BANCOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CUENTAS_BANCOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSetComprobanteIngresoBancosTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ASIENTOS_LIBRO_DIARIOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ASIENTOS_LIBRO_DIARIO"
            tableMapping.ColumnMappings.Add("ID_ASIENTO", "ID_ASIENTO")
            tableMapping.ColumnMappings.Add("FECHA_ASIENTO", "FECHA_ASIENTO")
            tableMapping.ColumnMappings.Add("CODIGO_CUENTA_ASIENTO", "CODIGO_CUENTA_ASIENTO")
            tableMapping.ColumnMappings.Add("NOMBRE_CUENTA_ASIENTO", "NOMBRE_CUENTA_ASIENTO")
            tableMapping.ColumnMappings.Add("CONCEPTO_ASIENTO", "CONCEPTO_ASIENTO")
            tableMapping.ColumnMappings.Add("DETALLE_TRANSACCION_ASIENTO", "DETALLE_TRANSACCION_ASIENTO")
            tableMapping.ColumnMappings.Add("PROVINCIA_ASIENTO", "PROVINCIA_ASIENTO")
            tableMapping.ColumnMappings.Add("CIUDAD_ASIENTO", "CIUDAD_ASIENTO")
            tableMapping.ColumnMappings.Add("PARROQUIA_ASIENTO", "PARROQUIA_ASIENTO")
            tableMapping.ColumnMappings.Add("CENTRO_COSTO_ASIENTO", "CENTRO_COSTO_ASIENTO")
            tableMapping.ColumnMappings.Add("VALOR_DEBE_ASIENTO", "VALOR_DEBE_ASIENTO")
            tableMapping.ColumnMappings.Add("VALOR_HABER_ASIENTO", "VALOR_HABER_ASIENTO")
            tableMapping.ColumnMappings.Add("NUMERO_REGISTRO_ASIENTO", "NUMERO_REGISTRO_ASIENTO")
            tableMapping.ColumnMappings.Add("DEBE_HABER", "DEBE_HABER")
            tableMapping.ColumnMappings.Add("CONCILIAR_ASIENTO", "CONCILIAR_ASIENTO")
            tableMapping.ColumnMappings.Add("ESTADO_ASIENTO", "ESTADO_ASIENTO")
            tableMapping.ColumnMappings.Add("ID_LIBRO_DIARIO", "ID_LIBRO_DIARIO")
            tableMapping.ColumnMappings.Add("ESTADO_MAYOR", "ESTADO_MAYOR")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ASIENTOS_LIBRO_DIARIO] WHERE (([ID_ASIENTO] = @Original_ID_ASI"& _ 
                "ENTO) AND ([FECHA_ASIENTO] = @Original_FECHA_ASIENTO) AND ((@IsNull_VALOR_DEBE_A"& _ 
                "SIENTO = 1 AND [VALOR_DEBE_ASIENTO] IS NULL) OR ([VALOR_DEBE_ASIENTO] = @Origina"& _ 
                "l_VALOR_DEBE_ASIENTO)) AND ((@IsNull_VALOR_HABER_ASIENTO = 1 AND [VALOR_HABER_AS"& _ 
                "IENTO] IS NULL) OR ([VALOR_HABER_ASIENTO] = @Original_VALOR_HABER_ASIENTO)) AND "& _ 
                "([NUMERO_REGISTRO_ASIENTO] = @Original_NUMERO_REGISTRO_ASIENTO) AND ([DEBE_HABER"& _ 
                "] = @Original_DEBE_HABER) AND ((@IsNull_CONCILIAR_ASIENTO = 1 AND [CONCILIAR_ASI"& _ 
                "ENTO] IS NULL) OR ([CONCILIAR_ASIENTO] = @Original_CONCILIAR_ASIENTO)) AND ([EST"& _ 
                "ADO_ASIENTO] = @Original_ESTADO_ASIENTO) AND ([ID_LIBRO_DIARIO] = @Original_ID_L"& _ 
                "IBRO_DIARIO) AND ((@IsNull_ESTADO_MAYOR = 1 AND [ESTADO_MAYOR] IS NULL) OR ([EST"& _ 
                "ADO_MAYOR] = @Original_ESTADO_MAYOR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ASIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_REGISTRO_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEBE_HABER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEBE_HABER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ASIENTOS_LIBRO_DIARIO] ([ID_ASIENTO], [FECHA_ASIENTO], [CODIGO"& _ 
                "_CUENTA_ASIENTO], [NOMBRE_CUENTA_ASIENTO], [CONCEPTO_ASIENTO], [DETALLE_TRANSACC"& _ 
                "ION_ASIENTO], [PROVINCIA_ASIENTO], [CIUDAD_ASIENTO], [PARROQUIA_ASIENTO], [CENTR"& _ 
                "O_COSTO_ASIENTO], [VALOR_DEBE_ASIENTO], [VALOR_HABER_ASIENTO], [NUMERO_REGISTRO_"& _ 
                "ASIENTO], [DEBE_HABER], [CONCILIAR_ASIENTO], [ESTADO_ASIENTO], [ID_LIBRO_DIARIO]"& _ 
                ", [ESTADO_MAYOR]) VALUES (@ID_ASIENTO, @FECHA_ASIENTO, @CODIGO_CUENTA_ASIENTO, @"& _ 
                "NOMBRE_CUENTA_ASIENTO, @CONCEPTO_ASIENTO, @DETALLE_TRANSACCION_ASIENTO, @PROVINC"& _ 
                "IA_ASIENTO, @CIUDAD_ASIENTO, @PARROQUIA_ASIENTO, @CENTRO_COSTO_ASIENTO, @VALOR_D"& _ 
                "EBE_ASIENTO, @VALOR_HABER_ASIENTO, @NUMERO_REGISTRO_ASIENTO, @DEBE_HABER, @CONCI"& _ 
                "LIAR_ASIENTO, @ESTADO_ASIENTO, @ID_LIBRO_DIARIO, @ESTADO_MAYOR);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_ASIE"& _ 
                "NTO, FECHA_ASIENTO, CODIGO_CUENTA_ASIENTO, NOMBRE_CUENTA_ASIENTO, CONCEPTO_ASIEN"& _ 
                "TO, DETALLE_TRANSACCION_ASIENTO, PROVINCIA_ASIENTO, CIUDAD_ASIENTO, PARROQUIA_AS"& _ 
                "IENTO, CENTRO_COSTO_ASIENTO, VALOR_DEBE_ASIENTO, VALOR_HABER_ASIENTO, NUMERO_REG"& _ 
                "ISTRO_ASIENTO, DEBE_HABER, CONCILIAR_ASIENTO, ESTADO_ASIENTO, ID_LIBRO_DIARIO, E"& _ 
                "STADO_MAYOR FROM ASIENTOS_LIBRO_DIARIO WHERE (ID_ASIENTO = @ID_ASIENTO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ASIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CUENTA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CUENTA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CUENTA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CUENTA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_TRANSACCION_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_TRANSACCION_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CENTRO_COSTO_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CENTRO_COSTO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_REGISTRO_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEBE_HABER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEBE_HABER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ASIENTOS_LIBRO_DIARIO] SET [ID_ASIENTO] = @ID_ASIENTO, [FECHA_ASIEN"& _ 
                "TO] = @FECHA_ASIENTO, [CODIGO_CUENTA_ASIENTO] = @CODIGO_CUENTA_ASIENTO, [NOMBRE_"& _ 
                "CUENTA_ASIENTO] = @NOMBRE_CUENTA_ASIENTO, [CONCEPTO_ASIENTO] = @CONCEPTO_ASIENTO"& _ 
                ", [DETALLE_TRANSACCION_ASIENTO] = @DETALLE_TRANSACCION_ASIENTO, [PROVINCIA_ASIEN"& _ 
                "TO] = @PROVINCIA_ASIENTO, [CIUDAD_ASIENTO] = @CIUDAD_ASIENTO, [PARROQUIA_ASIENTO"& _ 
                "] = @PARROQUIA_ASIENTO, [CENTRO_COSTO_ASIENTO] = @CENTRO_COSTO_ASIENTO, [VALOR_D"& _ 
                "EBE_ASIENTO] = @VALOR_DEBE_ASIENTO, [VALOR_HABER_ASIENTO] = @VALOR_HABER_ASIENTO"& _ 
                ", [NUMERO_REGISTRO_ASIENTO] = @NUMERO_REGISTRO_ASIENTO, [DEBE_HABER] = @DEBE_HAB"& _ 
                "ER, [CONCILIAR_ASIENTO] = @CONCILIAR_ASIENTO, [ESTADO_ASIENTO] = @ESTADO_ASIENTO"& _ 
                ", [ID_LIBRO_DIARIO] = @ID_LIBRO_DIARIO, [ESTADO_MAYOR] = @ESTADO_MAYOR WHERE ((["& _ 
                "ID_ASIENTO] = @Original_ID_ASIENTO) AND ([FECHA_ASIENTO] = @Original_FECHA_ASIEN"& _ 
                "TO) AND ((@IsNull_VALOR_DEBE_ASIENTO = 1 AND [VALOR_DEBE_ASIENTO] IS NULL) OR (["& _ 
                "VALOR_DEBE_ASIENTO] = @Original_VALOR_DEBE_ASIENTO)) AND ((@IsNull_VALOR_HABER_A"& _ 
                "SIENTO = 1 AND [VALOR_HABER_ASIENTO] IS NULL) OR ([VALOR_HABER_ASIENTO] = @Origi"& _ 
                "nal_VALOR_HABER_ASIENTO)) AND ([NUMERO_REGISTRO_ASIENTO] = @Original_NUMERO_REGI"& _ 
                "STRO_ASIENTO) AND ([DEBE_HABER] = @Original_DEBE_HABER) AND ((@IsNull_CONCILIAR_"& _ 
                "ASIENTO = 1 AND [CONCILIAR_ASIENTO] IS NULL) OR ([CONCILIAR_ASIENTO] = @Original"& _ 
                "_CONCILIAR_ASIENTO)) AND ([ESTADO_ASIENTO] = @Original_ESTADO_ASIENTO) AND ([ID_"& _ 
                "LIBRO_DIARIO] = @Original_ID_LIBRO_DIARIO) AND ((@IsNull_ESTADO_MAYOR = 1 AND [E"& _ 
                "STADO_MAYOR] IS NULL) OR ([ESTADO_MAYOR] = @Original_ESTADO_MAYOR)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID"& _ 
                "_ASIENTO, FECHA_ASIENTO, CODIGO_CUENTA_ASIENTO, NOMBRE_CUENTA_ASIENTO, CONCEPTO_"& _ 
                "ASIENTO, DETALLE_TRANSACCION_ASIENTO, PROVINCIA_ASIENTO, CIUDAD_ASIENTO, PARROQU"& _ 
                "IA_ASIENTO, CENTRO_COSTO_ASIENTO, VALOR_DEBE_ASIENTO, VALOR_HABER_ASIENTO, NUMER"& _ 
                "O_REGISTRO_ASIENTO, DEBE_HABER, CONCILIAR_ASIENTO, ESTADO_ASIENTO, ID_LIBRO_DIAR"& _ 
                "IO, ESTADO_MAYOR FROM ASIENTOS_LIBRO_DIARIO WHERE (ID_ASIENTO = @ID_ASIENTO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ASIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CUENTA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CUENTA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CUENTA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CUENTA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_TRANSACCION_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_TRANSACCION_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CENTRO_COSTO_ASIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CENTRO_COSTO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_REGISTRO_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEBE_HABER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEBE_HABER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ASIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_DEBE_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_DEBE_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_HABER_ASIENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_HABER_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_REGISTRO_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEBE_HABER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEBE_HABER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCILIAR_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCILIAR_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_ASIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_MAYOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_MAYOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_ASIENTO, FECHA_ASIENTO, CODIGO_CUENTA_ASIENTO, NOMBRE_CUENTA_ASIENTO, C"& _ 
                "ONCEPTO_ASIENTO, DETALLE_TRANSACCION_ASIENTO, PROVINCIA_ASIENTO, CIUDAD_ASIENTO,"& _ 
                " PARROQUIA_ASIENTO, CENTRO_COSTO_ASIENTO, VALOR_DEBE_ASIENTO, VALOR_HABER_ASIENT"& _ 
                "O, NUMERO_REGISTRO_ASIENTO, DEBE_HABER, CONCILIAR_ASIENTO, ESTADO_ASIENTO, ID_LI"& _ 
                "BRO_DIARIO, ESTADO_MAYOR FROM dbo.ASIENTOS_LIBRO_DIARIO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.ASIENTOS_LIBRO_DIARIODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.ASIENTOS_LIBRO_DIARIODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.ASIENTOS_LIBRO_DIARIODataTable = New DataSetComprobanteIngresoBancos.ASIENTOS_LIBRO_DIARIODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.ASIENTOS_LIBRO_DIARIODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "ASIENTOS_LIBRO_DIARIO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_ASIENTO As Long, ByVal Original_FECHA_ASIENTO As Date, ByVal Original_VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal), ByVal Original_VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal), ByVal Original_NUMERO_REGISTRO_ASIENTO As Long, ByVal Original_DEBE_HABER As Integer, ByVal Original_CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer), ByVal Original_ESTADO_ASIENTO As Integer, ByVal Original_ID_LIBRO_DIARIO As Long, ByVal Original_ESTADO_MAYOR As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_ASIENTO,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_ASIENTO,Date)
            If (Original_VALOR_DEBE_ASIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_VALOR_DEBE_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_VALOR_HABER_ASIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_VALOR_HABER_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NUMERO_REGISTRO_ASIENTO,Long)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_DEBE_HABER,Integer)
            If (Original_CONCILIAR_ASIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CONCILIAR_ASIENTO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ESTADO_ASIENTO,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ID_LIBRO_DIARIO,Long)
            If (Original_ESTADO_MAYOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ESTADO_MAYOR.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_ASIENTO As Long,  _
                    ByVal FECHA_ASIENTO As Date,  _
                    ByVal CODIGO_CUENTA_ASIENTO As String,  _
                    ByVal NOMBRE_CUENTA_ASIENTO As String,  _
                    ByVal CONCEPTO_ASIENTO As String,  _
                    ByVal DETALLE_TRANSACCION_ASIENTO As String,  _
                    ByVal PROVINCIA_ASIENTO As String,  _
                    ByVal CIUDAD_ASIENTO As String,  _
                    ByVal PARROQUIA_ASIENTO As String,  _
                    ByVal CENTRO_COSTO_ASIENTO As String,  _
                    ByVal VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal DEBE_HABER As Integer,  _
                    ByVal CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer),  _
                    ByVal ESTADO_ASIENTO As Integer,  _
                    ByVal ID_LIBRO_DIARIO As Long,  _
                    ByVal ESTADO_MAYOR As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_ASIENTO,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_ASIENTO,Date)
            If (CODIGO_CUENTA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_CUENTA_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_CUENTA_ASIENTO,String)
            End If
            If (NOMBRE_CUENTA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CUENTA_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NOMBRE_CUENTA_ASIENTO,String)
            End If
            If (CONCEPTO_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONCEPTO_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CONCEPTO_ASIENTO,String)
            End If
            If (DETALLE_TRANSACCION_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_TRANSACCION_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DETALLE_TRANSACCION_ASIENTO,String)
            End If
            If (PROVINCIA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PROVINCIA_ASIENTO,String)
            End If
            If (CIUDAD_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CIUDAD_ASIENTO,String)
            End If
            If (PARROQUIA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PARROQUIA_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PARROQUIA_ASIENTO,String)
            End If
            If (CENTRO_COSTO_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CENTRO_COSTO_ASIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CENTRO_COSTO_ASIENTO,String)
            End If
            If (VALOR_DEBE_ASIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(VALOR_DEBE_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VALOR_HABER_ASIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VALOR_HABER_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(NUMERO_REGISTRO_ASIENTO,Long)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(DEBE_HABER,Integer)
            If (CONCILIAR_ASIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CONCILIAR_ASIENTO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ESTADO_ASIENTO,Integer)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(ID_LIBRO_DIARIO,Long)
            If (ESTADO_MAYOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ESTADO_MAYOR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_ASIENTO As Long,  _
                    ByVal FECHA_ASIENTO As Date,  _
                    ByVal CODIGO_CUENTA_ASIENTO As String,  _
                    ByVal NOMBRE_CUENTA_ASIENTO As String,  _
                    ByVal CONCEPTO_ASIENTO As String,  _
                    ByVal DETALLE_TRANSACCION_ASIENTO As String,  _
                    ByVal PROVINCIA_ASIENTO As String,  _
                    ByVal CIUDAD_ASIENTO As String,  _
                    ByVal PARROQUIA_ASIENTO As String,  _
                    ByVal CENTRO_COSTO_ASIENTO As String,  _
                    ByVal VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal DEBE_HABER As Integer,  _
                    ByVal CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer),  _
                    ByVal ESTADO_ASIENTO As Integer,  _
                    ByVal ID_LIBRO_DIARIO As Long,  _
                    ByVal ESTADO_MAYOR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_ASIENTO As Long,  _
                    ByVal Original_FECHA_ASIENTO As Date,  _
                    ByVal Original_VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal Original_DEBE_HABER As Integer,  _
                    ByVal Original_CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTADO_ASIENTO As Integer,  _
                    ByVal Original_ID_LIBRO_DIARIO As Long,  _
                    ByVal Original_ESTADO_MAYOR As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_ASIENTO,Date)
            If (CODIGO_CUENTA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_CUENTA_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_CUENTA_ASIENTO,String)
            End If
            If (NOMBRE_CUENTA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CUENTA_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NOMBRE_CUENTA_ASIENTO,String)
            End If
            If (CONCEPTO_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONCEPTO_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CONCEPTO_ASIENTO,String)
            End If
            If (DETALLE_TRANSACCION_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_TRANSACCION_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DETALLE_TRANSACCION_ASIENTO,String)
            End If
            If (PROVINCIA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PROVINCIA_ASIENTO,String)
            End If
            If (CIUDAD_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CIUDAD_ASIENTO,String)
            End If
            If (PARROQUIA_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PARROQUIA_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PARROQUIA_ASIENTO,String)
            End If
            If (CENTRO_COSTO_ASIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CENTRO_COSTO_ASIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CENTRO_COSTO_ASIENTO,String)
            End If
            If (VALOR_DEBE_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(VALOR_DEBE_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VALOR_HABER_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VALOR_HABER_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NUMERO_REGISTRO_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DEBE_HABER,Integer)
            If (CONCILIAR_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CONCILIAR_ASIENTO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ESTADO_ASIENTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ID_LIBRO_DIARIO,Long)
            If (ESTADO_MAYOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ESTADO_MAYOR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FECHA_ASIENTO,Date)
            If (Original_VALOR_DEBE_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_VALOR_DEBE_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_VALOR_HABER_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_VALOR_HABER_ASIENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_NUMERO_REGISTRO_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_DEBE_HABER,Integer)
            If (Original_CONCILIAR_ASIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CONCILIAR_ASIENTO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ESTADO_ASIENTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ID_LIBRO_DIARIO,Long)
            If (Original_ESTADO_MAYOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ESTADO_MAYOR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FECHA_ASIENTO As Date,  _
                    ByVal CODIGO_CUENTA_ASIENTO As String,  _
                    ByVal NOMBRE_CUENTA_ASIENTO As String,  _
                    ByVal CONCEPTO_ASIENTO As String,  _
                    ByVal DETALLE_TRANSACCION_ASIENTO As String,  _
                    ByVal PROVINCIA_ASIENTO As String,  _
                    ByVal CIUDAD_ASIENTO As String,  _
                    ByVal PARROQUIA_ASIENTO As String,  _
                    ByVal CENTRO_COSTO_ASIENTO As String,  _
                    ByVal VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal DEBE_HABER As Integer,  _
                    ByVal CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer),  _
                    ByVal ESTADO_ASIENTO As Integer,  _
                    ByVal ID_LIBRO_DIARIO As Long,  _
                    ByVal ESTADO_MAYOR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_ASIENTO As Long,  _
                    ByVal Original_FECHA_ASIENTO As Date,  _
                    ByVal Original_VALOR_DEBE_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VALOR_HABER_ASIENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMERO_REGISTRO_ASIENTO As Long,  _
                    ByVal Original_DEBE_HABER As Integer,  _
                    ByVal Original_CONCILIAR_ASIENTO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTADO_ASIENTO As Integer,  _
                    ByVal Original_ID_LIBRO_DIARIO As Long,  _
                    ByVal Original_ESTADO_MAYOR As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_ID_ASIENTO, FECHA_ASIENTO, CODIGO_CUENTA_ASIENTO, NOMBRE_CUENTA_ASIENTO, CONCEPTO_ASIENTO, DETALLE_TRANSACCION_ASIENTO, PROVINCIA_ASIENTO, CIUDAD_ASIENTO, PARROQUIA_ASIENTO, CENTRO_COSTO_ASIENTO, VALOR_DEBE_ASIENTO, VALOR_HABER_ASIENTO, NUMERO_REGISTRO_ASIENTO, DEBE_HABER, CONCILIAR_ASIENTO, ESTADO_ASIENTO, ID_LIBRO_DIARIO, ESTADO_MAYOR, Original_ID_ASIENTO, Original_FECHA_ASIENTO, Original_VALOR_DEBE_ASIENTO, Original_VALOR_HABER_ASIENTO, Original_NUMERO_REGISTRO_ASIENTO, Original_DEBE_HABER, Original_CONCILIAR_ASIENTO, Original_ESTADO_ASIENTO, Original_ID_LIBRO_DIARIO, Original_ESTADO_MAYOR)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BANCOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BANCOS"
            tableMapping.ColumnMappings.Add("ID_BANCO", "ID_BANCO")
            tableMapping.ColumnMappings.Add("CODIGO_BANCO", "CODIGO_BANCO")
            tableMapping.ColumnMappings.Add("NOMBRE_BANCO", "NOMBRE_BANCO")
            tableMapping.ColumnMappings.Add("DIRECCION_BANCO", "DIRECCION_BANCO")
            tableMapping.ColumnMappings.Add("OFICIAL_CREDITO_BANCO", "OFICIAL_CREDITO_BANCO")
            tableMapping.ColumnMappings.Add("TELEFONO_BANCO", "TELEFONO_BANCO")
            tableMapping.ColumnMappings.Add("FAX_BANCO", "FAX_BANCO")
            tableMapping.ColumnMappings.Add("EMAIL_BANCO", "EMAIL_BANCO")
            tableMapping.ColumnMappings.Add("ESTADO_BANCO", "ESTADO_BANCO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BANCOS] WHERE (([ID_BANCO] = @Original_ID_BANCO) AND ([ESTADO_"& _ 
                "BANCO] = @Original_ESTADO_BANCO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BANCOS] ([ID_BANCO], [CODIGO_BANCO], [NOMBRE_BANCO], [DIRECCIO"& _ 
                "N_BANCO], [OFICIAL_CREDITO_BANCO], [TELEFONO_BANCO], [FAX_BANCO], [EMAIL_BANCO],"& _ 
                " [ESTADO_BANCO]) VALUES (@ID_BANCO, @CODIGO_BANCO, @NOMBRE_BANCO, @DIRECCION_BAN"& _ 
                "CO, @OFICIAL_CREDITO_BANCO, @TELEFONO_BANCO, @FAX_BANCO, @EMAIL_BANCO, @ESTADO_B"& _ 
                "ANCO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_BANCO, CODIGO_BANCO, NOMBRE_BANCO, DIRECCION_BANCO, OFICIAL_CR"& _ 
                "EDITO_BANCO, TELEFONO_BANCO, FAX_BANCO, EMAIL_BANCO, ESTADO_BANCO FROM BANCOS WH"& _ 
                "ERE (ID_BANCO = @ID_BANCO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OFICIAL_CREDITO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OFICIAL_CREDITO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FAX_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FAX_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BANCOS] SET [ID_BANCO] = @ID_BANCO, [CODIGO_BANCO] = @CODIGO_BANCO,"& _ 
                " [NOMBRE_BANCO] = @NOMBRE_BANCO, [DIRECCION_BANCO] = @DIRECCION_BANCO, [OFICIAL_"& _ 
                "CREDITO_BANCO] = @OFICIAL_CREDITO_BANCO, [TELEFONO_BANCO] = @TELEFONO_BANCO, [FA"& _ 
                "X_BANCO] = @FAX_BANCO, [EMAIL_BANCO] = @EMAIL_BANCO, [ESTADO_BANCO] = @ESTADO_BA"& _ 
                "NCO WHERE (([ID_BANCO] = @Original_ID_BANCO) AND ([ESTADO_BANCO] = @Original_EST"& _ 
                "ADO_BANCO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_BANCO, CODIGO_BANCO, NOMBRE_BANCO, DIRECCION_BANCO, OFIC"& _ 
                "IAL_CREDITO_BANCO, TELEFONO_BANCO, FAX_BANCO, EMAIL_BANCO, ESTADO_BANCO FROM BAN"& _ 
                "COS WHERE (ID_BANCO = @ID_BANCO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OFICIAL_CREDITO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OFICIAL_CREDITO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FAX_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FAX_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_BANCO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_BANCO, CODIGO_BANCO, NOMBRE_BANCO, DIRECCION_BANCO, OFICIAL_CREDITO_BAN"& _ 
                "CO, TELEFONO_BANCO, FAX_BANCO, EMAIL_BANCO, ESTADO_BANCO FROM dbo.BANCOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.BANCOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.BANCOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.BANCOSDataTable = New DataSetComprobanteIngresoBancos.BANCOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.BANCOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "BANCOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_BANCO As Integer, ByVal Original_ESTADO_BANCO As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_BANCO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_BANCO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_BANCO As Integer, ByVal CODIGO_BANCO As String, ByVal NOMBRE_BANCO As String, ByVal DIRECCION_BANCO As String, ByVal OFICIAL_CREDITO_BANCO As String, ByVal TELEFONO_BANCO As String, ByVal FAX_BANCO As String, ByVal EMAIL_BANCO As String, ByVal ESTADO_BANCO As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_BANCO,Integer)
            If (CODIGO_BANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_BANCO,String)
            End If
            If (NOMBRE_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRE_BANCO,String)
            End If
            If (DIRECCION_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DIRECCION_BANCO,String)
            End If
            If (OFICIAL_CREDITO_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OFICIAL_CREDITO_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OFICIAL_CREDITO_BANCO,String)
            End If
            If (TELEFONO_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TELEFONO_BANCO,String)
            End If
            If (FAX_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FAX_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FAX_BANCO,String)
            End If
            If (EMAIL_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL_BANCO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(EMAIL_BANCO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ESTADO_BANCO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_BANCO As Integer, ByVal CODIGO_BANCO As String, ByVal NOMBRE_BANCO As String, ByVal DIRECCION_BANCO As String, ByVal OFICIAL_CREDITO_BANCO As String, ByVal TELEFONO_BANCO As String, ByVal FAX_BANCO As String, ByVal EMAIL_BANCO As String, ByVal ESTADO_BANCO As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_ESTADO_BANCO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_BANCO,Integer)
            If (CODIGO_BANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_BANCO,String)
            End If
            If (NOMBRE_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRE_BANCO,String)
            End If
            If (DIRECCION_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DIRECCION_BANCO,String)
            End If
            If (OFICIAL_CREDITO_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OFICIAL_CREDITO_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OFICIAL_CREDITO_BANCO,String)
            End If
            If (TELEFONO_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEFONO_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TELEFONO_BANCO,String)
            End If
            If (FAX_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FAX_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FAX_BANCO,String)
            End If
            If (EMAIL_BANCO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL_BANCO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(EMAIL_BANCO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ESTADO_BANCO,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ID_BANCO,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ESTADO_BANCO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO_BANCO As String, ByVal NOMBRE_BANCO As String, ByVal DIRECCION_BANCO As String, ByVal OFICIAL_CREDITO_BANCO As String, ByVal TELEFONO_BANCO As String, ByVal FAX_BANCO As String, ByVal EMAIL_BANCO As String, ByVal ESTADO_BANCO As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_ESTADO_BANCO As Integer) As Integer
            Return Me.Update(Original_ID_BANCO, CODIGO_BANCO, NOMBRE_BANCO, DIRECCION_BANCO, OFICIAL_CREDITO_BANCO, TELEFONO_BANCO, FAX_BANCO, EMAIL_BANCO, ESTADO_BANCO, Original_ID_BANCO, Original_ESTADO_BANCO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CLIENTE_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CLIENTE_GENERAL"
            tableMapping.ColumnMappings.Add("ID_CLIENTE_GENERAL", "ID_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CODIGO_CLIENTE_GENERAL", "CODIGO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_IDENTIFICACION_CLIENTE_GENERAL", "TIPO_IDENTIFICACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("RUC_CI_CLIENTE_GENERAL", "RUC_CI_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL")
            tableMapping.ColumnMappings.Add("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("DIRECCION_UBICACION_CLIENTE_GENERAL", "DIRECCION_UBICACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("DIRECCION_FACTURACION_CLIENTE_GENERAL", "DIRECCION_FACTURACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CONSORCIO_CLIENTE_GENERAL", "CONSORCIO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO_1_CLIENTE_GENERAL", "TELEFONO_1_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TELEFONO_2_CLIENTE_GENERAL", "TELEFONO_2_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("EMAIL_CLIENTE_GENERAL", "EMAIL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CONTACTO_CLIENTE_GENERAL", "CONTACTO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("FECHA_INGRESO_CLIENTE_GENERAL", "FECHA_INGRESO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_CLIENTE_GENERAL", "TIPO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("OBSERVACIONES_CLIENTE_GENERAL", "OBSERVACIONES_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("ESTADO_CLIENTE_GENERAL", "ESTADO_CLIENTE_GENERAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CLIENTE_GENERAL] WHERE (([ID_CLIENTE_GENERAL] = @Original_ID_C"& _ 
                "LIENTE_GENERAL) AND ((@IsNull_CODIGO_CLIENTE_GENERAL = 1 AND [CODIGO_CLIENTE_GEN"& _ 
                "ERAL] IS NULL) OR ([CODIGO_CLIENTE_GENERAL] = @Original_CODIGO_CLIENTE_GENERAL))"& _ 
                " AND ((@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL = 1 AND [TIPO_IDENTIFICACION_"& _ 
                "CLIENTE_GENERAL] IS NULL) OR ([TIPO_IDENTIFICACION_CLIENTE_GENERAL] = @Original_"& _ 
                "TIPO_IDENTIFICACION_CLIENTE_GENERAL)) AND ((@IsNull_RUC_CI_CLIENTE_GENERAL = 1 A"& _ 
                "ND [RUC_CI_CLIENTE_GENERAL] IS NULL) OR ([RUC_CI_CLIENTE_GENERAL] = @Original_RU"& _ 
                "C_CI_CLIENTE_GENERAL)) AND ((@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = 1 A"& _ 
                "ND [NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] IS NULL) OR ([NRO_RES_CONT_ESPECIAL_C"& _ 
                "LIENTE_GENERAL] = @Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL)) AND ((@IsNul"& _ 
                "l_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL = 1 AND [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] "& _ 
                "IS NULL) OR ([OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] = @Original_OBLIG_LLEVAR_CONT_C"& _ 
                "LIENTE_GENERAL)) AND ((@IsNull_ID_CIUDAD = 1 AND [ID_CIUDAD] IS NULL) OR ([ID_CI"& _ 
                "UDAD] = @Original_ID_CIUDAD)) AND ((@IsNull_TELEFONO_1_CLIENTE_GENERAL = 1 AND ["& _ 
                "TELEFONO_1_CLIENTE_GENERAL] IS NULL) OR ([TELEFONO_1_CLIENTE_GENERAL] = @Origina"& _ 
                "l_TELEFONO_1_CLIENTE_GENERAL)) AND ((@IsNull_TELEFONO_2_CLIENTE_GENERAL = 1 AND "& _ 
                "[TELEFONO_2_CLIENTE_GENERAL] IS NULL) OR ([TELEFONO_2_CLIENTE_GENERAL] = @Origin"& _ 
                "al_TELEFONO_2_CLIENTE_GENERAL)) AND ((@IsNull_FECHA_INGRESO_CLIENTE_GENERAL = 1 "& _ 
                "AND [FECHA_INGRESO_CLIENTE_GENERAL] IS NULL) OR ([FECHA_INGRESO_CLIENTE_GENERAL]"& _ 
                " = @Original_FECHA_INGRESO_CLIENTE_GENERAL)) AND ((@IsNull_TIPO_CLIENTE_GENERAL "& _ 
                "= 1 AND [TIPO_CLIENTE_GENERAL] IS NULL) OR ([TIPO_CLIENTE_GENERAL] = @Original_T"& _ 
                "IPO_CLIENTE_GENERAL)) AND ((@IsNull_ESTADO_CLIENTE_GENERAL = 1 AND [ESTADO_CLIEN"& _ 
                "TE_GENERAL] IS NULL) OR ([ESTADO_CLIENTE_GENERAL] = @Original_ESTADO_CLIENTE_GEN"& _ 
                "ERAL)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CLIENTE_GENERAL] ([ID_CLIENTE_GENERAL], [CODIGO_CLIENTE_GENERA"& _ 
                "L], [TIPO_IDENTIFICACION_CLIENTE_GENERAL], [RUC_CI_CLIENTE_GENERAL], [NOMPRE_RAZ"& _ 
                "ON_SOCIAL_CLIENTE_GENERAL], [APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL], [NRO_RES"& _ 
                "_CONT_ESPECIAL_CLIENTE_GENERAL], [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL], [DIRECCION"& _ 
                "_UBICACION_CLIENTE_GENERAL], [DIRECCION_FACTURACION_CLIENTE_GENERAL], [CONSORCIO"& _ 
                "_CLIENTE_GENERAL], [ID_CIUDAD], [TELEFONO_1_CLIENTE_GENERAL], [TELEFONO_2_CLIENT"& _ 
                "E_GENERAL], [EMAIL_CLIENTE_GENERAL], [CONTACTO_CLIENTE_GENERAL], [FECHA_INGRESO_"& _ 
                "CLIENTE_GENERAL], [TIPO_CLIENTE_GENERAL], [OBSERVACIONES_CLIENTE_GENERAL], [ESTA"& _ 
                "DO_CLIENTE_GENERAL]) VALUES (@ID_CLIENTE_GENERAL, @CODIGO_CLIENTE_GENERAL, @TIPO"& _ 
                "_IDENTIFICACION_CLIENTE_GENERAL, @RUC_CI_CLIENTE_GENERAL, @NOMPRE_RAZON_SOCIAL_C"& _ 
                "LIENTE_GENERAL, @APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, @NRO_RES_CONT_ESPECIA"& _ 
                "L_CLIENTE_GENERAL, @OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, @DIRECCION_UBICACION_CLIE"& _ 
                "NTE_GENERAL, @DIRECCION_FACTURACION_CLIENTE_GENERAL, @CONSORCIO_CLIENTE_GENERAL,"& _ 
                " @ID_CIUDAD, @TELEFONO_1_CLIENTE_GENERAL, @TELEFONO_2_CLIENTE_GENERAL, @EMAIL_CL"& _ 
                "IENTE_GENERAL, @CONTACTO_CLIENTE_GENERAL, @FECHA_INGRESO_CLIENTE_GENERAL, @TIPO_"& _ 
                "CLIENTE_GENERAL, @OBSERVACIONES_CLIENTE_GENERAL, @ESTADO_CLIENTE_GENERAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENER"& _ 
                "AL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE"& _ 
                "_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_C"& _ 
                "ONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_"& _ 
                "CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERA"& _ 
                "L, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, "& _ 
                "FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENER"& _ 
                "AL, ESTADO_CLIENTE_GENERAL FROM CLIENTE_GENERAL WHERE (ID_CLIENTE_GENERAL = @ID_"& _ 
                "CLIENTE_GENERAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONSORCIO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONSORCIO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CLIENTE_GENERAL] SET [ID_CLIENTE_GENERAL] = @ID_CLIENTE_GENERAL, [C"& _ 
                "ODIGO_CLIENTE_GENERAL] = @CODIGO_CLIENTE_GENERAL, [TIPO_IDENTIFICACION_CLIENTE_G"& _ 
                "ENERAL] = @TIPO_IDENTIFICACION_CLIENTE_GENERAL, [RUC_CI_CLIENTE_GENERAL] = @RUC_"& _ 
                "CI_CLIENTE_GENERAL, [NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL] = @NOMPRE_RAZON_SOCIAL"& _ 
                "_CLIENTE_GENERAL, [APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL] = @APELLIDO_NOMBRE_"& _ 
                "COMERCIAL_CLIENTE_GENRAL, [NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] = @NRO_RES_CON"& _ 
                "T_ESPECIAL_CLIENTE_GENERAL, [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] = @OBLIG_LLEVAR_"& _ 
                "CONT_CLIENTE_GENERAL, [DIRECCION_UBICACION_CLIENTE_GENERAL] = @DIRECCION_UBICACI"& _ 
                "ON_CLIENTE_GENERAL, [DIRECCION_FACTURACION_CLIENTE_GENERAL] = @DIRECCION_FACTURA"& _ 
                "CION_CLIENTE_GENERAL, [CONSORCIO_CLIENTE_GENERAL] = @CONSORCIO_CLIENTE_GENERAL, "& _ 
                "[ID_CIUDAD] = @ID_CIUDAD, [TELEFONO_1_CLIENTE_GENERAL] = @TELEFONO_1_CLIENTE_GEN"& _ 
                "ERAL, [TELEFONO_2_CLIENTE_GENERAL] = @TELEFONO_2_CLIENTE_GENERAL, [EMAIL_CLIENTE"& _ 
                "_GENERAL] = @EMAIL_CLIENTE_GENERAL, [CONTACTO_CLIENTE_GENERAL] = @CONTACTO_CLIEN"& _ 
                "TE_GENERAL, [FECHA_INGRESO_CLIENTE_GENERAL] = @FECHA_INGRESO_CLIENTE_GENERAL, [T"& _ 
                "IPO_CLIENTE_GENERAL] = @TIPO_CLIENTE_GENERAL, [OBSERVACIONES_CLIENTE_GENERAL] = "& _ 
                "@OBSERVACIONES_CLIENTE_GENERAL, [ESTADO_CLIENTE_GENERAL] = @ESTADO_CLIENTE_GENER"& _ 
                "AL WHERE (([ID_CLIENTE_GENERAL] = @Original_ID_CLIENTE_GENERAL) AND ((@IsNull_CO"& _ 
                "DIGO_CLIENTE_GENERAL = 1 AND [CODIGO_CLIENTE_GENERAL] IS NULL) OR ([CODIGO_CLIEN"& _ 
                "TE_GENERAL] = @Original_CODIGO_CLIENTE_GENERAL)) AND ((@IsNull_TIPO_IDENTIFICACI"& _ 
                "ON_CLIENTE_GENERAL = 1 AND [TIPO_IDENTIFICACION_CLIENTE_GENERAL] IS NULL) OR ([T"& _ 
                "IPO_IDENTIFICACION_CLIENTE_GENERAL] = @Original_TIPO_IDENTIFICACION_CLIENTE_GENE"& _ 
                "RAL)) AND ((@IsNull_RUC_CI_CLIENTE_GENERAL = 1 AND [RUC_CI_CLIENTE_GENERAL] IS N"& _ 
                "ULL) OR ([RUC_CI_CLIENTE_GENERAL] = @Original_RUC_CI_CLIENTE_GENERAL)) AND ((@Is"& _ 
                "Null_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = 1 AND [NRO_RES_CONT_ESPECIAL_CLIENT"& _ 
                "E_GENERAL] IS NULL) OR ([NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] = @Original_NRO_"& _ 
                "RES_CONT_ESPECIAL_CLIENTE_GENERAL)) AND ((@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENE"& _ 
                "RAL = 1 AND [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] IS NULL) OR ([OBLIG_LLEVAR_CONT_"& _ 
                "CLIENTE_GENERAL] = @Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL)) AND ((@IsNull_I"& _ 
                "D_CIUDAD = 1 AND [ID_CIUDAD] IS NULL) OR ([ID_CIUDAD] = @Original_ID_CIUDAD)) AN"& _ 
                "D ((@IsNull_TELEFONO_1_CLIENTE_GENERAL = 1 AND [TELEFONO_1_CLIENTE_GENERAL] IS N"& _ 
                "ULL) OR ([TELEFONO_1_CLIENTE_GENERAL] = @Original_TELEFONO_1_CLIENTE_GENERAL)) A"& _ 
                "ND ((@IsNull_TELEFONO_2_CLIENTE_GENERAL = 1 AND [TELEFONO_2_CLIENTE_GENERAL] IS "& _ 
                "NULL) OR ([TELEFONO_2_CLIENTE_GENERAL] = @Original_TELEFONO_2_CLIENTE_GENERAL)) "& _ 
                "AND ((@IsNull_FECHA_INGRESO_CLIENTE_GENERAL = 1 AND [FECHA_INGRESO_CLIENTE_GENER"& _ 
                "AL] IS NULL) OR ([FECHA_INGRESO_CLIENTE_GENERAL] = @Original_FECHA_INGRESO_CLIEN"& _ 
                "TE_GENERAL)) AND ((@IsNull_TIPO_CLIENTE_GENERAL = 1 AND [TIPO_CLIENTE_GENERAL] I"& _ 
                "S NULL) OR ([TIPO_CLIENTE_GENERAL] = @Original_TIPO_CLIENTE_GENERAL)) AND ((@IsN"& _ 
                "ull_ESTADO_CLIENTE_GENERAL = 1 AND [ESTADO_CLIENTE_GENERAL] IS NULL) OR ([ESTADO"& _ 
                "_CLIENTE_GENERAL] = @Original_ESTADO_CLIENTE_GENERAL)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CLIENTE_GENE"& _ 
                "RAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE"& _ 
                "_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE"& _ 
                "_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERA"& _ 
                "L, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, C"& _ 
                "ONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIE"& _ 
                "NTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIE"& _ 
                "NTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE"& _ 
                "_GENERAL FROM CLIENTE_GENERAL WHERE (ID_CLIENTE_GENERAL = @ID_CLIENTE_GENERAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONSORCIO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONSORCIO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GE"& _ 
                "NERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOM"& _ 
                "BRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVA"& _ 
                "R_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACI"& _ 
                "ON_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GEN"& _ 
                "ERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERA"& _ 
                "L, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GE"& _ 
                "NERAL, ESTADO_CLIENTE_GENERAL FROM dbo.CLIENTE_GENERAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.CLIENTE_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.CLIENTE_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.CLIENTE_GENERALDataTable = New DataSetComprobanteIngresoBancos.CLIENTE_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.CLIENTE_GENERALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "CLIENTE_GENERAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CLIENTE_GENERAL As Long, ByVal Original_CODIGO_CLIENTE_GENERAL As String, ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String, ByVal Original_RUC_CI_CLIENTE_GENERAL As String, ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String, ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String, ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer), ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String, ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String, ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date), ByVal Original_TIPO_CLIENTE_GENERAL As String, ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_CLIENTE_GENERAL,String)
            End If
            If (Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (Original_RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (Original_ID_CIUDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (Original_TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (Original_FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_TIPO_CLIENTE_GENERAL,String)
            End If
            If (Original_ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_CLIENTE_GENERAL,String)
            End If
            If (TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL,String)
            End If
            If (APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL,String)
            End If
            If (NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_UBICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DIRECCION_UBICACION_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_FACTURACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DIRECCION_FACTURACION_CLIENTE_GENERAL,String)
            End If
            If (CONSORCIO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CONSORCIO_CLIENTE_GENERAL,String)
            End If
            If (ID_CIUDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (EMAIL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(EMAIL_CLIENTE_GENERAL,String)
            End If
            If (CONTACTO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CONTACTO_CLIENTE_GENERAL,String)
            End If
            If (FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TIPO_CLIENTE_GENERAL,String)
            End If
            If (OBSERVACIONES_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(OBSERVACIONES_CLIENTE_GENERAL,String)
            End If
            If (ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal Original_RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIPO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_CLIENTE_GENERAL,String)
            End If
            If (TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL,String)
            End If
            If (APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL,String)
            End If
            If (NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_UBICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DIRECCION_UBICACION_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_FACTURACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DIRECCION_FACTURACION_CLIENTE_GENERAL,String)
            End If
            If (CONSORCIO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CONSORCIO_CLIENTE_GENERAL,String)
            End If
            If (ID_CIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (EMAIL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EMAIL_CLIENTE_GENERAL,String)
            End If
            If (CONTACTO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CONTACTO_CLIENTE_GENERAL,String)
            End If
            If (FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(TIPO_CLIENTE_GENERAL,String)
            End If
            If (OBSERVACIONES_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(OBSERVACIONES_CLIENTE_GENERAL,String)
            End If
            If (ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ESTADO_CLIENTE_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODIGO_CLIENTE_GENERAL,String)
            End If
            If (Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (Original_RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (Original_ID_CIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (Original_TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (Original_FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_TIPO_CLIENTE_GENERAL,String)
            End If
            If (Original_ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal Original_RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIPO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Return Me.Update(Original_ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE_GENERAL, Original_ID_CLIENTE_GENERAL, Original_CODIGO_CLIENTE_GENERAL, Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL, Original_RUC_CI_CLIENTE_GENERAL, Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, Original_ID_CIUDAD, Original_TELEFONO_1_CLIENTE_GENERAL, Original_TELEFONO_2_CLIENTE_GENERAL, Original_FECHA_INGRESO_CLIENTE_GENERAL, Original_TIPO_CLIENTE_GENERAL, Original_ESTADO_CLIENTE_GENERAL)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COMPROBANTE_INGRESO_BANCOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COMPROBANTE_INGRESO_BANCOS"
            tableMapping.ColumnMappings.Add("ID_COMPROBANTE_INGRESO_BANCOS", "ID_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("FECHA_COMPROBANTE_INGRESO_BANCOS", "FECHA_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("NUMERO_FACTURA_VENTA", "NUMERO_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("ID_CLIENTE_GENERAL", "ID_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", "ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("CONCEPTO_COMPROBANTE_INGRESO_BANCOS", "CONCEPTO_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", "OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("VALOR_COMPROBANTE_INGRESO_BANCOS", "VALOR_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("ESTADO_COMPROBANTE_INGRESO_BANCOS", "ESTADO_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("ID_PROVINCIA", "ID_PROVINCIA")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("ID_PARROQUIAS", "ID_PARROQUIAS")
            tableMapping.ColumnMappings.Add("ID_CENTRO_COSTO", "ID_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("ID_BANCO", "ID_BANCO")
            tableMapping.ColumnMappings.Add("ID_CUENTA_BANCOS", "ID_CUENTA_BANCOS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[COMPROBANTE_INGRESO_BANCOS] WHERE (([ID_COMPROBANTE_INGRESO_BA"& _ 
                "NCOS] = @Original_ID_COMPROBANTE_INGRESO_BANCOS) AND ([FECHA_COMPROBANTE_INGRESO"& _ 
                "_BANCOS] = @Original_FECHA_COMPROBANTE_INGRESO_BANCOS) AND ([ID_CLIENTE_GENERAL]"& _ 
                " = @Original_ID_CLIENTE_GENERAL) AND ([ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS] = @"& _ 
                "Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS) AND ([FORMA_PAGO_COMPROBANTE_INGR"& _ 
                "ESO_BANCOS] = @Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS) AND ([VALOR_COMPR"& _ 
                "OBANTE_INGRESO_BANCOS] = @Original_VALOR_COMPROBANTE_INGRESO_BANCOS) AND ((@IsNu"& _ 
                "ll_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS = 1 AND [NUMERO_DEPOSITO_COMPROBAN"& _ 
                "TE_INGRESO_BANCOS] IS NULL) OR ([NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS] = @"& _ 
                "Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS)) AND ([ESTADO_COMPROBANTE_I"& _ 
                "NGRESO_BANCOS] = @Original_ESTADO_COMPROBANTE_INGRESO_BANCOS) AND ([ID_PROVINCIA"& _ 
                "] = @Original_ID_PROVINCIA) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ID_PAR"& _ 
                "ROQUIAS] = @Original_ID_PARROQUIAS) AND ([ID_CENTRO_COSTO] = @Original_ID_CENTRO"& _ 
                "_COSTO) AND ([ID_BANCO] = @Original_ID_BANCO) AND ([ID_CUENTA_BANCOS] = @Origina"& _ 
                "l_ID_CUENTA_BANCOS))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[COMPROBANTE_INGRESO_BANCOS] ([ID_COMPROBANTE_INGRESO_BANCOS], "& _ 
                "[FECHA_COMPROBANTE_INGRESO_BANCOS], [NUMERO_FACTURA_VENTA], [ID_CLIENTE_GENERAL]"& _ 
                ", [ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS], [CONCEPTO_COMPROBANTE_INGRESO_BANCOS],"& _ 
                " [FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS], [OBSERVACIONES_COMPROBANTE_INGRESO_BAN"& _ 
                "COS], [VALOR_COMPROBANTE_INGRESO_BANCOS], [NUMERO_DEPOSITO_COMPROBANTE_INGRESO_B"& _ 
                "ANCOS], [ESTADO_COMPROBANTE_INGRESO_BANCOS], [ID_PROVINCIA], [ID_CIUDAD], [ID_PA"& _ 
                "RROQUIAS], [ID_CENTRO_COSTO], [ID_BANCO], [ID_CUENTA_BANCOS]) VALUES (@ID_COMPRO"& _ 
                "BANTE_INGRESO_BANCOS, @FECHA_COMPROBANTE_INGRESO_BANCOS, @NUMERO_FACTURA_VENTA, "& _ 
                "@ID_CLIENTE_GENERAL, @ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, @CONCEPTO_COMPROBANT"& _ 
                "E_INGRESO_BANCOS, @FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, @OBSERVACIONES_COMPROB"& _ 
                "ANTE_INGRESO_BANCOS, @VALOR_COMPROBANTE_INGRESO_BANCOS, @NUMERO_DEPOSITO_COMPROB"& _ 
                "ANTE_INGRESO_BANCOS, @ESTADO_COMPROBANTE_INGRESO_BANCOS, @ID_PROVINCIA, @ID_CIUD"& _ 
                "AD, @ID_PARROQUIAS, @ID_CENTRO_COSTO, @ID_BANCO, @ID_CUENTA_BANCOS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_"& _ 
                "COMPROBANTE_INGRESO_BANCOS, FECHA_COMPROBANTE_INGRESO_BANCOS, NUMERO_FACTURA_VEN"& _ 
                "TA, ID_CLIENTE_GENERAL, ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, CONCEPTO_COMPROBAN"& _ 
                "TE_INGRESO_BANCOS, FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, OBSERVACIONES_COMPROBA"& _ 
                "NTE_INGRESO_BANCOS, VALOR_COMPROBANTE_INGRESO_BANCOS, NUMERO_DEPOSITO_COMPROBANT"& _ 
                "E_INGRESO_BANCOS, ESTADO_COMPROBANTE_INGRESO_BANCOS, ID_PROVINCIA, ID_CIUDAD, ID"& _ 
                "_PARROQUIAS, ID_CENTRO_COSTO, ID_BANCO, ID_CUENTA_BANCOS FROM COMPROBANTE_INGRES"& _ 
                "O_BANCOS WHERE (ID_COMPROBANTE_INGRESO_BANCOS = @ID_COMPROBANTE_INGRESO_BANCOS)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[COMPROBANTE_INGRESO_BANCOS] SET [ID_COMPROBANTE_INGRESO_BANCOS] = @"& _ 
                "ID_COMPROBANTE_INGRESO_BANCOS, [FECHA_COMPROBANTE_INGRESO_BANCOS] = @FECHA_COMPR"& _ 
                "OBANTE_INGRESO_BANCOS, [NUMERO_FACTURA_VENTA] = @NUMERO_FACTURA_VENTA, [ID_CLIEN"& _ 
                "TE_GENERAL] = @ID_CLIENTE_GENERAL, [ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS] = @ACT"& _ 
                "IVIDAD_COMPROBANTE_INGRESO_BANCOS, [CONCEPTO_COMPROBANTE_INGRESO_BANCOS] = @CONC"& _ 
                "EPTO_COMPROBANTE_INGRESO_BANCOS, [FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS] = @FORM"& _ 
                "A_PAGO_COMPROBANTE_INGRESO_BANCOS, [OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS] = "& _ 
                "@OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS, [VALOR_COMPROBANTE_INGRESO_BANCOS] = "& _ 
                "@VALOR_COMPROBANTE_INGRESO_BANCOS, [NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS] "& _ 
                "= @NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS, [ESTADO_COMPROBANTE_INGRESO_BANCO"& _ 
                "S] = @ESTADO_COMPROBANTE_INGRESO_BANCOS, [ID_PROVINCIA] = @ID_PROVINCIA, [ID_CIU"& _ 
                "DAD] = @ID_CIUDAD, [ID_PARROQUIAS] = @ID_PARROQUIAS, [ID_CENTRO_COSTO] = @ID_CEN"& _ 
                "TRO_COSTO, [ID_BANCO] = @ID_BANCO, [ID_CUENTA_BANCOS] = @ID_CUENTA_BANCOS WHERE "& _ 
                "(([ID_COMPROBANTE_INGRESO_BANCOS] = @Original_ID_COMPROBANTE_INGRESO_BANCOS) AND"& _ 
                " ([FECHA_COMPROBANTE_INGRESO_BANCOS] = @Original_FECHA_COMPROBANTE_INGRESO_BANCO"& _ 
                "S) AND ([ID_CLIENTE_GENERAL] = @Original_ID_CLIENTE_GENERAL) AND ([ACTIVIDAD_COM"& _ 
                "PROBANTE_INGRESO_BANCOS] = @Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS) AND ("& _ 
                "[FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS] = @Original_FORMA_PAGO_COMPROBANTE_INGRE"& _ 
                "SO_BANCOS) AND ([VALOR_COMPROBANTE_INGRESO_BANCOS] = @Original_VALOR_COMPROBANTE"& _ 
                "_INGRESO_BANCOS) AND ((@IsNull_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS = 1 AN"& _ 
                "D [NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS] IS NULL) OR ([NUMERO_DEPOSITO_COM"& _ 
                "PROBANTE_INGRESO_BANCOS] = @Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS)"& _ 
                ") AND ([ESTADO_COMPROBANTE_INGRESO_BANCOS] = @Original_ESTADO_COMPROBANTE_INGRES"& _ 
                "O_BANCOS) AND ([ID_PROVINCIA] = @Original_ID_PROVINCIA) AND ([ID_CIUDAD] = @Orig"& _ 
                "inal_ID_CIUDAD) AND ([ID_PARROQUIAS] = @Original_ID_PARROQUIAS) AND ([ID_CENTRO_"& _ 
                "COSTO] = @Original_ID_CENTRO_COSTO) AND ([ID_BANCO] = @Original_ID_BANCO) AND (["& _ 
                "ID_CUENTA_BANCOS] = @Original_ID_CUENTA_BANCOS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_COMPROBANTE_INGRESO"& _ 
                "_BANCOS, FECHA_COMPROBANTE_INGRESO_BANCOS, NUMERO_FACTURA_VENTA, ID_CLIENTE_GENE"& _ 
                "RAL, ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, CONCEPTO_COMPROBANTE_INGRESO_BANCOS, "& _ 
                "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS,"& _ 
                " VALOR_COMPROBANTE_INGRESO_BANCOS, NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS, E"& _ 
                "STADO_COMPROBANTE_INGRESO_BANCOS, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ID_CEN"& _ 
                "TRO_COSTO, ID_BANCO, ID_CUENTA_BANCOS FROM COMPROBANTE_INGRESO_BANCOS WHERE (ID_"& _ 
                "COMPROBANTE_INGRESO_BANCOS = @ID_COMPROBANTE_INGRESO_BANCOS)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_COMPROBANTE_INGRESO_BANCOS, FECHA_COMPROBANTE_INGRESO_BANCOS, NUMERO_FA"& _ 
                "CTURA_VENTA, ID_CLIENTE_GENERAL, ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, CONCEPTO_"& _ 
                "COMPROBANTE_INGRESO_BANCOS, FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, OBSERVACIONES"& _ 
                "_COMPROBANTE_INGRESO_BANCOS, VALOR_COMPROBANTE_INGRESO_BANCOS, NUMERO_DEPOSITO_C"& _ 
                "OMPROBANTE_INGRESO_BANCOS, ESTADO_COMPROBANTE_INGRESO_BANCOS, ID_PROVINCIA, ID_C"& _ 
                "IUDAD, ID_PARROQUIAS, ID_CENTRO_COSTO, ID_BANCO, ID_CUENTA_BANCOS FROM dbo.COMPR"& _ 
                "OBANTE_INGRESO_BANCOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.COMPROBANTE_INGRESO_BANCOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.COMPROBANTE_INGRESO_BANCOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.COMPROBANTE_INGRESO_BANCOSDataTable = New DataSetComprobanteIngresoBancos.COMPROBANTE_INGRESO_BANCOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.COMPROBANTE_INGRESO_BANCOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "COMPROBANTE_INGRESO_BANCOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal Original_FECHA_COMPROBANTE_INGRESO_BANCOS As Date, ByVal Original_ID_CLIENTE_GENERAL As Long, ByVal Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String, ByVal Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String, ByVal Original_VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal, ByVal Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String, ByVal Original_ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer, ByVal Original_ID_PROVINCIA As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ID_CENTRO_COSTO As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_ID_CUENTA_BANCOS As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_COMPROBANTE_INGRESO_BANCOS,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_VALOR_COMPROBANTE_INGRESO_BANCOS,Decimal)
            If (Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ESTADO_COMPROBANTE_INGRESO_BANCOS,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ID_BANCO,Integer)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ID_CUENTA_BANCOS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long,  _
                    ByVal FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal CONCEPTO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_BANCO As Integer,  _
                    ByVal ID_CUENTA_BANCOS As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_COMPROBANTE_INGRESO_BANCOS,Date)
            If (NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (CONCEPTO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONCEPTO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CONCEPTO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(VALOR_COMPROBANTE_INGRESO_BANCOS,Decimal)
            If (NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ESTADO_COMPROBANTE_INGRESO_BANCOS,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ID_BANCO,Integer)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(ID_CUENTA_BANCOS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long,  _
                    ByVal FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal CONCEPTO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_BANCO As Integer,  _
                    ByVal ID_CUENTA_BANCOS As Integer,  _
                    ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long,  _
                    ByVal Original_FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal Original_ID_PROVINCIA As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_BANCO As Integer,  _
                    ByVal Original_ID_CUENTA_BANCOS As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_COMPROBANTE_INGRESO_BANCOS,Date)
            If (NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (CONCEPTO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONCEPTO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CONCEPTO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(VALOR_COMPROBANTE_INGRESO_BANCOS,Decimal)
            If (NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ESTADO_COMPROBANTE_INGRESO_BANCOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ID_BANCO,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ID_CUENTA_BANCOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_FECHA_COMPROBANTE_INGRESO_BANCOS,Date)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            If (Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_VALOR_COMPROBANTE_INGRESO_BANCOS,Decimal)
            If (Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ESTADO_COMPROBANTE_INGRESO_BANCOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID_BANCO,Integer)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ID_CUENTA_BANCOS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal CONCEPTO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_BANCO As Integer,  _
                    ByVal ID_CUENTA_BANCOS As Integer,  _
                    ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long,  _
                    ByVal Original_FECHA_COMPROBANTE_INGRESO_BANCOS As Date,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_VALOR_COMPROBANTE_INGRESO_BANCOS As Decimal,  _
                    ByVal Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS As String,  _
                    ByVal Original_ESTADO_COMPROBANTE_INGRESO_BANCOS As Integer,  _
                    ByVal Original_ID_PROVINCIA As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_BANCO As Integer,  _
                    ByVal Original_ID_CUENTA_BANCOS As Integer) As Integer
            Return Me.Update(Original_ID_COMPROBANTE_INGRESO_BANCOS, FECHA_COMPROBANTE_INGRESO_BANCOS, NUMERO_FACTURA_VENTA, ID_CLIENTE_GENERAL, ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, CONCEPTO_COMPROBANTE_INGRESO_BANCOS, FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, OBSERVACIONES_COMPROBANTE_INGRESO_BANCOS, VALOR_COMPROBANTE_INGRESO_BANCOS, NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS, ESTADO_COMPROBANTE_INGRESO_BANCOS, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ID_CENTRO_COSTO, ID_BANCO, ID_CUENTA_BANCOS, Original_ID_COMPROBANTE_INGRESO_BANCOS, Original_FECHA_COMPROBANTE_INGRESO_BANCOS, Original_ID_CLIENTE_GENERAL, Original_ACTIVIDAD_COMPROBANTE_INGRESO_BANCOS, Original_FORMA_PAGO_COMPROBANTE_INGRESO_BANCOS, Original_VALOR_COMPROBANTE_INGRESO_BANCOS, Original_NUMERO_DEPOSITO_COMPROBANTE_INGRESO_BANCOS, Original_ESTADO_COMPROBANTE_INGRESO_BANCOS, Original_ID_PROVINCIA, Original_ID_CIUDAD, Original_ID_PARROQUIAS, Original_ID_CENTRO_COSTO, Original_ID_BANCO, Original_ID_CUENTA_BANCOS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CUENTAS_BANCOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CUENTAS_BANCOS"
            tableMapping.ColumnMappings.Add("ID_CUENTA_BANCOS", "ID_CUENTA_BANCOS")
            tableMapping.ColumnMappings.Add("NUMERO_CUENTA_BANCOS", "NUMERO_CUENTA_BANCOS")
            tableMapping.ColumnMappings.Add("MONTO_CUENTA_BANCOS", "MONTO_CUENTA_BANCOS")
            tableMapping.ColumnMappings.Add("TIPO_CUENTA_BANCOS", "TIPO_CUENTA_BANCOS")
            tableMapping.ColumnMappings.Add("ESTADO_CUENTA_BANCOS", "ESTADO_CUENTA_BANCOS")
            tableMapping.ColumnMappings.Add("ID_BANCO", "ID_BANCO")
            tableMapping.ColumnMappings.Add("CODIGO_PLAN_CUENTAS", "CODIGO_PLAN_CUENTAS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CUENTAS_BANCOS] WHERE (([ID_CUENTA_BANCOS] = @Original_ID_CUEN"& _ 
                "TA_BANCOS) AND ([NUMERO_CUENTA_BANCOS] = @Original_NUMERO_CUENTA_BANCOS) AND ([M"& _ 
                "ONTO_CUENTA_BANCOS] = @Original_MONTO_CUENTA_BANCOS) AND ([TIPO_CUENTA_BANCOS] ="& _ 
                " @Original_TIPO_CUENTA_BANCOS) AND ([ESTADO_CUENTA_BANCOS] = @Original_ESTADO_CU"& _ 
                "ENTA_BANCOS) AND ([ID_BANCO] = @Original_ID_BANCO) AND ((@IsNull_CODIGO_PLAN_CUE"& _ 
                "NTAS = 1 AND [CODIGO_PLAN_CUENTAS] IS NULL) OR ([CODIGO_PLAN_CUENTAS] = @Origina"& _ 
                "l_CODIGO_PLAN_CUENTAS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTO_CUENTA_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CUENTAS_BANCOS] ([ID_CUENTA_BANCOS], [NUMERO_CUENTA_BANCOS], ["& _ 
                "MONTO_CUENTA_BANCOS], [TIPO_CUENTA_BANCOS], [ESTADO_CUENTA_BANCOS], [ID_BANCO], "& _ 
                "[CODIGO_PLAN_CUENTAS]) VALUES (@ID_CUENTA_BANCOS, @NUMERO_CUENTA_BANCOS, @MONTO_"& _ 
                "CUENTA_BANCOS, @TIPO_CUENTA_BANCOS, @ESTADO_CUENTA_BANCOS, @ID_BANCO, @CODIGO_PL"& _ 
                "AN_CUENTAS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CUENTA_BANCOS, NUMERO_CUENTA_BANCOS, MONTO_CUENTA_BANCOS"& _ 
                ", TIPO_CUENTA_BANCOS, ESTADO_CUENTA_BANCOS, ID_BANCO, CODIGO_PLAN_CUENTAS FROM C"& _ 
                "UENTAS_BANCOS WHERE (ID_CUENTA_BANCOS = @ID_CUENTA_BANCOS)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTO_CUENTA_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CUENTAS_BANCOS] SET [ID_CUENTA_BANCOS] = @ID_CUENTA_BANCOS, [NUMERO"& _ 
                "_CUENTA_BANCOS] = @NUMERO_CUENTA_BANCOS, [MONTO_CUENTA_BANCOS] = @MONTO_CUENTA_B"& _ 
                "ANCOS, [TIPO_CUENTA_BANCOS] = @TIPO_CUENTA_BANCOS, [ESTADO_CUENTA_BANCOS] = @EST"& _ 
                "ADO_CUENTA_BANCOS, [ID_BANCO] = @ID_BANCO, [CODIGO_PLAN_CUENTAS] = @CODIGO_PLAN_"& _ 
                "CUENTAS WHERE (([ID_CUENTA_BANCOS] = @Original_ID_CUENTA_BANCOS) AND ([NUMERO_CU"& _ 
                "ENTA_BANCOS] = @Original_NUMERO_CUENTA_BANCOS) AND ([MONTO_CUENTA_BANCOS] = @Ori"& _ 
                "ginal_MONTO_CUENTA_BANCOS) AND ([TIPO_CUENTA_BANCOS] = @Original_TIPO_CUENTA_BAN"& _ 
                "COS) AND ([ESTADO_CUENTA_BANCOS] = @Original_ESTADO_CUENTA_BANCOS) AND ([ID_BANC"& _ 
                "O] = @Original_ID_BANCO) AND ((@IsNull_CODIGO_PLAN_CUENTAS = 1 AND [CODIGO_PLAN_"& _ 
                "CUENTAS] IS NULL) OR ([CODIGO_PLAN_CUENTAS] = @Original_CODIGO_PLAN_CUENTAS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CUENTA_BANCOS, NUMERO_CUENTA_BANCOS, MONTO_CUENTA_BANCOS, TIPO_CUENTA"& _ 
                "_BANCOS, ESTADO_CUENTA_BANCOS, ID_BANCO, CODIGO_PLAN_CUENTAS FROM CUENTAS_BANCOS"& _ 
                " WHERE (ID_CUENTA_BANCOS = @ID_CUENTA_BANCOS)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTO_CUENTA_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTO_CUENTA_BANCOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CUENTA_BANCOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CUENTA_BANCOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CUENTA_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_BANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_BANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_PLAN_CUENTAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_PLAN_CUENTAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CUENTA_BANCOS, NUMERO_CUENTA_BANCOS, MONTO_CUENTA_BANCOS, TIPO_CUENTA_B"& _ 
                "ANCOS, ESTADO_CUENTA_BANCOS, ID_BANCO, CODIGO_PLAN_CUENTAS FROM dbo.CUENTAS_BANC"& _ 
                "OS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.CUENTAS_BANCOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.CUENTAS_BANCOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.CUENTAS_BANCOSDataTable = New DataSetComprobanteIngresoBancos.CUENTAS_BANCOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.CUENTAS_BANCOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "CUENTAS_BANCOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CUENTA_BANCOS As Integer, ByVal Original_NUMERO_CUENTA_BANCOS As String, ByVal Original_MONTO_CUENTA_BANCOS As Decimal, ByVal Original_TIPO_CUENTA_BANCOS As String, ByVal Original_ESTADO_CUENTA_BANCOS As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_CODIGO_PLAN_CUENTAS As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CUENTA_BANCOS,Integer)
            If (Original_NUMERO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMERO_CUENTA_BANCOS")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NUMERO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MONTO_CUENTA_BANCOS,Decimal)
            If (Original_TIPO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_CUENTA_BANCOS")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TIPO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ESTADO_CUENTA_BANCOS,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_BANCO,Integer)
            If (Original_CODIGO_PLAN_CUENTAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CODIGO_PLAN_CUENTAS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CUENTA_BANCOS As Integer, ByVal NUMERO_CUENTA_BANCOS As String, ByVal MONTO_CUENTA_BANCOS As Decimal, ByVal TIPO_CUENTA_BANCOS As String, ByVal ESTADO_CUENTA_BANCOS As Integer, ByVal ID_BANCO As Integer, ByVal CODIGO_PLAN_CUENTAS As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CUENTA_BANCOS,Integer)
            If (NUMERO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_CUENTA_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUMERO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(MONTO_CUENTA_BANCOS,Decimal)
            If (TIPO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_CUENTA_BANCOS")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TIPO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ESTADO_CUENTA_BANCOS,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_BANCO,Integer)
            If (CODIGO_PLAN_CUENTAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CODIGO_PLAN_CUENTAS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_CUENTA_BANCOS As Integer, ByVal NUMERO_CUENTA_BANCOS As String, ByVal MONTO_CUENTA_BANCOS As Decimal, ByVal TIPO_CUENTA_BANCOS As String, ByVal ESTADO_CUENTA_BANCOS As Integer, ByVal ID_BANCO As Integer, ByVal CODIGO_PLAN_CUENTAS As String, ByVal Original_ID_CUENTA_BANCOS As Integer, ByVal Original_NUMERO_CUENTA_BANCOS As String, ByVal Original_MONTO_CUENTA_BANCOS As Decimal, ByVal Original_TIPO_CUENTA_BANCOS As String, ByVal Original_ESTADO_CUENTA_BANCOS As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_CODIGO_PLAN_CUENTAS As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CUENTA_BANCOS,Integer)
            If (NUMERO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_CUENTA_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUMERO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MONTO_CUENTA_BANCOS,Decimal)
            If (TIPO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_CUENTA_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TIPO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ESTADO_CUENTA_BANCOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_BANCO,Integer)
            If (CODIGO_PLAN_CUENTAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CODIGO_PLAN_CUENTAS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ID_CUENTA_BANCOS,Integer)
            If (Original_NUMERO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMERO_CUENTA_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NUMERO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_MONTO_CUENTA_BANCOS,Decimal)
            If (Original_TIPO_CUENTA_BANCOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_CUENTA_BANCOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_TIPO_CUENTA_BANCOS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ESTADO_CUENTA_BANCOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ID_BANCO,Integer)
            If (Original_CODIGO_PLAN_CUENTAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_CODIGO_PLAN_CUENTAS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NUMERO_CUENTA_BANCOS As String, ByVal MONTO_CUENTA_BANCOS As Decimal, ByVal TIPO_CUENTA_BANCOS As String, ByVal ESTADO_CUENTA_BANCOS As Integer, ByVal ID_BANCO As Integer, ByVal CODIGO_PLAN_CUENTAS As String, ByVal Original_ID_CUENTA_BANCOS As Integer, ByVal Original_NUMERO_CUENTA_BANCOS As String, ByVal Original_MONTO_CUENTA_BANCOS As Decimal, ByVal Original_TIPO_CUENTA_BANCOS As String, ByVal Original_ESTADO_CUENTA_BANCOS As Integer, ByVal Original_ID_BANCO As Integer, ByVal Original_CODIGO_PLAN_CUENTAS As String) As Integer
            Return Me.Update(Original_ID_CUENTA_BANCOS, NUMERO_CUENTA_BANCOS, MONTO_CUENTA_BANCOS, TIPO_CUENTA_BANCOS, ESTADO_CUENTA_BANCOS, ID_BANCO, CODIGO_PLAN_CUENTAS, Original_ID_CUENTA_BANCOS, Original_NUMERO_CUENTA_BANCOS, Original_MONTO_CUENTA_BANCOS, Original_TIPO_CUENTA_BANCOS, Original_ESTADO_CUENTA_BANCOS, Original_ID_BANCO, Original_CODIGO_PLAN_CUENTAS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO"
            tableMapping.ColumnMappings.Add("ID_COMPROBANTE_INGRESO_BANCOS", "ID_COMPROBANTE_INGRESO_BANCOS")
            tableMapping.ColumnMappings.Add("ID_LIBRO_DIARIO", "ID_LIBRO_DIARIO")
            tableMapping.ColumnMappings.Add("ID_ASIENTO", "ID_ASIENTO")
            tableMapping.ColumnMappings.Add("NUMERO_REGISTRO", "NUMERO_REGISTRO")
            tableMapping.ColumnMappings.Add("TempID", "TempID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO] WHERE (([ID_COMP"& _ 
                "ROBANTE_INGRESO_BANCOS] = @Original_ID_COMPROBANTE_INGRESO_BANCOS) AND ([ID_LIBR"& _ 
                "O_DIARIO] = @Original_ID_LIBRO_DIARIO) AND ([ID_ASIENTO] = @Original_ID_ASIENTO)"& _ 
                " AND ([NUMERO_REGISTRO] = @Original_NUMERO_REGISTRO) AND ([TempID] = @Original_T"& _ 
                "empID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_REGISTRO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TempID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO] ([ID_COMPROBANTE"& _ 
                "_INGRESO_BANCOS], [ID_LIBRO_DIARIO], [ID_ASIENTO], [NUMERO_REGISTRO]) VALUES (@I"& _ 
                "D_COMPROBANTE_INGRESO_BANCOS, @ID_LIBRO_DIARIO, @ID_ASIENTO, @NUMERO_REGISTRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_COMPROBANTE_INGRESO_BANCOS, ID_LIBRO_DIARIO, ID_ASIENTO, NUMERO_REGIS"& _ 
                "TRO, TempID FROM NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO WHERE (TempID = SC"& _ 
                "OPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_REGISTRO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO] SET [ID_COMPROBANTE_I"& _ 
                "NGRESO_BANCOS] = @ID_COMPROBANTE_INGRESO_BANCOS, [ID_LIBRO_DIARIO] = @ID_LIBRO_D"& _ 
                "IARIO, [ID_ASIENTO] = @ID_ASIENTO, [NUMERO_REGISTRO] = @NUMERO_REGISTRO WHERE (("& _ 
                "[ID_COMPROBANTE_INGRESO_BANCOS] = @Original_ID_COMPROBANTE_INGRESO_BANCOS) AND ("& _ 
                "[ID_LIBRO_DIARIO] = @Original_ID_LIBRO_DIARIO) AND ([ID_ASIENTO] = @Original_ID_"& _ 
                "ASIENTO) AND ([NUMERO_REGISTRO] = @Original_NUMERO_REGISTRO) AND ([TempID] = @Or"& _ 
                "iginal_TempID));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_COMPROBANTE_INGRESO_BANCOS, ID_LIBRO_DIARIO, ID_ASIE"& _ 
                "NTO, NUMERO_REGISTRO, TempID FROM NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO W"& _ 
                "HERE (TempID = @TempID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_REGISTRO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_COMPROBANTE_INGRESO_BANCOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIBRO_DIARIO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIBRO_DIARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ASIENTO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ASIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_REGISTRO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_REGISTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TempID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TempID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_COMPROBANTE_INGRESO_BANCOS, ID_LIBRO_DIARIO, ID_ASIENTO, NUMERO_REGISTR"& _ 
                "O, TempID FROM dbo.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetComprobanteIngresoBancos.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetComprobanteIngresoBancos.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetComprobanteIngresoBancos.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable = New DataSetComprobanteIngresoBancos.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetComprobanteIngresoBancos.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            Return Me.Adapter.Update(dataSet, "NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal Original_ID_LIBRO_DIARIO As Long, ByVal Original_ID_ASIENTO As Long, ByVal Original_NUMERO_REGISTRO As Long, ByVal Original_TempID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_LIBRO_DIARIO,Long)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_ASIENTO,Long)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_NUMERO_REGISTRO,Long)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TempID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal ID_LIBRO_DIARIO As Long, ByVal ID_ASIENTO As Long, ByVal NUMERO_REGISTRO As Long) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_LIBRO_DIARIO,Long)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ID_ASIENTO,Long)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMERO_REGISTRO,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal ID_LIBRO_DIARIO As Long, ByVal ID_ASIENTO As Long, ByVal NUMERO_REGISTRO As Long, ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal Original_ID_LIBRO_DIARIO As Long, ByVal Original_ID_ASIENTO As Long, ByVal Original_NUMERO_REGISTRO As Long, ByVal Original_TempID As Integer, ByVal TempID As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_LIBRO_DIARIO,Long)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ID_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMERO_REGISTRO,Long)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_COMPROBANTE_INGRESO_BANCOS,Long)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_LIBRO_DIARIO,Long)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_ASIENTO,Long)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_NUMERO_REGISTRO,Long)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_TempID,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(TempID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal ID_LIBRO_DIARIO As Long, ByVal ID_ASIENTO As Long, ByVal NUMERO_REGISTRO As Long, ByVal Original_ID_COMPROBANTE_INGRESO_BANCOS As Long, ByVal Original_ID_LIBRO_DIARIO As Long, ByVal Original_ID_ASIENTO As Long, ByVal Original_NUMERO_REGISTRO As Long, ByVal Original_TempID As Integer) As Integer
            Return Me.Update(ID_COMPROBANTE_INGRESO_BANCOS, ID_LIBRO_DIARIO, ID_ASIENTO, NUMERO_REGISTRO, Original_ID_COMPROBANTE_INGRESO_BANCOS, Original_ID_LIBRO_DIARIO, Original_ID_ASIENTO, Original_NUMERO_REGISTRO, Original_TempID, Original_TempID)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _aSIENTOS_LIBRO_DIARIOTableAdapter As ASIENTOS_LIBRO_DIARIOTableAdapter
        
        Private _bANCOSTableAdapter As BANCOSTableAdapter
        
        Private _cLIENTE_GENERALTableAdapter As CLIENTE_GENERALTableAdapter
        
        Private _cOMPROBANTE_INGRESO_BANCOSTableAdapter As COMPROBANTE_INGRESO_BANCOSTableAdapter
        
        Private _cUENTAS_BANCOSTableAdapter As CUENTAS_BANCOSTableAdapter
        
        Private _nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ASIENTOS_LIBRO_DIARIOTableAdapter() As ASIENTOS_LIBRO_DIARIOTableAdapter
            Get
                Return Me._aSIENTOS_LIBRO_DIARIOTableAdapter
            End Get
            Set
                Me._aSIENTOS_LIBRO_DIARIOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BANCOSTableAdapter() As BANCOSTableAdapter
            Get
                Return Me._bANCOSTableAdapter
            End Get
            Set
                Me._bANCOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CLIENTE_GENERALTableAdapter() As CLIENTE_GENERALTableAdapter
            Get
                Return Me._cLIENTE_GENERALTableAdapter
            End Get
            Set
                Me._cLIENTE_GENERALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property COMPROBANTE_INGRESO_BANCOSTableAdapter() As COMPROBANTE_INGRESO_BANCOSTableAdapter
            Get
                Return Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter
            End Get
            Set
                Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CUENTAS_BANCOSTableAdapter() As CUENTAS_BANCOSTableAdapter
            Get
                Return Me._cUENTAS_BANCOSTableAdapter
            End Get
            Set
                Me._cUENTAS_BANCOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter() As NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter
            Get
                Return Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter
            End Get
            Set
                Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection
                End If
                If ((Not (Me._bANCOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._bANCOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._bANCOSTableAdapter.Connection
                End If
                If ((Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cLIENTE_GENERALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cLIENTE_GENERALTableAdapter.Connection
                End If
                If ((Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection
                End If
                If ((Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cUENTAS_BANCOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cUENTAS_BANCOSTableAdapter.Connection
                End If
                If ((Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSetComprobanteIngresoBancos, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ASIENTOS_LIBRO_DIARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._bANCOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CUENTAS_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cUENTAS_BANCOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.COMPROBANTE_INGRESO_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSetComprobanteIngresoBancos, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ASIENTOS_LIBRO_DIARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._bANCOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CUENTAS_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cUENTAS_BANCOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.COMPROBANTE_INGRESO_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSetComprobanteIngresoBancos, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.COMPROBANTE_INGRESO_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.NUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CUENTAS_BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cUENTAS_BANCOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.BANCOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._bANCOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ASIENTOS_LIBRO_DIARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSetComprobanteIngresoBancos) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._bANCOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._bANCOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cLIENTE_GENERALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cUENTAS_BANCOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aSIENTOS_LIBRO_DIARIOTableAdapter, Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection)
                    Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._bANCOSTableAdapter, Me._bANCOSTableAdapter.Connection)
                    Me._bANCOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._bANCOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._bANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._bANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._bANCOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cLIENTE_GENERALTableAdapter, Me._cLIENTE_GENERALTableAdapter.Connection)
                    Me._cLIENTE_GENERALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENTE_GENERALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cLIENTE_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cLIENTE_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cLIENTE_GENERALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter, Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection)
                    Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cUENTAS_BANCOSTableAdapter, Me._cUENTAS_BANCOSTableAdapter.Connection)
                    Me._cUENTAS_BANCOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cUENTAS_BANCOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cUENTAS_BANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cUENTAS_BANCOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cUENTAS_BANCOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter, Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection)
                    Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._aSIENTOS_LIBRO_DIARIOTableAdapter) Is Nothing) Then
                    Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Connection = CType(revertConnections(Me._aSIENTOS_LIBRO_DIARIOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aSIENTOS_LIBRO_DIARIOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._bANCOSTableAdapter) Is Nothing) Then
                    Me._bANCOSTableAdapter.Connection = CType(revertConnections(Me._bANCOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._bANCOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    Me._cLIENTE_GENERALTableAdapter.Connection = CType(revertConnections(Me._cLIENTE_GENERALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENTE_GENERALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter) Is Nothing) Then
                    Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Connection = CType(revertConnections(Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPROBANTE_INGRESO_BANCOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cUENTAS_BANCOSTableAdapter) Is Nothing) Then
                    Me._cUENTAS_BANCOSTableAdapter.Connection = CType(revertConnections(Me._cUENTAS_BANCOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cUENTAS_BANCOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter) Is Nothing) Then
                    Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Connection = CType(revertConnections(Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._nUMERO_REGISTRO_ASIENTOS_COMPROBANTE_INGRESOTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
