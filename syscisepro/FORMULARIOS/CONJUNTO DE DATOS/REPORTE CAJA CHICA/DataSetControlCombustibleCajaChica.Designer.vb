'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetControlCombustibleCajaChica"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetControlCombustibleCajaChica
    Inherits Global.System.Data.DataSet
    
    Private tableCONTROL_COMBUSTIBLES As CONTROL_COMBUSTIBLESDataTable
    
    Private tableLLEGADA_VEHICULO As LLEGADA_VEHICULODataTable
    
    Private tableSALIDA_VEHICULO As SALIDA_VEHICULODataTable
    
    Private tableVEHICULOS As VEHICULOSDataTable
    
    Private tableACTIVO_FIJO_GENERAL As ACTIVO_FIJO_GENERALDataTable
    
    Private tableRUBROS As RUBROSDataTable
    
    Private tablePERSONAL As PERSONALDataTable
    
    Private tableGASTOS_CAJA_CHICA As GASTOS_CAJA_CHICADataTable
    
    Private tableSOLICITUD_CAJA_CHICA As SOLICITUD_CAJA_CHICADataTable
    
    Private tableRESPONSABLE_AUTORIZACION_FONDO_CAJA As RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable
    
    Private tablePROVINCIAS As PROVINCIASDataTable
    
    Private tableCIUDADES As CIUDADESDataTable
    
    Private tablePARROQUIAS As PARROQUIASDataTable
    
    Private tableCAJA_CHICA As CAJA_CHICADataTable
    
    Private tableCENTRO_COSTO As CENTRO_COSTODataTable
    
    Private relationFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO As Global.System.Data.DataRelation
    
    Private relationFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO As Global.System.Data.DataRelation
    
    Private relationVEHICULOS_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationRUBROS_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationPERSONAL_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationSOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES As Global.System.Data.DataRelation
    
    Private relationFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA As Global.System.Data.DataRelation
    
    Private relationPROVINCIAS_SOLICITUD_CAJA_CHICA As Global.System.Data.DataRelation
    
    Private relationCIUDADES_SOLICITUD_CAJA_CHICA As Global.System.Data.DataRelation
    
    Private relationPARROQUIAS_SOLICITUD_CAJA_CHICA As Global.System.Data.DataRelation
    
    Private relationFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CONTROL_COMBUSTIBLES")) Is Nothing) Then
                MyBase.Tables.Add(New CONTROL_COMBUSTIBLESDataTable(ds.Tables("CONTROL_COMBUSTIBLES")))
            End If
            If (Not (ds.Tables("LLEGADA_VEHICULO")) Is Nothing) Then
                MyBase.Tables.Add(New LLEGADA_VEHICULODataTable(ds.Tables("LLEGADA_VEHICULO")))
            End If
            If (Not (ds.Tables("SALIDA_VEHICULO")) Is Nothing) Then
                MyBase.Tables.Add(New SALIDA_VEHICULODataTable(ds.Tables("SALIDA_VEHICULO")))
            End If
            If (Not (ds.Tables("VEHICULOS")) Is Nothing) Then
                MyBase.Tables.Add(New VEHICULOSDataTable(ds.Tables("VEHICULOS")))
            End If
            If (Not (ds.Tables("ACTIVO_FIJO_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New ACTIVO_FIJO_GENERALDataTable(ds.Tables("ACTIVO_FIJO_GENERAL")))
            End If
            If (Not (ds.Tables("RUBROS")) Is Nothing) Then
                MyBase.Tables.Add(New RUBROSDataTable(ds.Tables("RUBROS")))
            End If
            If (Not (ds.Tables("PERSONAL")) Is Nothing) Then
                MyBase.Tables.Add(New PERSONALDataTable(ds.Tables("PERSONAL")))
            End If
            If (Not (ds.Tables("GASTOS_CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New GASTOS_CAJA_CHICADataTable(ds.Tables("GASTOS_CAJA_CHICA")))
            End If
            If (Not (ds.Tables("SOLICITUD_CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New SOLICITUD_CAJA_CHICADataTable(ds.Tables("SOLICITUD_CAJA_CHICA")))
            End If
            If (Not (ds.Tables("RESPONSABLE_AUTORIZACION_FONDO_CAJA")) Is Nothing) Then
                MyBase.Tables.Add(New RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable(ds.Tables("RESPONSABLE_AUTORIZACION_FONDO_CAJA")))
            End If
            If (Not (ds.Tables("PROVINCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New PROVINCIASDataTable(ds.Tables("PROVINCIAS")))
            End If
            If (Not (ds.Tables("CIUDADES")) Is Nothing) Then
                MyBase.Tables.Add(New CIUDADESDataTable(ds.Tables("CIUDADES")))
            End If
            If (Not (ds.Tables("PARROQUIAS")) Is Nothing) Then
                MyBase.Tables.Add(New PARROQUIASDataTable(ds.Tables("PARROQUIAS")))
            End If
            If (Not (ds.Tables("CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New CAJA_CHICADataTable(ds.Tables("CAJA_CHICA")))
            End If
            If (Not (ds.Tables("CENTRO_COSTO")) Is Nothing) Then
                MyBase.Tables.Add(New CENTRO_COSTODataTable(ds.Tables("CENTRO_COSTO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CONTROL_COMBUSTIBLES() As CONTROL_COMBUSTIBLESDataTable
        Get
            Return Me.tableCONTROL_COMBUSTIBLES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LLEGADA_VEHICULO() As LLEGADA_VEHICULODataTable
        Get
            Return Me.tableLLEGADA_VEHICULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SALIDA_VEHICULO() As SALIDA_VEHICULODataTable
        Get
            Return Me.tableSALIDA_VEHICULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VEHICULOS() As VEHICULOSDataTable
        Get
            Return Me.tableVEHICULOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ACTIVO_FIJO_GENERAL() As ACTIVO_FIJO_GENERALDataTable
        Get
            Return Me.tableACTIVO_FIJO_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RUBROS() As RUBROSDataTable
        Get
            Return Me.tableRUBROS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PERSONAL() As PERSONALDataTable
        Get
            Return Me.tablePERSONAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GASTOS_CAJA_CHICA() As GASTOS_CAJA_CHICADataTable
        Get
            Return Me.tableGASTOS_CAJA_CHICA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SOLICITUD_CAJA_CHICA() As SOLICITUD_CAJA_CHICADataTable
        Get
            Return Me.tableSOLICITUD_CAJA_CHICA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RESPONSABLE_AUTORIZACION_FONDO_CAJA() As RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable
        Get
            Return Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROVINCIAS() As PROVINCIASDataTable
        Get
            Return Me.tablePROVINCIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CIUDADES() As CIUDADESDataTable
        Get
            Return Me.tableCIUDADES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PARROQUIAS() As PARROQUIASDataTable
        Get
            Return Me.tablePARROQUIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJA_CHICA() As CAJA_CHICADataTable
        Get
            Return Me.tableCAJA_CHICA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CENTRO_COSTO() As CENTRO_COSTODataTable
        Get
            Return Me.tableCENTRO_COSTO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetControlCombustibleCajaChica = CType(MyBase.Clone,DataSetControlCombustibleCajaChica)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CONTROL_COMBUSTIBLES")) Is Nothing) Then
                MyBase.Tables.Add(New CONTROL_COMBUSTIBLESDataTable(ds.Tables("CONTROL_COMBUSTIBLES")))
            End If
            If (Not (ds.Tables("LLEGADA_VEHICULO")) Is Nothing) Then
                MyBase.Tables.Add(New LLEGADA_VEHICULODataTable(ds.Tables("LLEGADA_VEHICULO")))
            End If
            If (Not (ds.Tables("SALIDA_VEHICULO")) Is Nothing) Then
                MyBase.Tables.Add(New SALIDA_VEHICULODataTable(ds.Tables("SALIDA_VEHICULO")))
            End If
            If (Not (ds.Tables("VEHICULOS")) Is Nothing) Then
                MyBase.Tables.Add(New VEHICULOSDataTable(ds.Tables("VEHICULOS")))
            End If
            If (Not (ds.Tables("ACTIVO_FIJO_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New ACTIVO_FIJO_GENERALDataTable(ds.Tables("ACTIVO_FIJO_GENERAL")))
            End If
            If (Not (ds.Tables("RUBROS")) Is Nothing) Then
                MyBase.Tables.Add(New RUBROSDataTable(ds.Tables("RUBROS")))
            End If
            If (Not (ds.Tables("PERSONAL")) Is Nothing) Then
                MyBase.Tables.Add(New PERSONALDataTable(ds.Tables("PERSONAL")))
            End If
            If (Not (ds.Tables("GASTOS_CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New GASTOS_CAJA_CHICADataTable(ds.Tables("GASTOS_CAJA_CHICA")))
            End If
            If (Not (ds.Tables("SOLICITUD_CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New SOLICITUD_CAJA_CHICADataTable(ds.Tables("SOLICITUD_CAJA_CHICA")))
            End If
            If (Not (ds.Tables("RESPONSABLE_AUTORIZACION_FONDO_CAJA")) Is Nothing) Then
                MyBase.Tables.Add(New RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable(ds.Tables("RESPONSABLE_AUTORIZACION_FONDO_CAJA")))
            End If
            If (Not (ds.Tables("PROVINCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New PROVINCIASDataTable(ds.Tables("PROVINCIAS")))
            End If
            If (Not (ds.Tables("CIUDADES")) Is Nothing) Then
                MyBase.Tables.Add(New CIUDADESDataTable(ds.Tables("CIUDADES")))
            End If
            If (Not (ds.Tables("PARROQUIAS")) Is Nothing) Then
                MyBase.Tables.Add(New PARROQUIASDataTable(ds.Tables("PARROQUIAS")))
            End If
            If (Not (ds.Tables("CAJA_CHICA")) Is Nothing) Then
                MyBase.Tables.Add(New CAJA_CHICADataTable(ds.Tables("CAJA_CHICA")))
            End If
            If (Not (ds.Tables("CENTRO_COSTO")) Is Nothing) Then
                MyBase.Tables.Add(New CENTRO_COSTODataTable(ds.Tables("CENTRO_COSTO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCONTROL_COMBUSTIBLES = CType(MyBase.Tables("CONTROL_COMBUSTIBLES"),CONTROL_COMBUSTIBLESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCONTROL_COMBUSTIBLES) Is Nothing) Then
                Me.tableCONTROL_COMBUSTIBLES.InitVars
            End If
        End If
        Me.tableLLEGADA_VEHICULO = CType(MyBase.Tables("LLEGADA_VEHICULO"),LLEGADA_VEHICULODataTable)
        If (initTable = true) Then
            If (Not (Me.tableLLEGADA_VEHICULO) Is Nothing) Then
                Me.tableLLEGADA_VEHICULO.InitVars
            End If
        End If
        Me.tableSALIDA_VEHICULO = CType(MyBase.Tables("SALIDA_VEHICULO"),SALIDA_VEHICULODataTable)
        If (initTable = true) Then
            If (Not (Me.tableSALIDA_VEHICULO) Is Nothing) Then
                Me.tableSALIDA_VEHICULO.InitVars
            End If
        End If
        Me.tableVEHICULOS = CType(MyBase.Tables("VEHICULOS"),VEHICULOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVEHICULOS) Is Nothing) Then
                Me.tableVEHICULOS.InitVars
            End If
        End If
        Me.tableACTIVO_FIJO_GENERAL = CType(MyBase.Tables("ACTIVO_FIJO_GENERAL"),ACTIVO_FIJO_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableACTIVO_FIJO_GENERAL) Is Nothing) Then
                Me.tableACTIVO_FIJO_GENERAL.InitVars
            End If
        End If
        Me.tableRUBROS = CType(MyBase.Tables("RUBROS"),RUBROSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRUBROS) Is Nothing) Then
                Me.tableRUBROS.InitVars
            End If
        End If
        Me.tablePERSONAL = CType(MyBase.Tables("PERSONAL"),PERSONALDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePERSONAL) Is Nothing) Then
                Me.tablePERSONAL.InitVars
            End If
        End If
        Me.tableGASTOS_CAJA_CHICA = CType(MyBase.Tables("GASTOS_CAJA_CHICA"),GASTOS_CAJA_CHICADataTable)
        If (initTable = true) Then
            If (Not (Me.tableGASTOS_CAJA_CHICA) Is Nothing) Then
                Me.tableGASTOS_CAJA_CHICA.InitVars
            End If
        End If
        Me.tableSOLICITUD_CAJA_CHICA = CType(MyBase.Tables("SOLICITUD_CAJA_CHICA"),SOLICITUD_CAJA_CHICADataTable)
        If (initTable = true) Then
            If (Not (Me.tableSOLICITUD_CAJA_CHICA) Is Nothing) Then
                Me.tableSOLICITUD_CAJA_CHICA.InitVars
            End If
        End If
        Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA = CType(MyBase.Tables("RESPONSABLE_AUTORIZACION_FONDO_CAJA"),RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable)
        If (initTable = true) Then
            If (Not (Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA) Is Nothing) Then
                Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.InitVars
            End If
        End If
        Me.tablePROVINCIAS = CType(MyBase.Tables("PROVINCIAS"),PROVINCIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROVINCIAS) Is Nothing) Then
                Me.tablePROVINCIAS.InitVars
            End If
        End If
        Me.tableCIUDADES = CType(MyBase.Tables("CIUDADES"),CIUDADESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCIUDADES) Is Nothing) Then
                Me.tableCIUDADES.InitVars
            End If
        End If
        Me.tablePARROQUIAS = CType(MyBase.Tables("PARROQUIAS"),PARROQUIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePARROQUIAS) Is Nothing) Then
                Me.tablePARROQUIAS.InitVars
            End If
        End If
        Me.tableCAJA_CHICA = CType(MyBase.Tables("CAJA_CHICA"),CAJA_CHICADataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJA_CHICA) Is Nothing) Then
                Me.tableCAJA_CHICA.InitVars
            End If
        End If
        Me.tableCENTRO_COSTO = CType(MyBase.Tables("CENTRO_COSTO"),CENTRO_COSTODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCENTRO_COSTO) Is Nothing) Then
                Me.tableCENTRO_COSTO.InitVars
            End If
        End If
        Me.relationFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO = Me.Relations("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO")
        Me.relationFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO = Me.Relations("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO")
        Me.relationVEHICULOS_CONTROL_COMBUSTIBLES = Me.Relations("VEHICULOS_CONTROL_COMBUSTIBLES")
        Me.relationACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES = Me.Relations("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES")
        Me.relationRUBROS_CONTROL_COMBUSTIBLES = Me.Relations("RUBROS_CONTROL_COMBUSTIBLES")
        Me.relationPERSONAL_CONTROL_COMBUSTIBLES = Me.Relations("PERSONAL_CONTROL_COMBUSTIBLES")
        Me.relationGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES = Me.Relations("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES")
        Me.relationSOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES = Me.Relations("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES")
        Me.relationFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA = Me.Relations("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA")
        Me.relationPROVINCIAS_SOLICITUD_CAJA_CHICA = Me.Relations("PROVINCIAS_SOLICITUD_CAJA_CHICA")
        Me.relationCIUDADES_SOLICITUD_CAJA_CHICA = Me.Relations("CIUDADES_SOLICITUD_CAJA_CHICA")
        Me.relationPARROQUIAS_SOLICITUD_CAJA_CHICA = Me.Relations("PARROQUIAS_SOLICITUD_CAJA_CHICA")
        Me.relationFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA = Me.Relations("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetControlCombustibleCajaChica"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetControlCombustibleCajaChica.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCONTROL_COMBUSTIBLES = New CONTROL_COMBUSTIBLESDataTable()
        MyBase.Tables.Add(Me.tableCONTROL_COMBUSTIBLES)
        Me.tableLLEGADA_VEHICULO = New LLEGADA_VEHICULODataTable()
        MyBase.Tables.Add(Me.tableLLEGADA_VEHICULO)
        Me.tableSALIDA_VEHICULO = New SALIDA_VEHICULODataTable()
        MyBase.Tables.Add(Me.tableSALIDA_VEHICULO)
        Me.tableVEHICULOS = New VEHICULOSDataTable()
        MyBase.Tables.Add(Me.tableVEHICULOS)
        Me.tableACTIVO_FIJO_GENERAL = New ACTIVO_FIJO_GENERALDataTable()
        MyBase.Tables.Add(Me.tableACTIVO_FIJO_GENERAL)
        Me.tableRUBROS = New RUBROSDataTable()
        MyBase.Tables.Add(Me.tableRUBROS)
        Me.tablePERSONAL = New PERSONALDataTable()
        MyBase.Tables.Add(Me.tablePERSONAL)
        Me.tableGASTOS_CAJA_CHICA = New GASTOS_CAJA_CHICADataTable()
        MyBase.Tables.Add(Me.tableGASTOS_CAJA_CHICA)
        Me.tableSOLICITUD_CAJA_CHICA = New SOLICITUD_CAJA_CHICADataTable()
        MyBase.Tables.Add(Me.tableSOLICITUD_CAJA_CHICA)
        Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA = New RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable()
        MyBase.Tables.Add(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA)
        Me.tablePROVINCIAS = New PROVINCIASDataTable()
        MyBase.Tables.Add(Me.tablePROVINCIAS)
        Me.tableCIUDADES = New CIUDADESDataTable()
        MyBase.Tables.Add(Me.tableCIUDADES)
        Me.tablePARROQUIAS = New PARROQUIASDataTable()
        MyBase.Tables.Add(Me.tablePARROQUIAS)
        Me.tableCAJA_CHICA = New CAJA_CHICADataTable()
        MyBase.Tables.Add(Me.tableCAJA_CHICA)
        Me.tableCENTRO_COSTO = New CENTRO_COSTODataTable()
        MyBase.Tables.Add(Me.tableCENTRO_COSTO)
        Me.relationFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO = New Global.System.Data.DataRelation("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO", New Global.System.Data.DataColumn() {Me.tableLLEGADA_VEHICULO.ID_LLEGADA_VColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_LLEGADA_VColumn}, false)
        Me.Relations.Add(Me.relationFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO)
        Me.relationFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO = New Global.System.Data.DataRelation("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO", New Global.System.Data.DataColumn() {Me.tableSALIDA_VEHICULO.ID_SALIDA_VColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_SALIDA_VColumn}, false)
        Me.Relations.Add(Me.relationFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO)
        Me.relationVEHICULOS_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("VEHICULOS_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tableVEHICULOS.ID_ACTIVO_FIJOColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_ACIVO_FIJOColumn}, false)
        Me.Relations.Add(Me.relationVEHICULOS_CONTROL_COMBUSTIBLES)
        Me.relationACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tableACTIVO_FIJO_GENERAL.ID_ACTIVO_FIJOColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_ACIVO_FIJOColumn}, false)
        Me.Relations.Add(Me.relationACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES)
        Me.relationRUBROS_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("RUBROS_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tableRUBROS.ID_RUBROColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_RUBROColumn}, false)
        Me.Relations.Add(Me.relationRUBROS_CONTROL_COMBUSTIBLES)
        Me.relationPERSONAL_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("PERSONAL_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tablePERSONAL.ID_PERSONALColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_PERSONALColumn}, false)
        Me.Relations.Add(Me.relationPERSONAL_CONTROL_COMBUSTIBLES)
        Me.relationGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tableGASTOS_CAJA_CHICA.ID_GASTOS_CAJA_CHColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_CCHColumn}, false)
        Me.Relations.Add(Me.relationGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES)
        Me.relationSOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES = New Global.System.Data.DataRelation("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES", New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_SOLICTUD_CCHColumn}, New Global.System.Data.DataColumn() {Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_CCHColumn}, false)
        Me.Relations.Add(Me.relationSOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES)
        Me.relationFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA = New Global.System.Data.DataRelation("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA", New Global.System.Data.DataColumn() {Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_RESPONSABLE_AUTO_CCHColumn}, New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_RESPONSABLE_AUTO_CCHColumn}, false)
        Me.Relations.Add(Me.relationFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA)
        Me.relationPROVINCIAS_SOLICITUD_CAJA_CHICA = New Global.System.Data.DataRelation("PROVINCIAS_SOLICITUD_CAJA_CHICA", New Global.System.Data.DataColumn() {Me.tablePROVINCIAS.ID_PROVINCIASColumn}, New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_PROVINCIAColumn}, false)
        Me.Relations.Add(Me.relationPROVINCIAS_SOLICITUD_CAJA_CHICA)
        Me.relationCIUDADES_SOLICITUD_CAJA_CHICA = New Global.System.Data.DataRelation("CIUDADES_SOLICITUD_CAJA_CHICA", New Global.System.Data.DataColumn() {Me.tableCIUDADES.ID_CIUDADColumn}, New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_CIUDADColumn}, false)
        Me.Relations.Add(Me.relationCIUDADES_SOLICITUD_CAJA_CHICA)
        Me.relationPARROQUIAS_SOLICITUD_CAJA_CHICA = New Global.System.Data.DataRelation("PARROQUIAS_SOLICITUD_CAJA_CHICA", New Global.System.Data.DataColumn() {Me.tablePARROQUIAS.ID_PARROQUIASColumn}, New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_PARROQUIASColumn}, false)
        Me.Relations.Add(Me.relationPARROQUIAS_SOLICITUD_CAJA_CHICA)
        Me.relationFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA = New Global.System.Data.DataRelation("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA", New Global.System.Data.DataColumn() {Me.tableCAJA_CHICA.ID_CAJA_CHICAColumn}, New Global.System.Data.DataColumn() {Me.tableSOLICITUD_CAJA_CHICA.ID_CAJA_CHICAColumn}, false)
        Me.Relations.Add(Me.relationFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCONTROL_COMBUSTIBLES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeLLEGADA_VEHICULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSALIDA_VEHICULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVEHICULOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeACTIVO_FIJO_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRUBROS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePERSONAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeGASTOS_CAJA_CHICA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSOLICITUD_CAJA_CHICA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRESPONSABLE_AUTORIZACION_FONDO_CAJA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePROVINCIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCIUDADES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePARROQUIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCAJA_CHICA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCENTRO_COSTO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CONTROL_COMBUSTIBLESRowChangeEventHandler(ByVal sender As Object, ByVal e As CONTROL_COMBUSTIBLESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub LLEGADA_VEHICULORowChangeEventHandler(ByVal sender As Object, ByVal e As LLEGADA_VEHICULORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub SALIDA_VEHICULORowChangeEventHandler(ByVal sender As Object, ByVal e As SALIDA_VEHICULORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub VEHICULOSRowChangeEventHandler(ByVal sender As Object, ByVal e As VEHICULOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ACTIVO_FIJO_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As ACTIVO_FIJO_GENERALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RUBROSRowChangeEventHandler(ByVal sender As Object, ByVal e As RUBROSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PERSONALRowChangeEventHandler(ByVal sender As Object, ByVal e As PERSONALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub GASTOS_CAJA_CHICARowChangeEventHandler(ByVal sender As Object, ByVal e As GASTOS_CAJA_CHICARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub SOLICITUD_CAJA_CHICARowChangeEventHandler(ByVal sender As Object, ByVal e As SOLICITUD_CAJA_CHICARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEventHandler(ByVal sender As Object, ByVal e As RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PROVINCIASRowChangeEventHandler(ByVal sender As Object, ByVal e As PROVINCIASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CIUDADESRowChangeEventHandler(ByVal sender As Object, ByVal e As CIUDADESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PARROQUIASRowChangeEventHandler(ByVal sender As Object, ByVal e As PARROQUIASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CAJA_CHICARowChangeEventHandler(ByVal sender As Object, ByVal e As CAJA_CHICARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CENTRO_COSTORowChangeEventHandler(ByVal sender As Object, ByVal e As CENTRO_COSTORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CONTROL_COMBUSTIBLESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CONTROL_COMBUSTIBLESRow)
        
        Private columnID_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnFECHA_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnVALOR_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnDESTINO_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnTOTAL_KM_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnESTADO_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnMOTIVO_CONTROL_C As Global.System.Data.DataColumn
        
        Private columnID_SOLICITUD_FR As Global.System.Data.DataColumn
        
        Private columnID_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnID_ACIVO_FIJO As Global.System.Data.DataColumn
        
        Private columnID_GASTOS_FR As Global.System.Data.DataColumn
        
        Private columnID_GASTOS_CCH As Global.System.Data.DataColumn
        
        Private columnID_RESPONSABLE_AUTO_FR As Global.System.Data.DataColumn
        
        Private columnID_RESPONSABLE_AUTO_CCH As Global.System.Data.DataColumn
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnID_RUBRO As Global.System.Data.DataColumn
        
        Private columnID_SALIDA_V As Global.System.Data.DataColumn
        
        Private columnID_LLEGADA_V As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CONTROL_COMBUSTIBLES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESTINO_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOTAL_KM_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_KM_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOTIVO_CONTROL_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVO_CONTROL_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SOLICITUD_FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SOLICITUD_FR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ACIVO_FIJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACIVO_FIJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GASTOS_FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GASTOS_FR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GASTOS_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GASTOS_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RESPONSABLE_AUTO_FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RESPONSABLE_AUTO_FR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RESPONSABLE_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RESPONSABLE_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CONTROL_COMBUSTIBLESRow
            Get
                Return CType(Me.Rows(index),CONTROL_COMBUSTIBLESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CONTROL_COMBUSTIBLESRowChanging As CONTROL_COMBUSTIBLESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CONTROL_COMBUSTIBLESRowChanged As CONTROL_COMBUSTIBLESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CONTROL_COMBUSTIBLESRowDeleting As CONTROL_COMBUSTIBLESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CONTROL_COMBUSTIBLESRowDeleted As CONTROL_COMBUSTIBLESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCONTROL_COMBUSTIBLESRow(ByVal row As CONTROL_COMBUSTIBLESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCONTROL_COMBUSTIBLESRow( _
                    ByVal ID_CONTROL_C As Long,  _
                    ByVal FECHA_CONTROL_C As Date,  _
                    ByVal VALOR_CONTROL_C As Decimal,  _
                    ByVal DESTINO_CONTROL_C As String,  _
                    ByVal TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal ESTADO_CONTROL_C As Integer,  _
                    ByVal MOTIVO_CONTROL_C As String,  _
                    ByVal ID_SOLICITUD_FR As Long,  _
                    ByVal parentSOLICITUD_CAJA_CHICARowBySOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES As SOLICITUD_CAJA_CHICARow,  _
                    ByVal parentVEHICULOSRowByVEHICULOS_CONTROL_COMBUSTIBLES As VEHICULOSRow,  _
                    ByVal ID_GASTOS_FR As Integer,  _
                    ByVal parentGASTOS_CAJA_CHICARowByGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES As GASTOS_CAJA_CHICARow,  _
                    ByVal ID_RESPONSABLE_AUTO_FR As Integer,  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal parentPERSONALRowByPERSONAL_CONTROL_COMBUSTIBLES As PERSONALRow,  _
                    ByVal parentRUBROSRowByRUBROS_CONTROL_COMBUSTIBLES As RUBROSRow,  _
                    ByVal parentSALIDA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO As SALIDA_VEHICULORow,  _
                    ByVal parentLLEGADA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO As LLEGADA_VEHICULORow) As CONTROL_COMBUSTIBLESRow
            Dim rowCONTROL_COMBUSTIBLESRow As CONTROL_COMBUSTIBLESRow = CType(Me.NewRow,CONTROL_COMBUSTIBLESRow)
            Dim columnValuesArray() As Object = New Object() {ID_CONTROL_C, FECHA_CONTROL_C, VALOR_CONTROL_C, DESTINO_CONTROL_C, TOTAL_KM_CONTROL_C, ESTADO_CONTROL_C, MOTIVO_CONTROL_C, ID_SOLICITUD_FR, Nothing, Nothing, ID_GASTOS_FR, Nothing, ID_RESPONSABLE_AUTO_FR, ID_RESPONSABLE_AUTO_CCH, Nothing, Nothing, Nothing, Nothing}
            If (Not (parentSOLICITUD_CAJA_CHICARowBySOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES) Is Nothing) Then
                columnValuesArray(8) = parentSOLICITUD_CAJA_CHICARowBySOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES(0)
            End If
            If (Not (parentVEHICULOSRowByVEHICULOS_CONTROL_COMBUSTIBLES) Is Nothing) Then
                columnValuesArray(9) = parentVEHICULOSRowByVEHICULOS_CONTROL_COMBUSTIBLES(0)
            End If
            If (Not (parentGASTOS_CAJA_CHICARowByGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES) Is Nothing) Then
                columnValuesArray(11) = parentGASTOS_CAJA_CHICARowByGASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES(0)
            End If
            If (Not (parentPERSONALRowByPERSONAL_CONTROL_COMBUSTIBLES) Is Nothing) Then
                columnValuesArray(14) = parentPERSONALRowByPERSONAL_CONTROL_COMBUSTIBLES(0)
            End If
            If (Not (parentRUBROSRowByRUBROS_CONTROL_COMBUSTIBLES) Is Nothing) Then
                columnValuesArray(15) = parentRUBROSRowByRUBROS_CONTROL_COMBUSTIBLES(0)
            End If
            If (Not (parentSALIDA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO) Is Nothing) Then
                columnValuesArray(16) = parentSALIDA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO(0)
            End If
            If (Not (parentLLEGADA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO) Is Nothing) Then
                columnValuesArray(17) = parentLLEGADA_VEHICULORowByFK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO(0)
            End If
            rowCONTROL_COMBUSTIBLESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCONTROL_COMBUSTIBLESRow)
            Return rowCONTROL_COMBUSTIBLESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CONTROL_C(ByVal ID_CONTROL_C As Long) As CONTROL_COMBUSTIBLESRow
            Return CType(Me.Rows.Find(New Object() {ID_CONTROL_C}),CONTROL_COMBUSTIBLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CONTROL_COMBUSTIBLESDataTable = CType(MyBase.Clone,CONTROL_COMBUSTIBLESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CONTROL_COMBUSTIBLESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CONTROL_C = MyBase.Columns("ID_CONTROL_C")
            Me.columnFECHA_CONTROL_C = MyBase.Columns("FECHA_CONTROL_C")
            Me.columnVALOR_CONTROL_C = MyBase.Columns("VALOR_CONTROL_C")
            Me.columnDESTINO_CONTROL_C = MyBase.Columns("DESTINO_CONTROL_C")
            Me.columnTOTAL_KM_CONTROL_C = MyBase.Columns("TOTAL_KM_CONTROL_C")
            Me.columnESTADO_CONTROL_C = MyBase.Columns("ESTADO_CONTROL_C")
            Me.columnMOTIVO_CONTROL_C = MyBase.Columns("MOTIVO_CONTROL_C")
            Me.columnID_SOLICITUD_FR = MyBase.Columns("ID_SOLICITUD_FR")
            Me.columnID_SOLICITUD_CCH = MyBase.Columns("ID_SOLICITUD_CCH")
            Me.columnID_ACIVO_FIJO = MyBase.Columns("ID_ACIVO_FIJO")
            Me.columnID_GASTOS_FR = MyBase.Columns("ID_GASTOS_FR")
            Me.columnID_GASTOS_CCH = MyBase.Columns("ID_GASTOS_CCH")
            Me.columnID_RESPONSABLE_AUTO_FR = MyBase.Columns("ID_RESPONSABLE_AUTO_FR")
            Me.columnID_RESPONSABLE_AUTO_CCH = MyBase.Columns("ID_RESPONSABLE_AUTO_CCH")
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnID_RUBRO = MyBase.Columns("ID_RUBRO")
            Me.columnID_SALIDA_V = MyBase.Columns("ID_SALIDA_V")
            Me.columnID_LLEGADA_V = MyBase.Columns("ID_LLEGADA_V")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CONTROL_C = New Global.System.Data.DataColumn("ID_CONTROL_C", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CONTROL_C)
            Me.columnFECHA_CONTROL_C = New Global.System.Data.DataColumn("FECHA_CONTROL_C", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_CONTROL_C)
            Me.columnVALOR_CONTROL_C = New Global.System.Data.DataColumn("VALOR_CONTROL_C", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_CONTROL_C)
            Me.columnDESTINO_CONTROL_C = New Global.System.Data.DataColumn("DESTINO_CONTROL_C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO_CONTROL_C)
            Me.columnTOTAL_KM_CONTROL_C = New Global.System.Data.DataColumn("TOTAL_KM_CONTROL_C", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_KM_CONTROL_C)
            Me.columnESTADO_CONTROL_C = New Global.System.Data.DataColumn("ESTADO_CONTROL_C", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CONTROL_C)
            Me.columnMOTIVO_CONTROL_C = New Global.System.Data.DataColumn("MOTIVO_CONTROL_C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVO_CONTROL_C)
            Me.columnID_SOLICITUD_FR = New Global.System.Data.DataColumn("ID_SOLICITUD_FR", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SOLICITUD_FR)
            Me.columnID_SOLICITUD_CCH = New Global.System.Data.DataColumn("ID_SOLICITUD_CCH", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SOLICITUD_CCH)
            Me.columnID_ACIVO_FIJO = New Global.System.Data.DataColumn("ID_ACIVO_FIJO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACIVO_FIJO)
            Me.columnID_GASTOS_FR = New Global.System.Data.DataColumn("ID_GASTOS_FR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GASTOS_FR)
            Me.columnID_GASTOS_CCH = New Global.System.Data.DataColumn("ID_GASTOS_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GASTOS_CCH)
            Me.columnID_RESPONSABLE_AUTO_FR = New Global.System.Data.DataColumn("ID_RESPONSABLE_AUTO_FR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RESPONSABLE_AUTO_FR)
            Me.columnID_RESPONSABLE_AUTO_CCH = New Global.System.Data.DataColumn("ID_RESPONSABLE_AUTO_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RESPONSABLE_AUTO_CCH)
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnID_RUBRO = New Global.System.Data.DataColumn("ID_RUBRO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RUBRO)
            Me.columnID_SALIDA_V = New Global.System.Data.DataColumn("ID_SALIDA_V", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SALIDA_V)
            Me.columnID_LLEGADA_V = New Global.System.Data.DataColumn("ID_LLEGADA_V", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LLEGADA_V)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CONTROL_C}, true))
            Me.columnID_CONTROL_C.AllowDBNull = false
            Me.columnID_CONTROL_C.Unique = true
            Me.columnFECHA_CONTROL_C.AllowDBNull = false
            Me.columnVALOR_CONTROL_C.AllowDBNull = false
            Me.columnDESTINO_CONTROL_C.AllowDBNull = false
            Me.columnDESTINO_CONTROL_C.MaxLength = 2147483647
            Me.columnTOTAL_KM_CONTROL_C.AllowDBNull = false
            Me.columnESTADO_CONTROL_C.AllowDBNull = false
            Me.columnMOTIVO_CONTROL_C.AllowDBNull = false
            Me.columnMOTIVO_CONTROL_C.MaxLength = 2147483647
            Me.columnID_ACIVO_FIJO.AllowDBNull = false
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnID_RUBRO.AllowDBNull = false
            Me.columnID_SALIDA_V.AllowDBNull = false
            Me.columnID_LLEGADA_V.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCONTROL_COMBUSTIBLESRow() As CONTROL_COMBUSTIBLESRow
            Return CType(Me.NewRow,CONTROL_COMBUSTIBLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CONTROL_COMBUSTIBLESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CONTROL_COMBUSTIBLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CONTROL_COMBUSTIBLESRowChangedEvent) Is Nothing) Then
                RaiseEvent CONTROL_COMBUSTIBLESRowChanged(Me, New CONTROL_COMBUSTIBLESRowChangeEvent(CType(e.Row,CONTROL_COMBUSTIBLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CONTROL_COMBUSTIBLESRowChangingEvent) Is Nothing) Then
                RaiseEvent CONTROL_COMBUSTIBLESRowChanging(Me, New CONTROL_COMBUSTIBLESRowChangeEvent(CType(e.Row,CONTROL_COMBUSTIBLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CONTROL_COMBUSTIBLESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CONTROL_COMBUSTIBLESRowDeleted(Me, New CONTROL_COMBUSTIBLESRowChangeEvent(CType(e.Row,CONTROL_COMBUSTIBLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CONTROL_COMBUSTIBLESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CONTROL_COMBUSTIBLESRowDeleting(Me, New CONTROL_COMBUSTIBLESRowChangeEvent(CType(e.Row,CONTROL_COMBUSTIBLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCONTROL_COMBUSTIBLESRow(ByVal row As CONTROL_COMBUSTIBLESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CONTROL_COMBUSTIBLESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LLEGADA_VEHICULODataTable
        Inherits Global.System.Data.TypedTableBase(Of LLEGADA_VEHICULORow)
        
        Private columnID_LLEGADA_V As Global.System.Data.DataColumn
        
        Private columnFECHA_LLEGADA_V As Global.System.Data.DataColumn
        
        Private columnHORA_LLEGADA_V As Global.System.Data.DataColumn
        
        Private columnKM_LLEGADA_V As Global.System.Data.DataColumn
        
        Private columnESTADO_LLEGADA_V As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LLEGADA_VEHICULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HORA_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORA_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KM_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKM_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_LLEGADA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_LLEGADA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LLEGADA_VEHICULORow
            Get
                Return CType(Me.Rows(index),LLEGADA_VEHICULORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event LLEGADA_VEHICULORowChanging As LLEGADA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event LLEGADA_VEHICULORowChanged As LLEGADA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event LLEGADA_VEHICULORowDeleting As LLEGADA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event LLEGADA_VEHICULORowDeleted As LLEGADA_VEHICULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddLLEGADA_VEHICULORow(ByVal row As LLEGADA_VEHICULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddLLEGADA_VEHICULORow(ByVal ID_LLEGADA_V As Long, ByVal FECHA_LLEGADA_V As Date, ByVal HORA_LLEGADA_V As String, ByVal KM_LLEGADA_V As Integer, ByVal ESTADO_LLEGADA_V As Integer) As LLEGADA_VEHICULORow
            Dim rowLLEGADA_VEHICULORow As LLEGADA_VEHICULORow = CType(Me.NewRow,LLEGADA_VEHICULORow)
            Dim columnValuesArray() As Object = New Object() {ID_LLEGADA_V, FECHA_LLEGADA_V, HORA_LLEGADA_V, KM_LLEGADA_V, ESTADO_LLEGADA_V}
            rowLLEGADA_VEHICULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLLEGADA_VEHICULORow)
            Return rowLLEGADA_VEHICULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_LLEGADA_V(ByVal ID_LLEGADA_V As Long) As LLEGADA_VEHICULORow
            Return CType(Me.Rows.Find(New Object() {ID_LLEGADA_V}),LLEGADA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LLEGADA_VEHICULODataTable = CType(MyBase.Clone,LLEGADA_VEHICULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LLEGADA_VEHICULODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_LLEGADA_V = MyBase.Columns("ID_LLEGADA_V")
            Me.columnFECHA_LLEGADA_V = MyBase.Columns("FECHA_LLEGADA_V")
            Me.columnHORA_LLEGADA_V = MyBase.Columns("HORA_LLEGADA_V")
            Me.columnKM_LLEGADA_V = MyBase.Columns("KM_LLEGADA_V")
            Me.columnESTADO_LLEGADA_V = MyBase.Columns("ESTADO_LLEGADA_V")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_LLEGADA_V = New Global.System.Data.DataColumn("ID_LLEGADA_V", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LLEGADA_V)
            Me.columnFECHA_LLEGADA_V = New Global.System.Data.DataColumn("FECHA_LLEGADA_V", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_LLEGADA_V)
            Me.columnHORA_LLEGADA_V = New Global.System.Data.DataColumn("HORA_LLEGADA_V", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORA_LLEGADA_V)
            Me.columnKM_LLEGADA_V = New Global.System.Data.DataColumn("KM_LLEGADA_V", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKM_LLEGADA_V)
            Me.columnESTADO_LLEGADA_V = New Global.System.Data.DataColumn("ESTADO_LLEGADA_V", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_LLEGADA_V)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_LLEGADA_V}, true))
            Me.columnID_LLEGADA_V.AllowDBNull = false
            Me.columnID_LLEGADA_V.Unique = true
            Me.columnFECHA_LLEGADA_V.AllowDBNull = false
            Me.columnHORA_LLEGADA_V.AllowDBNull = false
            Me.columnHORA_LLEGADA_V.MaxLength = 2147483647
            Me.columnKM_LLEGADA_V.AllowDBNull = false
            Me.columnESTADO_LLEGADA_V.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewLLEGADA_VEHICULORow() As LLEGADA_VEHICULORow
            Return CType(Me.NewRow,LLEGADA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LLEGADA_VEHICULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LLEGADA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LLEGADA_VEHICULORowChangedEvent) Is Nothing) Then
                RaiseEvent LLEGADA_VEHICULORowChanged(Me, New LLEGADA_VEHICULORowChangeEvent(CType(e.Row,LLEGADA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LLEGADA_VEHICULORowChangingEvent) Is Nothing) Then
                RaiseEvent LLEGADA_VEHICULORowChanging(Me, New LLEGADA_VEHICULORowChangeEvent(CType(e.Row,LLEGADA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LLEGADA_VEHICULORowDeletedEvent) Is Nothing) Then
                RaiseEvent LLEGADA_VEHICULORowDeleted(Me, New LLEGADA_VEHICULORowChangeEvent(CType(e.Row,LLEGADA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LLEGADA_VEHICULORowDeletingEvent) Is Nothing) Then
                RaiseEvent LLEGADA_VEHICULORowDeleting(Me, New LLEGADA_VEHICULORowChangeEvent(CType(e.Row,LLEGADA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveLLEGADA_VEHICULORow(ByVal row As LLEGADA_VEHICULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LLEGADA_VEHICULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SALIDA_VEHICULODataTable
        Inherits Global.System.Data.TypedTableBase(Of SALIDA_VEHICULORow)
        
        Private columnID_SALIDA_V As Global.System.Data.DataColumn
        
        Private columnFECHA_SALIDA_V As Global.System.Data.DataColumn
        
        Private columnHORA_SALIDA_V As Global.System.Data.DataColumn
        
        Private columnKM_SALIDA_V As Global.System.Data.DataColumn
        
        Private columnESTADO_SALIDA_V As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SALIDA_VEHICULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HORA_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORA_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KM_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKM_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_SALIDA_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SALIDA_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SALIDA_VEHICULORow
            Get
                Return CType(Me.Rows(index),SALIDA_VEHICULORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SALIDA_VEHICULORowChanging As SALIDA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SALIDA_VEHICULORowChanged As SALIDA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SALIDA_VEHICULORowDeleting As SALIDA_VEHICULORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SALIDA_VEHICULORowDeleted As SALIDA_VEHICULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSALIDA_VEHICULORow(ByVal row As SALIDA_VEHICULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSALIDA_VEHICULORow(ByVal ID_SALIDA_V As Long, ByVal FECHA_SALIDA_V As Date, ByVal HORA_SALIDA_V As String, ByVal KM_SALIDA_V As Integer, ByVal ESTADO_SALIDA_V As Integer) As SALIDA_VEHICULORow
            Dim rowSALIDA_VEHICULORow As SALIDA_VEHICULORow = CType(Me.NewRow,SALIDA_VEHICULORow)
            Dim columnValuesArray() As Object = New Object() {ID_SALIDA_V, FECHA_SALIDA_V, HORA_SALIDA_V, KM_SALIDA_V, ESTADO_SALIDA_V}
            rowSALIDA_VEHICULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSALIDA_VEHICULORow)
            Return rowSALIDA_VEHICULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_SALIDA_V(ByVal ID_SALIDA_V As Long) As SALIDA_VEHICULORow
            Return CType(Me.Rows.Find(New Object() {ID_SALIDA_V}),SALIDA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SALIDA_VEHICULODataTable = CType(MyBase.Clone,SALIDA_VEHICULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SALIDA_VEHICULODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_SALIDA_V = MyBase.Columns("ID_SALIDA_V")
            Me.columnFECHA_SALIDA_V = MyBase.Columns("FECHA_SALIDA_V")
            Me.columnHORA_SALIDA_V = MyBase.Columns("HORA_SALIDA_V")
            Me.columnKM_SALIDA_V = MyBase.Columns("KM_SALIDA_V")
            Me.columnESTADO_SALIDA_V = MyBase.Columns("ESTADO_SALIDA_V")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_SALIDA_V = New Global.System.Data.DataColumn("ID_SALIDA_V", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SALIDA_V)
            Me.columnFECHA_SALIDA_V = New Global.System.Data.DataColumn("FECHA_SALIDA_V", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SALIDA_V)
            Me.columnHORA_SALIDA_V = New Global.System.Data.DataColumn("HORA_SALIDA_V", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORA_SALIDA_V)
            Me.columnKM_SALIDA_V = New Global.System.Data.DataColumn("KM_SALIDA_V", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKM_SALIDA_V)
            Me.columnESTADO_SALIDA_V = New Global.System.Data.DataColumn("ESTADO_SALIDA_V", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SALIDA_V)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_SALIDA_V}, true))
            Me.columnID_SALIDA_V.AllowDBNull = false
            Me.columnID_SALIDA_V.Unique = true
            Me.columnFECHA_SALIDA_V.AllowDBNull = false
            Me.columnHORA_SALIDA_V.AllowDBNull = false
            Me.columnHORA_SALIDA_V.MaxLength = 2147483647
            Me.columnKM_SALIDA_V.AllowDBNull = false
            Me.columnESTADO_SALIDA_V.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSALIDA_VEHICULORow() As SALIDA_VEHICULORow
            Return CType(Me.NewRow,SALIDA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SALIDA_VEHICULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SALIDA_VEHICULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SALIDA_VEHICULORowChangedEvent) Is Nothing) Then
                RaiseEvent SALIDA_VEHICULORowChanged(Me, New SALIDA_VEHICULORowChangeEvent(CType(e.Row,SALIDA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SALIDA_VEHICULORowChangingEvent) Is Nothing) Then
                RaiseEvent SALIDA_VEHICULORowChanging(Me, New SALIDA_VEHICULORowChangeEvent(CType(e.Row,SALIDA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SALIDA_VEHICULORowDeletedEvent) Is Nothing) Then
                RaiseEvent SALIDA_VEHICULORowDeleted(Me, New SALIDA_VEHICULORowChangeEvent(CType(e.Row,SALIDA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SALIDA_VEHICULORowDeletingEvent) Is Nothing) Then
                RaiseEvent SALIDA_VEHICULORowDeleting(Me, New SALIDA_VEHICULORowChangeEvent(CType(e.Row,SALIDA_VEHICULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSALIDA_VEHICULORow(ByVal row As SALIDA_VEHICULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SALIDA_VEHICULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VEHICULOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of VEHICULOSRow)
        
        Private columnID_ACTIVO_FIJO As Global.System.Data.DataColumn
        
        Private columnMARCA As Global.System.Data.DataColumn
        
        Private columnMODELO As Global.System.Data.DataColumn
        
        Private columnSERIE As Global.System.Data.DataColumn
        
        Private columnCHASIS As Global.System.Data.DataColumn
        
        Private columnESTADO_ACTIVO As Global.System.Data.DataColumn
        
        Private columnPLACAS As Global.System.Data.DataColumn
        
        Private columnMOTOR As Global.System.Data.DataColumn
        
        Private columnCILINDRAJE As Global.System.Data.DataColumn
        
        Private columnCAPACIDAD As Global.System.Data.DataColumn
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnCOLOR As Global.System.Data.DataColumn
        
        Private columnANO_FABRICACION As Global.System.Data.DataColumn
        
        Private columnASEGURADORA As Global.System.Data.DataColumn
        
        Private columnSEGURO As Global.System.Data.DataColumn
        
        Private columnBROKER As Global.System.Data.DataColumn
        
        Private columnNRO_POLIZA As Global.System.Data.DataColumn
        
        Private columnCOSTO_PRIMA As Global.System.Data.DataColumn
        
        Private columnDISPOSITIVO_SEGURIDAD As Global.System.Data.DataColumn
        
        Private columnFECHA_INICIO_CONTRATO As Global.System.Data.DataColumn
        
        Private columnFECHA_FINAL_CONTRATO As Global.System.Data.DataColumn
        
        Private columnFECHA_RENOVACION_CONTRATO As Global.System.Data.DataColumn
        
        Private columnFECHA_INICIO_DIS_SEG As Global.System.Data.DataColumn
        
        Private columnFECHA_FINAL_DIS_SEG As Global.System.Data.DataColumn
        
        Private columnFECHA_RENOVACION_DIS_SEG As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnSOAT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VEHICULOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ACTIVO_FIJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACTIVO_FIJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MODELOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODELO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CHASISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHASIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_ACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_ACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CILINDRAJEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCILINDRAJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CAPACIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPACIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ANO_FABRICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANO_FABRICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ASEGURADORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASEGURADORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SEGUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BROKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBROKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NRO_POLIZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_POLIZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COSTO_PRIMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO_PRIMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DISPOSITIVO_SEGURIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISPOSITIVO_SEGURIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_INICIO_CONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_INICIO_CONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_FINAL_CONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FINAL_CONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_RENOVACION_CONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_RENOVACION_CONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_INICIO_DIS_SEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_INICIO_DIS_SEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_FINAL_DIS_SEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FINAL_DIS_SEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_RENOVACION_DIS_SEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_RENOVACION_DIS_SEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SOATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VEHICULOSRow
            Get
                Return CType(Me.Rows(index),VEHICULOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VEHICULOSRowChanging As VEHICULOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VEHICULOSRowChanged As VEHICULOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VEHICULOSRowDeleting As VEHICULOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VEHICULOSRowDeleted As VEHICULOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVEHICULOSRow(ByVal row As VEHICULOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVEHICULOSRow( _
                    ByVal ID_ACTIVO_FIJO As Integer,  _
                    ByVal MARCA As String,  _
                    ByVal MODELO As String,  _
                    ByVal SERIE As String,  _
                    ByVal CHASIS As String,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal PLACAS As String,  _
                    ByVal MOTOR As String,  _
                    ByVal CILINDRAJE As String,  _
                    ByVal CAPACIDAD As String,  _
                    ByVal TIPO As String,  _
                    ByVal COLOR As String,  _
                    ByVal ANO_FABRICACION As Integer,  _
                    ByVal ASEGURADORA As String,  _
                    ByVal SEGURO As String,  _
                    ByVal BROKER As String,  _
                    ByVal NRO_POLIZA As String,  _
                    ByVal COSTO_PRIMA As Decimal,  _
                    ByVal DISPOSITIVO_SEGURIDAD As String,  _
                    ByVal FECHA_INICIO_CONTRATO As Date,  _
                    ByVal FECHA_FINAL_CONTRATO As Date,  _
                    ByVal FECHA_RENOVACION_CONTRATO As Date,  _
                    ByVal FECHA_INICIO_DIS_SEG As Date,  _
                    ByVal FECHA_FINAL_DIS_SEG As Date,  _
                    ByVal FECHA_RENOVACION_DIS_SEG As Date,  _
                    ByVal ESTADO As Integer,  _
                    ByVal SOAT As Date) As VEHICULOSRow
            Dim rowVEHICULOSRow As VEHICULOSRow = CType(Me.NewRow,VEHICULOSRow)
            Dim columnValuesArray() As Object = New Object() {ID_ACTIVO_FIJO, MARCA, MODELO, SERIE, CHASIS, ESTADO_ACTIVO, PLACAS, MOTOR, CILINDRAJE, CAPACIDAD, TIPO, COLOR, ANO_FABRICACION, ASEGURADORA, SEGURO, BROKER, NRO_POLIZA, COSTO_PRIMA, DISPOSITIVO_SEGURIDAD, FECHA_INICIO_CONTRATO, FECHA_FINAL_CONTRATO, FECHA_RENOVACION_CONTRATO, FECHA_INICIO_DIS_SEG, FECHA_FINAL_DIS_SEG, FECHA_RENOVACION_DIS_SEG, ESTADO, SOAT}
            rowVEHICULOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVEHICULOSRow)
            Return rowVEHICULOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VEHICULOSDataTable = CType(MyBase.Clone,VEHICULOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VEHICULOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_ACTIVO_FIJO = MyBase.Columns("ID_ACTIVO_FIJO")
            Me.columnMARCA = MyBase.Columns("MARCA")
            Me.columnMODELO = MyBase.Columns("MODELO")
            Me.columnSERIE = MyBase.Columns("SERIE")
            Me.columnCHASIS = MyBase.Columns("CHASIS")
            Me.columnESTADO_ACTIVO = MyBase.Columns("ESTADO_ACTIVO")
            Me.columnPLACAS = MyBase.Columns("PLACAS")
            Me.columnMOTOR = MyBase.Columns("MOTOR")
            Me.columnCILINDRAJE = MyBase.Columns("CILINDRAJE")
            Me.columnCAPACIDAD = MyBase.Columns("CAPACIDAD")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnCOLOR = MyBase.Columns("COLOR")
            Me.columnANO_FABRICACION = MyBase.Columns("ANO_FABRICACION")
            Me.columnASEGURADORA = MyBase.Columns("ASEGURADORA")
            Me.columnSEGURO = MyBase.Columns("SEGURO")
            Me.columnBROKER = MyBase.Columns("BROKER")
            Me.columnNRO_POLIZA = MyBase.Columns("NRO_POLIZA")
            Me.columnCOSTO_PRIMA = MyBase.Columns("COSTO_PRIMA")
            Me.columnDISPOSITIVO_SEGURIDAD = MyBase.Columns("DISPOSITIVO_SEGURIDAD")
            Me.columnFECHA_INICIO_CONTRATO = MyBase.Columns("FECHA_INICIO_CONTRATO")
            Me.columnFECHA_FINAL_CONTRATO = MyBase.Columns("FECHA_FINAL_CONTRATO")
            Me.columnFECHA_RENOVACION_CONTRATO = MyBase.Columns("FECHA_RENOVACION_CONTRATO")
            Me.columnFECHA_INICIO_DIS_SEG = MyBase.Columns("FECHA_INICIO_DIS_SEG")
            Me.columnFECHA_FINAL_DIS_SEG = MyBase.Columns("FECHA_FINAL_DIS_SEG")
            Me.columnFECHA_RENOVACION_DIS_SEG = MyBase.Columns("FECHA_RENOVACION_DIS_SEG")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnSOAT = MyBase.Columns("SOAT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_ACTIVO_FIJO = New Global.System.Data.DataColumn("ID_ACTIVO_FIJO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACTIVO_FIJO)
            Me.columnMARCA = New Global.System.Data.DataColumn("MARCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARCA)
            Me.columnMODELO = New Global.System.Data.DataColumn("MODELO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODELO)
            Me.columnSERIE = New Global.System.Data.DataColumn("SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIE)
            Me.columnCHASIS = New Global.System.Data.DataColumn("CHASIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHASIS)
            Me.columnESTADO_ACTIVO = New Global.System.Data.DataColumn("ESTADO_ACTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_ACTIVO)
            Me.columnPLACAS = New Global.System.Data.DataColumn("PLACAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACAS)
            Me.columnMOTOR = New Global.System.Data.DataColumn("MOTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTOR)
            Me.columnCILINDRAJE = New Global.System.Data.DataColumn("CILINDRAJE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCILINDRAJE)
            Me.columnCAPACIDAD = New Global.System.Data.DataColumn("CAPACIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPACIDAD)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnCOLOR = New Global.System.Data.DataColumn("COLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLOR)
            Me.columnANO_FABRICACION = New Global.System.Data.DataColumn("ANO_FABRICACION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANO_FABRICACION)
            Me.columnASEGURADORA = New Global.System.Data.DataColumn("ASEGURADORA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASEGURADORA)
            Me.columnSEGURO = New Global.System.Data.DataColumn("SEGURO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGURO)
            Me.columnBROKER = New Global.System.Data.DataColumn("BROKER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBROKER)
            Me.columnNRO_POLIZA = New Global.System.Data.DataColumn("NRO_POLIZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_POLIZA)
            Me.columnCOSTO_PRIMA = New Global.System.Data.DataColumn("COSTO_PRIMA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO_PRIMA)
            Me.columnDISPOSITIVO_SEGURIDAD = New Global.System.Data.DataColumn("DISPOSITIVO_SEGURIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISPOSITIVO_SEGURIDAD)
            Me.columnFECHA_INICIO_CONTRATO = New Global.System.Data.DataColumn("FECHA_INICIO_CONTRATO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_INICIO_CONTRATO)
            Me.columnFECHA_FINAL_CONTRATO = New Global.System.Data.DataColumn("FECHA_FINAL_CONTRATO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FINAL_CONTRATO)
            Me.columnFECHA_RENOVACION_CONTRATO = New Global.System.Data.DataColumn("FECHA_RENOVACION_CONTRATO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_RENOVACION_CONTRATO)
            Me.columnFECHA_INICIO_DIS_SEG = New Global.System.Data.DataColumn("FECHA_INICIO_DIS_SEG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_INICIO_DIS_SEG)
            Me.columnFECHA_FINAL_DIS_SEG = New Global.System.Data.DataColumn("FECHA_FINAL_DIS_SEG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FINAL_DIS_SEG)
            Me.columnFECHA_RENOVACION_DIS_SEG = New Global.System.Data.DataColumn("FECHA_RENOVACION_DIS_SEG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_RENOVACION_DIS_SEG)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnSOAT = New Global.System.Data.DataColumn("SOAT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOAT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("VEHICULOSKey1", New Global.System.Data.DataColumn() {Me.columnID_ACTIVO_FIJO}, false))
            Me.columnID_ACTIVO_FIJO.AllowDBNull = false
            Me.columnID_ACTIVO_FIJO.Unique = true
            Me.columnMARCA.AllowDBNull = false
            Me.columnMARCA.MaxLength = 2147483647
            Me.columnMODELO.AllowDBNull = false
            Me.columnMODELO.MaxLength = 2147483647
            Me.columnSERIE.AllowDBNull = false
            Me.columnSERIE.MaxLength = 2147483647
            Me.columnCHASIS.AllowDBNull = false
            Me.columnCHASIS.MaxLength = 2147483647
            Me.columnESTADO_ACTIVO.AllowDBNull = false
            Me.columnESTADO_ACTIVO.MaxLength = 2147483647
            Me.columnPLACAS.AllowDBNull = false
            Me.columnPLACAS.MaxLength = 2147483647
            Me.columnMOTOR.AllowDBNull = false
            Me.columnMOTOR.MaxLength = 2147483647
            Me.columnCILINDRAJE.AllowDBNull = false
            Me.columnCILINDRAJE.MaxLength = 2147483647
            Me.columnCAPACIDAD.AllowDBNull = false
            Me.columnCAPACIDAD.MaxLength = 2147483647
            Me.columnTIPO.AllowDBNull = false
            Me.columnTIPO.MaxLength = 2147483647
            Me.columnCOLOR.AllowDBNull = false
            Me.columnCOLOR.MaxLength = 2147483647
            Me.columnANO_FABRICACION.AllowDBNull = false
            Me.columnASEGURADORA.AllowDBNull = false
            Me.columnASEGURADORA.MaxLength = 2147483647
            Me.columnSEGURO.AllowDBNull = false
            Me.columnSEGURO.MaxLength = 2147483647
            Me.columnBROKER.AllowDBNull = false
            Me.columnBROKER.MaxLength = 2147483647
            Me.columnNRO_POLIZA.AllowDBNull = false
            Me.columnNRO_POLIZA.MaxLength = 2147483647
            Me.columnCOSTO_PRIMA.AllowDBNull = false
            Me.columnDISPOSITIVO_SEGURIDAD.AllowDBNull = false
            Me.columnDISPOSITIVO_SEGURIDAD.MaxLength = 2147483647
            Me.columnFECHA_INICIO_CONTRATO.AllowDBNull = false
            Me.columnFECHA_FINAL_CONTRATO.AllowDBNull = false
            Me.columnFECHA_RENOVACION_CONTRATO.AllowDBNull = false
            Me.columnFECHA_INICIO_DIS_SEG.AllowDBNull = false
            Me.columnFECHA_FINAL_DIS_SEG.AllowDBNull = false
            Me.columnFECHA_RENOVACION_DIS_SEG.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnSOAT.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVEHICULOSRow() As VEHICULOSRow
            Return CType(Me.NewRow,VEHICULOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VEHICULOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VEHICULOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VEHICULOSRowChangedEvent) Is Nothing) Then
                RaiseEvent VEHICULOSRowChanged(Me, New VEHICULOSRowChangeEvent(CType(e.Row,VEHICULOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VEHICULOSRowChangingEvent) Is Nothing) Then
                RaiseEvent VEHICULOSRowChanging(Me, New VEHICULOSRowChangeEvent(CType(e.Row,VEHICULOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VEHICULOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent VEHICULOSRowDeleted(Me, New VEHICULOSRowChangeEvent(CType(e.Row,VEHICULOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VEHICULOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent VEHICULOSRowDeleting(Me, New VEHICULOSRowChangeEvent(CType(e.Row,VEHICULOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVEHICULOSRow(ByVal row As VEHICULOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VEHICULOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ACTIVO_FIJO_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of ACTIVO_FIJO_GENERALRow)
        
        Private columnID_ACTIVO_FIJO As Global.System.Data.DataColumn
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnID_EMPRESA As Global.System.Data.DataColumn
        
        Private columnID_SUCURSAL As Global.System.Data.DataColumn
        
        Private columnID_GERENCIAS As Global.System.Data.DataColumn
        
        Private columnID_AREA As Global.System.Data.DataColumn
        
        Private columnCARPETA As Global.System.Data.DataColumn
        
        Private columnCONTRATO As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_ACTIVO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PROVEDOR As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CUSTODIO As Global.System.Data.DataColumn
        
        Private columnRESPONSABLE As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnCODIGO_ARANCEL As Global.System.Data.DataColumn
        
        Private columnNUM_ORDEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnNUM_FACTURA As Global.System.Data.DataColumn
        
        Private columnVALOR_FACTURA As Global.System.Data.DataColumn
        
        Private columnVALOR_ADICIONAL As Global.System.Data.DataColumn
        
        Private columnVALOR_RESIDUAL As Global.System.Data.DataColumn
        
        Private columnFECHA_ADQUISICION As Global.System.Data.DataColumn
        
        Private columnAÑOS_VIDA_UTIL As Global.System.Data.DataColumn
        
        Private columnCTA_ACTIVO As Global.System.Data.DataColumn
        
        Private columnCTA_GASTOS As Global.System.Data.DataColumn
        
        Private columnCTA_DEPRECIACION As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnESTADO_ACTIVO As Global.System.Data.DataColumn
        
        Private columnTIPO_ACTIVO As Global.System.Data.DataColumn
        
        Private columnMANTENIMIENTO As Global.System.Data.DataColumn
        
        Private columnFECHA_MANTENIMIENTO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ACTIVO_FIJO_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_ACTIVO_FIJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_ACTIVO_FIJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_EMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GERENCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GERENCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARPETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARPETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_ACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_ACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_PROVEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PROVEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_CUSTODIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CUSTODIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RESPONSABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESPONSABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_ARANCELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_ARANCEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUM_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_ORDEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUM_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_ADICIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_ADICIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_RESIDUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_RESIDUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_ADQUISICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ADQUISICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AÑOS_VIDA_UTILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAÑOS_VIDA_UTIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CTA_ACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_ACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CTA_GASTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_GASTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CTA_DEPRECIACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_DEPRECIACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_ACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_ACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_ACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_ACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MANTENIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANTENIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_MANTENIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MANTENIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ACTIVO_FIJO_GENERALRow
            Get
                Return CType(Me.Rows(index),ACTIVO_FIJO_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ACTIVO_FIJO_GENERALRowChanging As ACTIVO_FIJO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ACTIVO_FIJO_GENERALRowChanged As ACTIVO_FIJO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ACTIVO_FIJO_GENERALRowDeleting As ACTIVO_FIJO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ACTIVO_FIJO_GENERALRowDeleted As ACTIVO_FIJO_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddACTIVO_FIJO_GENERALRow(ByVal row As ACTIVO_FIJO_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddACTIVO_FIJO_GENERALRow( _
                    ByVal ID_ACTIVO_FIJO As Integer,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_EMPRESA As Integer,  _
                    ByVal ID_SUCURSAL As Integer,  _
                    ByVal ID_GERENCIAS As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal CARPETA As String,  _
                    ByVal CONTRATO As String,  _
                    ByVal CODIGO As String,  _
                    ByVal NOMBRE_ACTIVO As String,  _
                    ByVal NOMBRE_PROVEDOR As String,  _
                    ByVal NOMBRE_CUSTODIO As String,  _
                    ByVal RESPONSABLE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal CODIGO_ARANCEL As String,  _
                    ByVal NUM_ORDEN_COMPRA As String,  _
                    ByVal NUM_FACTURA As String,  _
                    ByVal VALOR_FACTURA As Decimal,  _
                    ByVal VALOR_ADICIONAL As Decimal,  _
                    ByVal VALOR_RESIDUAL As Decimal,  _
                    ByVal FECHA_ADQUISICION As Date,  _
                    ByVal AÑOS_VIDA_UTIL As Integer,  _
                    ByVal CTA_ACTIVO As String,  _
                    ByVal CTA_GASTOS As String,  _
                    ByVal CTA_DEPRECIACION As String,  _
                    ByVal ESTADO As Integer,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal TIPO_ACTIVO As String,  _
                    ByVal MANTENIMIENTO As String,  _
                    ByVal FECHA_MANTENIMIENTO As Date) As ACTIVO_FIJO_GENERALRow
            Dim rowACTIVO_FIJO_GENERALRow As ACTIVO_FIJO_GENERALRow = CType(Me.NewRow,ACTIVO_FIJO_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {ID_ACTIVO_FIJO, ID_PERSONAL, ID_EMPRESA, ID_SUCURSAL, ID_GERENCIAS, ID_AREA, CARPETA, CONTRATO, CODIGO, NOMBRE_ACTIVO, NOMBRE_PROVEDOR, NOMBRE_CUSTODIO, RESPONSABLE, FECHA, CODIGO_ARANCEL, NUM_ORDEN_COMPRA, NUM_FACTURA, VALOR_FACTURA, VALOR_ADICIONAL, VALOR_RESIDUAL, FECHA_ADQUISICION, AÑOS_VIDA_UTIL, CTA_ACTIVO, CTA_GASTOS, CTA_DEPRECIACION, ESTADO, ESTADO_ACTIVO, TIPO_ACTIVO, MANTENIMIENTO, FECHA_MANTENIMIENTO}
            rowACTIVO_FIJO_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowACTIVO_FIJO_GENERALRow)
            Return rowACTIVO_FIJO_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_ACTIVO_FIJO(ByVal ID_ACTIVO_FIJO As Integer) As ACTIVO_FIJO_GENERALRow
            Return CType(Me.Rows.Find(New Object() {ID_ACTIVO_FIJO}),ACTIVO_FIJO_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ACTIVO_FIJO_GENERALDataTable = CType(MyBase.Clone,ACTIVO_FIJO_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ACTIVO_FIJO_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_ACTIVO_FIJO = MyBase.Columns("ID_ACTIVO_FIJO")
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnID_EMPRESA = MyBase.Columns("ID_EMPRESA")
            Me.columnID_SUCURSAL = MyBase.Columns("ID_SUCURSAL")
            Me.columnID_GERENCIAS = MyBase.Columns("ID_GERENCIAS")
            Me.columnID_AREA = MyBase.Columns("ID_AREA")
            Me.columnCARPETA = MyBase.Columns("CARPETA")
            Me.columnCONTRATO = MyBase.Columns("CONTRATO")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnNOMBRE_ACTIVO = MyBase.Columns("NOMBRE_ACTIVO")
            Me.columnNOMBRE_PROVEDOR = MyBase.Columns("NOMBRE_PROVEDOR")
            Me.columnNOMBRE_CUSTODIO = MyBase.Columns("NOMBRE_CUSTODIO")
            Me.columnRESPONSABLE = MyBase.Columns("RESPONSABLE")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnCODIGO_ARANCEL = MyBase.Columns("CODIGO_ARANCEL")
            Me.columnNUM_ORDEN_COMPRA = MyBase.Columns("NUM_ORDEN_COMPRA")
            Me.columnNUM_FACTURA = MyBase.Columns("NUM_FACTURA")
            Me.columnVALOR_FACTURA = MyBase.Columns("VALOR_FACTURA")
            Me.columnVALOR_ADICIONAL = MyBase.Columns("VALOR_ADICIONAL")
            Me.columnVALOR_RESIDUAL = MyBase.Columns("VALOR_RESIDUAL")
            Me.columnFECHA_ADQUISICION = MyBase.Columns("FECHA_ADQUISICION")
            Me.columnAÑOS_VIDA_UTIL = MyBase.Columns("AÑOS_VIDA_UTIL")
            Me.columnCTA_ACTIVO = MyBase.Columns("CTA_ACTIVO")
            Me.columnCTA_GASTOS = MyBase.Columns("CTA_GASTOS")
            Me.columnCTA_DEPRECIACION = MyBase.Columns("CTA_DEPRECIACION")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnESTADO_ACTIVO = MyBase.Columns("ESTADO_ACTIVO")
            Me.columnTIPO_ACTIVO = MyBase.Columns("TIPO_ACTIVO")
            Me.columnMANTENIMIENTO = MyBase.Columns("MANTENIMIENTO")
            Me.columnFECHA_MANTENIMIENTO = MyBase.Columns("FECHA_MANTENIMIENTO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_ACTIVO_FIJO = New Global.System.Data.DataColumn("ID_ACTIVO_FIJO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_ACTIVO_FIJO)
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnID_EMPRESA = New Global.System.Data.DataColumn("ID_EMPRESA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_EMPRESA)
            Me.columnID_SUCURSAL = New Global.System.Data.DataColumn("ID_SUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SUCURSAL)
            Me.columnID_GERENCIAS = New Global.System.Data.DataColumn("ID_GERENCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GERENCIAS)
            Me.columnID_AREA = New Global.System.Data.DataColumn("ID_AREA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_AREA)
            Me.columnCARPETA = New Global.System.Data.DataColumn("CARPETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARPETA)
            Me.columnCONTRATO = New Global.System.Data.DataColumn("CONTRATO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRATO)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnNOMBRE_ACTIVO = New Global.System.Data.DataColumn("NOMBRE_ACTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_ACTIVO)
            Me.columnNOMBRE_PROVEDOR = New Global.System.Data.DataColumn("NOMBRE_PROVEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PROVEDOR)
            Me.columnNOMBRE_CUSTODIO = New Global.System.Data.DataColumn("NOMBRE_CUSTODIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CUSTODIO)
            Me.columnRESPONSABLE = New Global.System.Data.DataColumn("RESPONSABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESPONSABLE)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnCODIGO_ARANCEL = New Global.System.Data.DataColumn("CODIGO_ARANCEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_ARANCEL)
            Me.columnNUM_ORDEN_COMPRA = New Global.System.Data.DataColumn("NUM_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_ORDEN_COMPRA)
            Me.columnNUM_FACTURA = New Global.System.Data.DataColumn("NUM_FACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_FACTURA)
            Me.columnVALOR_FACTURA = New Global.System.Data.DataColumn("VALOR_FACTURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_FACTURA)
            Me.columnVALOR_ADICIONAL = New Global.System.Data.DataColumn("VALOR_ADICIONAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_ADICIONAL)
            Me.columnVALOR_RESIDUAL = New Global.System.Data.DataColumn("VALOR_RESIDUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_RESIDUAL)
            Me.columnFECHA_ADQUISICION = New Global.System.Data.DataColumn("FECHA_ADQUISICION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ADQUISICION)
            Me.columnAÑOS_VIDA_UTIL = New Global.System.Data.DataColumn("AÑOS_VIDA_UTIL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAÑOS_VIDA_UTIL)
            Me.columnCTA_ACTIVO = New Global.System.Data.DataColumn("CTA_ACTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_ACTIVO)
            Me.columnCTA_GASTOS = New Global.System.Data.DataColumn("CTA_GASTOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_GASTOS)
            Me.columnCTA_DEPRECIACION = New Global.System.Data.DataColumn("CTA_DEPRECIACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_DEPRECIACION)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnESTADO_ACTIVO = New Global.System.Data.DataColumn("ESTADO_ACTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_ACTIVO)
            Me.columnTIPO_ACTIVO = New Global.System.Data.DataColumn("TIPO_ACTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_ACTIVO)
            Me.columnMANTENIMIENTO = New Global.System.Data.DataColumn("MANTENIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANTENIMIENTO)
            Me.columnFECHA_MANTENIMIENTO = New Global.System.Data.DataColumn("FECHA_MANTENIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MANTENIMIENTO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_ACTIVO_FIJO}, true))
            Me.columnID_ACTIVO_FIJO.AllowDBNull = false
            Me.columnID_ACTIVO_FIJO.Unique = true
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnID_EMPRESA.AllowDBNull = false
            Me.columnID_SUCURSAL.AllowDBNull = false
            Me.columnID_GERENCIAS.AllowDBNull = false
            Me.columnID_AREA.AllowDBNull = false
            Me.columnCARPETA.AllowDBNull = false
            Me.columnCARPETA.MaxLength = 2147483647
            Me.columnCONTRATO.AllowDBNull = false
            Me.columnCONTRATO.MaxLength = 2147483647
            Me.columnCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 2147483647
            Me.columnNOMBRE_ACTIVO.AllowDBNull = false
            Me.columnNOMBRE_ACTIVO.MaxLength = 2147483647
            Me.columnNOMBRE_PROVEDOR.AllowDBNull = false
            Me.columnNOMBRE_PROVEDOR.MaxLength = 2147483647
            Me.columnNOMBRE_CUSTODIO.AllowDBNull = false
            Me.columnNOMBRE_CUSTODIO.MaxLength = 2147483647
            Me.columnRESPONSABLE.AllowDBNull = false
            Me.columnRESPONSABLE.MaxLength = 2147483647
            Me.columnFECHA.AllowDBNull = false
            Me.columnCODIGO_ARANCEL.AllowDBNull = false
            Me.columnCODIGO_ARANCEL.MaxLength = 2147483647
            Me.columnNUM_ORDEN_COMPRA.AllowDBNull = false
            Me.columnNUM_ORDEN_COMPRA.MaxLength = 2147483647
            Me.columnNUM_FACTURA.AllowDBNull = false
            Me.columnNUM_FACTURA.MaxLength = 2147483647
            Me.columnVALOR_FACTURA.AllowDBNull = false
            Me.columnVALOR_ADICIONAL.AllowDBNull = false
            Me.columnVALOR_RESIDUAL.AllowDBNull = false
            Me.columnFECHA_ADQUISICION.AllowDBNull = false
            Me.columnAÑOS_VIDA_UTIL.AllowDBNull = false
            Me.columnCTA_ACTIVO.AllowDBNull = false
            Me.columnCTA_ACTIVO.MaxLength = 2147483647
            Me.columnCTA_GASTOS.AllowDBNull = false
            Me.columnCTA_GASTOS.MaxLength = 2147483647
            Me.columnCTA_DEPRECIACION.AllowDBNull = false
            Me.columnCTA_DEPRECIACION.MaxLength = 2147483647
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO_ACTIVO.AllowDBNull = false
            Me.columnESTADO_ACTIVO.MaxLength = 2147483647
            Me.columnTIPO_ACTIVO.AllowDBNull = false
            Me.columnTIPO_ACTIVO.MaxLength = 2147483647
            Me.columnMANTENIMIENTO.AllowDBNull = false
            Me.columnMANTENIMIENTO.MaxLength = 2147483647
            Me.columnFECHA_MANTENIMIENTO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewACTIVO_FIJO_GENERALRow() As ACTIVO_FIJO_GENERALRow
            Return CType(Me.NewRow,ACTIVO_FIJO_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ACTIVO_FIJO_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ACTIVO_FIJO_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ACTIVO_FIJO_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent ACTIVO_FIJO_GENERALRowChanged(Me, New ACTIVO_FIJO_GENERALRowChangeEvent(CType(e.Row,ACTIVO_FIJO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ACTIVO_FIJO_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent ACTIVO_FIJO_GENERALRowChanging(Me, New ACTIVO_FIJO_GENERALRowChangeEvent(CType(e.Row,ACTIVO_FIJO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ACTIVO_FIJO_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent ACTIVO_FIJO_GENERALRowDeleted(Me, New ACTIVO_FIJO_GENERALRowChangeEvent(CType(e.Row,ACTIVO_FIJO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ACTIVO_FIJO_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent ACTIVO_FIJO_GENERALRowDeleting(Me, New ACTIVO_FIJO_GENERALRowChangeEvent(CType(e.Row,ACTIVO_FIJO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveACTIVO_FIJO_GENERALRow(ByVal row As ACTIVO_FIJO_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ACTIVO_FIJO_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RUBROSDataTable
        Inherits Global.System.Data.TypedTableBase(Of RUBROSRow)
        
        Private columnID_RUBRO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_RUBRO As Global.System.Data.DataColumn
        
        Private columnVALOR_RUBRO As Global.System.Data.DataColumn
        
        Private columnESTADO_RUBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RUBROS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_RUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_RUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_RUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_RUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_RUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_RUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RUBROSRow
            Get
                Return CType(Me.Rows(index),RUBROSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUBROSRowChanging As RUBROSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUBROSRowChanged As RUBROSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUBROSRowDeleting As RUBROSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUBROSRowDeleted As RUBROSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRUBROSRow(ByVal row As RUBROSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRUBROSRow(ByVal ID_RUBRO As Integer, ByVal NOMBRE_RUBRO As String, ByVal VALOR_RUBRO As Decimal, ByVal ESTADO_RUBRO As Integer) As RUBROSRow
            Dim rowRUBROSRow As RUBROSRow = CType(Me.NewRow,RUBROSRow)
            Dim columnValuesArray() As Object = New Object() {ID_RUBRO, NOMBRE_RUBRO, VALOR_RUBRO, ESTADO_RUBRO}
            rowRUBROSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRUBROSRow)
            Return rowRUBROSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_RUBRO(ByVal ID_RUBRO As Integer) As RUBROSRow
            Return CType(Me.Rows.Find(New Object() {ID_RUBRO}),RUBROSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RUBROSDataTable = CType(MyBase.Clone,RUBROSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RUBROSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_RUBRO = MyBase.Columns("ID_RUBRO")
            Me.columnNOMBRE_RUBRO = MyBase.Columns("NOMBRE_RUBRO")
            Me.columnVALOR_RUBRO = MyBase.Columns("VALOR_RUBRO")
            Me.columnESTADO_RUBRO = MyBase.Columns("ESTADO_RUBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_RUBRO = New Global.System.Data.DataColumn("ID_RUBRO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RUBRO)
            Me.columnNOMBRE_RUBRO = New Global.System.Data.DataColumn("NOMBRE_RUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_RUBRO)
            Me.columnVALOR_RUBRO = New Global.System.Data.DataColumn("VALOR_RUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_RUBRO)
            Me.columnESTADO_RUBRO = New Global.System.Data.DataColumn("ESTADO_RUBRO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_RUBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_RUBRO}, true))
            Me.columnID_RUBRO.AllowDBNull = false
            Me.columnID_RUBRO.Unique = true
            Me.columnNOMBRE_RUBRO.AllowDBNull = false
            Me.columnNOMBRE_RUBRO.MaxLength = 2147483647
            Me.columnVALOR_RUBRO.AllowDBNull = false
            Me.columnESTADO_RUBRO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRUBROSRow() As RUBROSRow
            Return CType(Me.NewRow,RUBROSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RUBROSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RUBROSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RUBROSRowChangedEvent) Is Nothing) Then
                RaiseEvent RUBROSRowChanged(Me, New RUBROSRowChangeEvent(CType(e.Row,RUBROSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RUBROSRowChangingEvent) Is Nothing) Then
                RaiseEvent RUBROSRowChanging(Me, New RUBROSRowChangeEvent(CType(e.Row,RUBROSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RUBROSRowDeletedEvent) Is Nothing) Then
                RaiseEvent RUBROSRowDeleted(Me, New RUBROSRowChangeEvent(CType(e.Row,RUBROSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RUBROSRowDeletingEvent) Is Nothing) Then
                RaiseEvent RUBROSRowDeleting(Me, New RUBROSRowChangeEvent(CType(e.Row,RUBROSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRUBROSRow(ByVal row As RUBROSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RUBROSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PERSONALDataTable
        Inherits Global.System.Data.TypedTableBase(Of PERSONALRow)
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnCEDULA As Global.System.Data.DataColumn
        
        Private columnNOMBRES As Global.System.Data.DataColumn
        
        Private columnAPELLIDOS As Global.System.Data.DataColumn
        
        Private columnPROVINCIA As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnFECHA_NACIMIENTO As Global.System.Data.DataColumn
        
        Private columnSEXO As Global.System.Data.DataColumn
        
        Private columnCIUDAD As Global.System.Data.DataColumn
        
        Private columnSUELDO As Global.System.Data.DataColumn
        
        Private columnLIBRETA_MILITAR As Global.System.Data.DataColumn
        
        Private columnTIPO_SANGRE As Global.System.Data.DataColumn
        
        Private columnPASAPORTE As Global.System.Data.DataColumn
        
        Private columnPESO As Global.System.Data.DataColumn
        
        Private columnEDAD As Global.System.Data.DataColumn
        
        Private columnPRUEBA_ANTIDROGA As Global.System.Data.DataColumn
        
        Private columnFECHA_ENTRADA As Global.System.Data.DataColumn
        
        Private columnFECHA_SALIDA As Global.System.Data.DataColumn
        
        Private columnESTADO_PERSONAL As Global.System.Data.DataColumn
        
        Private columnID_AREA As Global.System.Data.DataColumn
        
        Private columnID_CARGO_OCUPACIONAL As Global.System.Data.DataColumn
        
        Private columnUBICACION As Global.System.Data.DataColumn
        
        Private columnINSTRUCCION As Global.System.Data.DataColumn
        
        Private columnESTADO_CIVIL As Global.System.Data.DataColumn
        
        Private columnMOVIL As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_HIJOS As Global.System.Data.DataColumn
        
        Private columnHISTORIA_CLINICA As Global.System.Data.DataColumn
        
        Private columnPARROQUIA As Global.System.Data.DataColumn
        
        Private columnESTATURA As Global.System.Data.DataColumn
        
        Private columnDISCAPACIDAD As Global.System.Data.DataColumn
        
        Private columnEXAMEN_PSICOLOGICO As Global.System.Data.DataColumn
        
        Private columnLUGAR_EXAMEN_PSICOLOGICO As Global.System.Data.DataColumn
        
        Private columnCARNET_CONADIS As Global.System.Data.DataColumn
        
        Private columnDATOS_HIJOS As Global.System.Data.DataColumn
        
        Private columnDATOS_ESPOSA As Global.System.Data.DataColumn
        
        Private columnCASA As Global.System.Data.DataColumn
        
        Private columnARRIENDO As Global.System.Data.DataColumn
        
        Private columnDEUDOR_GARANTE As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_DEUDA As Global.System.Data.DataColumn
        
        Private columnA_QUIEN_ADEUDA As Global.System.Data.DataColumn
        
        Private columnTRABAJO_ATERIORMENTE As Global.System.Data.DataColumn
        
        Private columnANTERIOR_TRABAJO As Global.System.Data.DataColumn
        
        Private columnCARGO_ANTERIOR_TRABAJO As Global.System.Data.DataColumn
        
        Private columnMOTIVO_SALIDA_TRABAJO As Global.System.Data.DataColumn
        
        Private columnENTRADA_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnSALIDA_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnNOMBRES_PATRONO_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnTELEFONO_PATRONO_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnRECOMENDACIONES As Global.System.Data.DataColumn
        
        Private columnDATOS_FAMILIARES As Global.System.Data.DataColumn
        
        Private columnDATOS_EMERGENCIA As Global.System.Data.DataColumn
        
        Private columnFOTO As Global.System.Data.DataColumn
        
        Private columnPERFIL As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnCURSO_VIGILANTE As Global.System.Data.DataColumn
        
        Private columnEMISOR_CURSO_VIGILANTE As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PERSONAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property APELLIDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_NACIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_NACIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUELDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUELDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LIBRETA_MILITARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBRETA_MILITAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_SANGREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SANGRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PASAPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASAPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRUEBA_ANTIDROGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRUEBA_ANTIDROGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_ENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CARGO_OCUPACIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CARGO_OCUPACIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UBICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUBICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INSTRUCCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTRUCCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CIVILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CIVIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOVILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_HIJOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_HIJOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HISTORIA_CLINICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHISTORIA_CLINICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PARROQUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARROQUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DISCAPACIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCAPACIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXAMEN_PSICOLOGICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXAMEN_PSICOLOGICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LUGAR_EXAMEN_PSICOLOGICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLUGAR_EXAMEN_PSICOLOGICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARNET_CONADISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARNET_CONADIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_HIJOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_HIJOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_ESPOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_ESPOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ARRIENDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARRIENDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DEUDOR_GARANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEUDOR_GARANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_DEUDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_DEUDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property A_QUIEN_ADEUDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_QUIEN_ADEUDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRABAJO_ATERIORMENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRABAJO_ATERIORMENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ANTERIOR_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANTERIOR_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARGO_ANTERIOR_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO_ANTERIOR_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOTIVO_SALIDA_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVO_SALIDA_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ENTRADA_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRADA_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SALIDA_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALIDA_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRES_PATRONO_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES_PATRONO_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_PATRONO_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_PATRONO_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RECOMENDACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECOMENDACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_FAMILIARESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_FAMILIARES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_EMERGENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_EMERGENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FOTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURSO_VIGILANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURSO_VIGILANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMISOR_CURSO_VIGILANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISOR_CURSO_VIGILANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PERSONALRow
            Get
                Return CType(Me.Rows(index),PERSONALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowChanging As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowChanged As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowDeleting As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowDeleted As PERSONALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPERSONALRow(ByVal row As PERSONALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPERSONALRow( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Date,  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Date,  _
                    ByVal FECHA_SALIDA As Date,  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Integer,  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Decimal,  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Decimal,  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Date,  _
                    ByVal SALIDA_ANTERIOR As Date,  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte,  _
                    ByVal EMAIL As String,  _
                    ByVal CURSO_VIGILANTE As String,  _
                    ByVal EMISOR_CURSO_VIGILANTE As String,  _
                    ByVal OBSERVACION As String) As PERSONALRow
            Dim rowPERSONALRow As PERSONALRow = CType(Me.NewRow,PERSONALRow)
            Dim columnValuesArray() As Object = New Object() {ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL, EMAIL, CURSO_VIGILANTE, EMISOR_CURSO_VIGILANTE, OBSERVACION}
            rowPERSONALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPERSONALRow)
            Return rowPERSONALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_PERSONAL(ByVal ID_PERSONAL As Integer) As PERSONALRow
            Return CType(Me.Rows.Find(New Object() {ID_PERSONAL}),PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PERSONALDataTable = CType(MyBase.Clone,PERSONALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PERSONALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnCEDULA = MyBase.Columns("CEDULA")
            Me.columnNOMBRES = MyBase.Columns("NOMBRES")
            Me.columnAPELLIDOS = MyBase.Columns("APELLIDOS")
            Me.columnPROVINCIA = MyBase.Columns("PROVINCIA")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnFECHA_NACIMIENTO = MyBase.Columns("FECHA_NACIMIENTO")
            Me.columnSEXO = MyBase.Columns("SEXO")
            Me.columnCIUDAD = MyBase.Columns("CIUDAD")
            Me.columnSUELDO = MyBase.Columns("SUELDO")
            Me.columnLIBRETA_MILITAR = MyBase.Columns("LIBRETA_MILITAR")
            Me.columnTIPO_SANGRE = MyBase.Columns("TIPO_SANGRE")
            Me.columnPASAPORTE = MyBase.Columns("PASAPORTE")
            Me.columnPESO = MyBase.Columns("PESO")
            Me.columnEDAD = MyBase.Columns("EDAD")
            Me.columnPRUEBA_ANTIDROGA = MyBase.Columns("PRUEBA_ANTIDROGA")
            Me.columnFECHA_ENTRADA = MyBase.Columns("FECHA_ENTRADA")
            Me.columnFECHA_SALIDA = MyBase.Columns("FECHA_SALIDA")
            Me.columnESTADO_PERSONAL = MyBase.Columns("ESTADO_PERSONAL")
            Me.columnID_AREA = MyBase.Columns("ID_AREA")
            Me.columnID_CARGO_OCUPACIONAL = MyBase.Columns("ID_CARGO_OCUPACIONAL")
            Me.columnUBICACION = MyBase.Columns("UBICACION")
            Me.columnINSTRUCCION = MyBase.Columns("INSTRUCCION")
            Me.columnESTADO_CIVIL = MyBase.Columns("ESTADO_CIVIL")
            Me.columnMOVIL = MyBase.Columns("MOVIL")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCANTIDAD_HIJOS = MyBase.Columns("CANTIDAD_HIJOS")
            Me.columnHISTORIA_CLINICA = MyBase.Columns("HISTORIA_CLINICA")
            Me.columnPARROQUIA = MyBase.Columns("PARROQUIA")
            Me.columnESTATURA = MyBase.Columns("ESTATURA")
            Me.columnDISCAPACIDAD = MyBase.Columns("DISCAPACIDAD")
            Me.columnEXAMEN_PSICOLOGICO = MyBase.Columns("EXAMEN_PSICOLOGICO")
            Me.columnLUGAR_EXAMEN_PSICOLOGICO = MyBase.Columns("LUGAR_EXAMEN_PSICOLOGICO")
            Me.columnCARNET_CONADIS = MyBase.Columns("CARNET_CONADIS")
            Me.columnDATOS_HIJOS = MyBase.Columns("DATOS_HIJOS")
            Me.columnDATOS_ESPOSA = MyBase.Columns("DATOS_ESPOSA")
            Me.columnCASA = MyBase.Columns("CASA")
            Me.columnARRIENDO = MyBase.Columns("ARRIENDO")
            Me.columnDEUDOR_GARANTE = MyBase.Columns("DEUDOR_GARANTE")
            Me.columnCANTIDAD_DEUDA = MyBase.Columns("CANTIDAD_DEUDA")
            Me.columnA_QUIEN_ADEUDA = MyBase.Columns("A_QUIEN_ADEUDA")
            Me.columnTRABAJO_ATERIORMENTE = MyBase.Columns("TRABAJO_ATERIORMENTE")
            Me.columnANTERIOR_TRABAJO = MyBase.Columns("ANTERIOR_TRABAJO")
            Me.columnCARGO_ANTERIOR_TRABAJO = MyBase.Columns("CARGO_ANTERIOR_TRABAJO")
            Me.columnMOTIVO_SALIDA_TRABAJO = MyBase.Columns("MOTIVO_SALIDA_TRABAJO")
            Me.columnENTRADA_ANTERIOR = MyBase.Columns("ENTRADA_ANTERIOR")
            Me.columnSALIDA_ANTERIOR = MyBase.Columns("SALIDA_ANTERIOR")
            Me.columnNOMBRES_PATRONO_ANTERIOR = MyBase.Columns("NOMBRES_PATRONO_ANTERIOR")
            Me.columnTELEFONO_PATRONO_ANTERIOR = MyBase.Columns("TELEFONO_PATRONO_ANTERIOR")
            Me.columnRECOMENDACIONES = MyBase.Columns("RECOMENDACIONES")
            Me.columnDATOS_FAMILIARES = MyBase.Columns("DATOS_FAMILIARES")
            Me.columnDATOS_EMERGENCIA = MyBase.Columns("DATOS_EMERGENCIA")
            Me.columnFOTO = MyBase.Columns("FOTO")
            Me.columnPERFIL = MyBase.Columns("PERFIL")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCURSO_VIGILANTE = MyBase.Columns("CURSO_VIGILANTE")
            Me.columnEMISOR_CURSO_VIGILANTE = MyBase.Columns("EMISOR_CURSO_VIGILANTE")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnCEDULA = New Global.System.Data.DataColumn("CEDULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA)
            Me.columnNOMBRES = New Global.System.Data.DataColumn("NOMBRES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES)
            Me.columnAPELLIDOS = New Global.System.Data.DataColumn("APELLIDOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDOS)
            Me.columnPROVINCIA = New Global.System.Data.DataColumn("PROVINCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCIA)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnFECHA_NACIMIENTO = New Global.System.Data.DataColumn("FECHA_NACIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_NACIMIENTO)
            Me.columnSEXO = New Global.System.Data.DataColumn("SEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEXO)
            Me.columnCIUDAD = New Global.System.Data.DataColumn("CIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIUDAD)
            Me.columnSUELDO = New Global.System.Data.DataColumn("SUELDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUELDO)
            Me.columnLIBRETA_MILITAR = New Global.System.Data.DataColumn("LIBRETA_MILITAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBRETA_MILITAR)
            Me.columnTIPO_SANGRE = New Global.System.Data.DataColumn("TIPO_SANGRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SANGRE)
            Me.columnPASAPORTE = New Global.System.Data.DataColumn("PASAPORTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASAPORTE)
            Me.columnPESO = New Global.System.Data.DataColumn("PESO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO)
            Me.columnEDAD = New Global.System.Data.DataColumn("EDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDAD)
            Me.columnPRUEBA_ANTIDROGA = New Global.System.Data.DataColumn("PRUEBA_ANTIDROGA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRUEBA_ANTIDROGA)
            Me.columnFECHA_ENTRADA = New Global.System.Data.DataColumn("FECHA_ENTRADA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENTRADA)
            Me.columnFECHA_SALIDA = New Global.System.Data.DataColumn("FECHA_SALIDA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SALIDA)
            Me.columnESTADO_PERSONAL = New Global.System.Data.DataColumn("ESTADO_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_PERSONAL)
            Me.columnID_AREA = New Global.System.Data.DataColumn("ID_AREA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_AREA)
            Me.columnID_CARGO_OCUPACIONAL = New Global.System.Data.DataColumn("ID_CARGO_OCUPACIONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CARGO_OCUPACIONAL)
            Me.columnUBICACION = New Global.System.Data.DataColumn("UBICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUBICACION)
            Me.columnINSTRUCCION = New Global.System.Data.DataColumn("INSTRUCCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTRUCCION)
            Me.columnESTADO_CIVIL = New Global.System.Data.DataColumn("ESTADO_CIVIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CIVIL)
            Me.columnMOVIL = New Global.System.Data.DataColumn("MOVIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIL)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCANTIDAD_HIJOS = New Global.System.Data.DataColumn("CANTIDAD_HIJOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_HIJOS)
            Me.columnHISTORIA_CLINICA = New Global.System.Data.DataColumn("HISTORIA_CLINICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHISTORIA_CLINICA)
            Me.columnPARROQUIA = New Global.System.Data.DataColumn("PARROQUIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARROQUIA)
            Me.columnESTATURA = New Global.System.Data.DataColumn("ESTATURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTATURA)
            Me.columnDISCAPACIDAD = New Global.System.Data.DataColumn("DISCAPACIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCAPACIDAD)
            Me.columnEXAMEN_PSICOLOGICO = New Global.System.Data.DataColumn("EXAMEN_PSICOLOGICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXAMEN_PSICOLOGICO)
            Me.columnLUGAR_EXAMEN_PSICOLOGICO = New Global.System.Data.DataColumn("LUGAR_EXAMEN_PSICOLOGICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLUGAR_EXAMEN_PSICOLOGICO)
            Me.columnCARNET_CONADIS = New Global.System.Data.DataColumn("CARNET_CONADIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARNET_CONADIS)
            Me.columnDATOS_HIJOS = New Global.System.Data.DataColumn("DATOS_HIJOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_HIJOS)
            Me.columnDATOS_ESPOSA = New Global.System.Data.DataColumn("DATOS_ESPOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_ESPOSA)
            Me.columnCASA = New Global.System.Data.DataColumn("CASA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASA)
            Me.columnARRIENDO = New Global.System.Data.DataColumn("ARRIENDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARRIENDO)
            Me.columnDEUDOR_GARANTE = New Global.System.Data.DataColumn("DEUDOR_GARANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEUDOR_GARANTE)
            Me.columnCANTIDAD_DEUDA = New Global.System.Data.DataColumn("CANTIDAD_DEUDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_DEUDA)
            Me.columnA_QUIEN_ADEUDA = New Global.System.Data.DataColumn("A_QUIEN_ADEUDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_QUIEN_ADEUDA)
            Me.columnTRABAJO_ATERIORMENTE = New Global.System.Data.DataColumn("TRABAJO_ATERIORMENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRABAJO_ATERIORMENTE)
            Me.columnANTERIOR_TRABAJO = New Global.System.Data.DataColumn("ANTERIOR_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANTERIOR_TRABAJO)
            Me.columnCARGO_ANTERIOR_TRABAJO = New Global.System.Data.DataColumn("CARGO_ANTERIOR_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO_ANTERIOR_TRABAJO)
            Me.columnMOTIVO_SALIDA_TRABAJO = New Global.System.Data.DataColumn("MOTIVO_SALIDA_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVO_SALIDA_TRABAJO)
            Me.columnENTRADA_ANTERIOR = New Global.System.Data.DataColumn("ENTRADA_ANTERIOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRADA_ANTERIOR)
            Me.columnSALIDA_ANTERIOR = New Global.System.Data.DataColumn("SALIDA_ANTERIOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALIDA_ANTERIOR)
            Me.columnNOMBRES_PATRONO_ANTERIOR = New Global.System.Data.DataColumn("NOMBRES_PATRONO_ANTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES_PATRONO_ANTERIOR)
            Me.columnTELEFONO_PATRONO_ANTERIOR = New Global.System.Data.DataColumn("TELEFONO_PATRONO_ANTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_PATRONO_ANTERIOR)
            Me.columnRECOMENDACIONES = New Global.System.Data.DataColumn("RECOMENDACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECOMENDACIONES)
            Me.columnDATOS_FAMILIARES = New Global.System.Data.DataColumn("DATOS_FAMILIARES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_FAMILIARES)
            Me.columnDATOS_EMERGENCIA = New Global.System.Data.DataColumn("DATOS_EMERGENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_EMERGENCIA)
            Me.columnFOTO = New Global.System.Data.DataColumn("FOTO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOTO)
            Me.columnPERFIL = New Global.System.Data.DataColumn("PERFIL", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFIL)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCURSO_VIGILANTE = New Global.System.Data.DataColumn("CURSO_VIGILANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURSO_VIGILANTE)
            Me.columnEMISOR_CURSO_VIGILANTE = New Global.System.Data.DataColumn("EMISOR_CURSO_VIGILANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISOR_CURSO_VIGILANTE)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_PERSONAL}, true))
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnID_PERSONAL.Unique = true
            Me.columnCEDULA.AllowDBNull = false
            Me.columnCEDULA.MaxLength = 10
            Me.columnNOMBRES.AllowDBNull = false
            Me.columnNOMBRES.MaxLength = 2147483647
            Me.columnAPELLIDOS.AllowDBNull = false
            Me.columnAPELLIDOS.MaxLength = 2147483647
            Me.columnPROVINCIA.AllowDBNull = false
            Me.columnPROVINCIA.MaxLength = 2147483647
            Me.columnDIRECCION.AllowDBNull = false
            Me.columnDIRECCION.MaxLength = 2147483647
            Me.columnSEXO.AllowDBNull = false
            Me.columnSEXO.MaxLength = 10
            Me.columnCIUDAD.AllowDBNull = false
            Me.columnCIUDAD.MaxLength = 2147483647
            Me.columnSUELDO.AllowDBNull = false
            Me.columnLIBRETA_MILITAR.AllowDBNull = false
            Me.columnLIBRETA_MILITAR.MaxLength = 20
            Me.columnTIPO_SANGRE.AllowDBNull = false
            Me.columnTIPO_SANGRE.MaxLength = 5
            Me.columnPASAPORTE.AllowDBNull = false
            Me.columnPASAPORTE.MaxLength = 20
            Me.columnPESO.AllowDBNull = false
            Me.columnEDAD.AllowDBNull = false
            Me.columnPRUEBA_ANTIDROGA.AllowDBNull = false
            Me.columnPRUEBA_ANTIDROGA.MaxLength = 20
            Me.columnESTADO_PERSONAL.AllowDBNull = false
            Me.columnID_AREA.AllowDBNull = false
            Me.columnID_CARGO_OCUPACIONAL.AllowDBNull = false
            Me.columnUBICACION.AllowDBNull = false
            Me.columnUBICACION.MaxLength = 2147483647
            Me.columnINSTRUCCION.AllowDBNull = false
            Me.columnINSTRUCCION.MaxLength = 2147483647
            Me.columnESTADO_CIVIL.AllowDBNull = false
            Me.columnESTADO_CIVIL.MaxLength = 10
            Me.columnMOVIL.MaxLength = 2147483647
            Me.columnTELEFONO.MaxLength = 2147483647
            Me.columnHISTORIA_CLINICA.MaxLength = 2147483647
            Me.columnPARROQUIA.MaxLength = 2147483647
            Me.columnDISCAPACIDAD.MaxLength = 2147483647
            Me.columnEXAMEN_PSICOLOGICO.MaxLength = 2147483647
            Me.columnLUGAR_EXAMEN_PSICOLOGICO.MaxLength = 2147483647
            Me.columnCARNET_CONADIS.MaxLength = 2147483647
            Me.columnDATOS_HIJOS.MaxLength = 2147483647
            Me.columnDATOS_ESPOSA.MaxLength = 2147483647
            Me.columnCASA.MaxLength = 2147483647
            Me.columnARRIENDO.MaxLength = 2147483647
            Me.columnDEUDOR_GARANTE.MaxLength = 2147483647
            Me.columnA_QUIEN_ADEUDA.MaxLength = 2147483647
            Me.columnTRABAJO_ATERIORMENTE.MaxLength = 2147483647
            Me.columnANTERIOR_TRABAJO.MaxLength = 2147483647
            Me.columnCARGO_ANTERIOR_TRABAJO.MaxLength = 2147483647
            Me.columnMOTIVO_SALIDA_TRABAJO.MaxLength = 2147483647
            Me.columnNOMBRES_PATRONO_ANTERIOR.MaxLength = 2147483647
            Me.columnTELEFONO_PATRONO_ANTERIOR.MaxLength = 2147483647
            Me.columnRECOMENDACIONES.MaxLength = 2147483647
            Me.columnDATOS_FAMILIARES.MaxLength = 2147483647
            Me.columnDATOS_EMERGENCIA.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPERSONALRow() As PERSONALRow
            Return CType(Me.NewRow,PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PERSONALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PERSONALRowChangedEvent) Is Nothing) Then
                RaiseEvent PERSONALRowChanged(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PERSONALRowChangingEvent) Is Nothing) Then
                RaiseEvent PERSONALRowChanging(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PERSONALRowDeletedEvent) Is Nothing) Then
                RaiseEvent PERSONALRowDeleted(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PERSONALRowDeletingEvent) Is Nothing) Then
                RaiseEvent PERSONALRowDeleting(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePERSONALRow(ByVal row As PERSONALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PERSONALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GASTOS_CAJA_CHICADataTable
        Inherits Global.System.Data.TypedTableBase(Of GASTOS_CAJA_CHICARow)
        
        Private columnID_GASTOS_CAJA_CH As Global.System.Data.DataColumn
        
        Private columnNOMBRE_GASTO_CAJA_CH As Global.System.Data.DataColumn
        
        Private columnCTA_CONTABLE_GASTO_CAJA_CH As Global.System.Data.DataColumn
        
        Private columnID_PLAN As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GASTOS_CAJA_CHICA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GASTOS_CAJA_CHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GASTOS_CAJA_CH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_GASTO_CAJA_CHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_GASTO_CAJA_CH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CTA_CONTABLE_GASTO_CAJA_CHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_CONTABLE_GASTO_CAJA_CH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PLANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PLAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GASTOS_CAJA_CHICARow
            Get
                Return CType(Me.Rows(index),GASTOS_CAJA_CHICARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event GASTOS_CAJA_CHICARowChanging As GASTOS_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event GASTOS_CAJA_CHICARowChanged As GASTOS_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event GASTOS_CAJA_CHICARowDeleting As GASTOS_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event GASTOS_CAJA_CHICARowDeleted As GASTOS_CAJA_CHICARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddGASTOS_CAJA_CHICARow(ByVal row As GASTOS_CAJA_CHICARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddGASTOS_CAJA_CHICARow(ByVal ID_GASTOS_CAJA_CH As Integer, ByVal NOMBRE_GASTO_CAJA_CH As String, ByVal CTA_CONTABLE_GASTO_CAJA_CH As String, ByVal ID_PLAN As Integer, ByVal ESTADO As Integer) As GASTOS_CAJA_CHICARow
            Dim rowGASTOS_CAJA_CHICARow As GASTOS_CAJA_CHICARow = CType(Me.NewRow,GASTOS_CAJA_CHICARow)
            Dim columnValuesArray() As Object = New Object() {ID_GASTOS_CAJA_CH, NOMBRE_GASTO_CAJA_CH, CTA_CONTABLE_GASTO_CAJA_CH, ID_PLAN, ESTADO}
            rowGASTOS_CAJA_CHICARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGASTOS_CAJA_CHICARow)
            Return rowGASTOS_CAJA_CHICARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_GASTOS_CAJA_CH(ByVal ID_GASTOS_CAJA_CH As Integer) As GASTOS_CAJA_CHICARow
            Return CType(Me.Rows.Find(New Object() {ID_GASTOS_CAJA_CH}),GASTOS_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GASTOS_CAJA_CHICADataTable = CType(MyBase.Clone,GASTOS_CAJA_CHICADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GASTOS_CAJA_CHICADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_GASTOS_CAJA_CH = MyBase.Columns("ID_GASTOS_CAJA_CH")
            Me.columnNOMBRE_GASTO_CAJA_CH = MyBase.Columns("NOMBRE_GASTO_CAJA_CH")
            Me.columnCTA_CONTABLE_GASTO_CAJA_CH = MyBase.Columns("CTA_CONTABLE_GASTO_CAJA_CH")
            Me.columnID_PLAN = MyBase.Columns("ID_PLAN")
            Me.columnESTADO = MyBase.Columns("ESTADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_GASTOS_CAJA_CH = New Global.System.Data.DataColumn("ID_GASTOS_CAJA_CH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GASTOS_CAJA_CH)
            Me.columnNOMBRE_GASTO_CAJA_CH = New Global.System.Data.DataColumn("NOMBRE_GASTO_CAJA_CH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_GASTO_CAJA_CH)
            Me.columnCTA_CONTABLE_GASTO_CAJA_CH = New Global.System.Data.DataColumn("CTA_CONTABLE_GASTO_CAJA_CH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_CONTABLE_GASTO_CAJA_CH)
            Me.columnID_PLAN = New Global.System.Data.DataColumn("ID_PLAN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PLAN)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_GASTOS_CAJA_CH}, true))
            Me.columnID_GASTOS_CAJA_CH.AllowDBNull = false
            Me.columnID_GASTOS_CAJA_CH.Unique = true
            Me.columnNOMBRE_GASTO_CAJA_CH.AllowDBNull = false
            Me.columnNOMBRE_GASTO_CAJA_CH.MaxLength = 2147483647
            Me.columnCTA_CONTABLE_GASTO_CAJA_CH.AllowDBNull = false
            Me.columnCTA_CONTABLE_GASTO_CAJA_CH.MaxLength = 2147483647
            Me.columnID_PLAN.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewGASTOS_CAJA_CHICARow() As GASTOS_CAJA_CHICARow
            Return CType(Me.NewRow,GASTOS_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GASTOS_CAJA_CHICARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GASTOS_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GASTOS_CAJA_CHICARowChangedEvent) Is Nothing) Then
                RaiseEvent GASTOS_CAJA_CHICARowChanged(Me, New GASTOS_CAJA_CHICARowChangeEvent(CType(e.Row,GASTOS_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GASTOS_CAJA_CHICARowChangingEvent) Is Nothing) Then
                RaiseEvent GASTOS_CAJA_CHICARowChanging(Me, New GASTOS_CAJA_CHICARowChangeEvent(CType(e.Row,GASTOS_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GASTOS_CAJA_CHICARowDeletedEvent) Is Nothing) Then
                RaiseEvent GASTOS_CAJA_CHICARowDeleted(Me, New GASTOS_CAJA_CHICARowChangeEvent(CType(e.Row,GASTOS_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GASTOS_CAJA_CHICARowDeletingEvent) Is Nothing) Then
                RaiseEvent GASTOS_CAJA_CHICARowDeleting(Me, New GASTOS_CAJA_CHICARowChangeEvent(CType(e.Row,GASTOS_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveGASTOS_CAJA_CHICARow(ByVal row As GASTOS_CAJA_CHICARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GASTOS_CAJA_CHICADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SOLICITUD_CAJA_CHICADataTable
        Inherits Global.System.Data.TypedTableBase(Of SOLICITUD_CAJA_CHICARow)
        
        Private columnID_SOLICTUD_CCH As Global.System.Data.DataColumn
        
        Private columnNUMERO_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnFECHA_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnVALOR_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnDETALLE_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnCOD_DEBE_CCH As Global.System.Data.DataColumn
        
        Private columnCOD_HABER_CCH As Global.System.Data.DataColumn
        
        Private columnESTADO_SOLICITUD_CCH As Global.System.Data.DataColumn
        
        Private columnID_CAJA_CHICA As Global.System.Data.DataColumn
        
        Private columnID_RESPONSABLE_AUTO_CCH As Global.System.Data.DataColumn
        
        Private columnID_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnID_GASTO_CAJA_CH As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIA As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnID_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnNOMBRES_RECIBE As Global.System.Data.DataColumn
        
        Private columnCEDULA_RECIBE As Global.System.Data.DataColumn
        
        Private columnNOMBRES_ENTREGA As Global.System.Data.DataColumn
        
        Private columnCEDULA_ENTREGA As Global.System.Data.DataColumn
        
        Private columnID_PARAMETRO_DOCUMENTOS As Global.System.Data.DataColumn
        
        Private columnNRO_PARAMETRO_DOCUMENTOS As Global.System.Data.DataColumn
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnID_LIQUIDACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SOLICITUD_CAJA_CHICA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SOLICTUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SOLICTUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DETALLE_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COD_DEBE_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DEBE_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COD_HABER_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_HABER_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_SOLICITUD_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_SOLICITUD_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CAJA_CHICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CAJA_CHICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RESPONSABLE_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RESPONSABLE_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GASTO_CAJA_CHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GASTO_CAJA_CH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRES_RECIBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES_RECIBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULA_RECIBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA_RECIBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRES_ENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES_ENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULA_ENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA_ENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARAMETRO_DOCUMENTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARAMETRO_DOCUMENTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NRO_PARAMETRO_DOCUMENTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_PARAMETRO_DOCUMENTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SOLICITUD_CAJA_CHICARow
            Get
                Return CType(Me.Rows(index),SOLICITUD_CAJA_CHICARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SOLICITUD_CAJA_CHICARowChanging As SOLICITUD_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SOLICITUD_CAJA_CHICARowChanged As SOLICITUD_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SOLICITUD_CAJA_CHICARowDeleting As SOLICITUD_CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SOLICITUD_CAJA_CHICARowDeleted As SOLICITUD_CAJA_CHICARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSOLICITUD_CAJA_CHICARow(ByVal row As SOLICITUD_CAJA_CHICARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSOLICITUD_CAJA_CHICARow( _
                    ByVal ID_SOLICTUD_CCH As Long,  _
                    ByVal NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal FECHA_SOLICITUD_CCH As Date,  _
                    ByVal VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal DETALLE_SOLICITUD_CCH As String,  _
                    ByVal COD_DEBE_CCH As String,  _
                    ByVal COD_HABER_CCH As String,  _
                    ByVal ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal parentCAJA_CHICARowByFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA As CAJA_CHICARow,  _
                    ByVal parentRESPONSABLE_AUTORIZACION_FONDO_CAJARowByFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA As RESPONSABLE_AUTORIZACION_FONDO_CAJARow,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_GASTO_CAJA_CH As Integer,  _
                    ByVal parentPROVINCIASRowByPROVINCIAS_SOLICITUD_CAJA_CHICA As PROVINCIASRow,  _
                    ByVal parentCIUDADESRowByCIUDADES_SOLICITUD_CAJA_CHICA As CIUDADESRow,  _
                    ByVal parentPARROQUIASRowByPARROQUIAS_SOLICITUD_CAJA_CHICA As PARROQUIASRow,  _
                    ByVal NOMBRES_RECIBE As String,  _
                    ByVal CEDULA_RECIBE As String,  _
                    ByVal NOMBRES_ENTREGA As String,  _
                    ByVal CEDULA_ENTREGA As String,  _
                    ByVal ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_LIQUIDACION As Integer) As SOLICITUD_CAJA_CHICARow
            Dim rowSOLICITUD_CAJA_CHICARow As SOLICITUD_CAJA_CHICARow = CType(Me.NewRow,SOLICITUD_CAJA_CHICARow)
            Dim columnValuesArray() As Object = New Object() {ID_SOLICTUD_CCH, NUMERO_SOLICITUD_CCH, FECHA_SOLICITUD_CCH, VALOR_SOLICITUD_CCH, DETALLE_SOLICITUD_CCH, COD_DEBE_CCH, COD_HABER_CCH, ESTADO_SOLICITUD_CCH, Nothing, Nothing, ID_CENTRO_COSTO, ID_GASTO_CAJA_CH, Nothing, Nothing, Nothing, NOMBRES_RECIBE, CEDULA_RECIBE, NOMBRES_ENTREGA, CEDULA_ENTREGA, ID_PARAMETRO_DOCUMENTOS, NRO_PARAMETRO_DOCUMENTOS, ID_PERSONAL, ID_LIQUIDACION}
            If (Not (parentCAJA_CHICARowByFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA) Is Nothing) Then
                columnValuesArray(8) = parentCAJA_CHICARowByFK_SOLICITUD_CAJA_CHICA_CAJA_CHICA(0)
            End If
            If (Not (parentRESPONSABLE_AUTORIZACION_FONDO_CAJARowByFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA) Is Nothing) Then
                columnValuesArray(9) = parentRESPONSABLE_AUTORIZACION_FONDO_CAJARowByFK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA(0)
            End If
            If (Not (parentPROVINCIASRowByPROVINCIAS_SOLICITUD_CAJA_CHICA) Is Nothing) Then
                columnValuesArray(12) = parentPROVINCIASRowByPROVINCIAS_SOLICITUD_CAJA_CHICA(0)
            End If
            If (Not (parentCIUDADESRowByCIUDADES_SOLICITUD_CAJA_CHICA) Is Nothing) Then
                columnValuesArray(13) = parentCIUDADESRowByCIUDADES_SOLICITUD_CAJA_CHICA(0)
            End If
            If (Not (parentPARROQUIASRowByPARROQUIAS_SOLICITUD_CAJA_CHICA) Is Nothing) Then
                columnValuesArray(14) = parentPARROQUIASRowByPARROQUIAS_SOLICITUD_CAJA_CHICA(0)
            End If
            rowSOLICITUD_CAJA_CHICARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSOLICITUD_CAJA_CHICARow)
            Return rowSOLICITUD_CAJA_CHICARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_SOLICTUD_CCH(ByVal ID_SOLICTUD_CCH As Long) As SOLICITUD_CAJA_CHICARow
            Return CType(Me.Rows.Find(New Object() {ID_SOLICTUD_CCH}),SOLICITUD_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SOLICITUD_CAJA_CHICADataTable = CType(MyBase.Clone,SOLICITUD_CAJA_CHICADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SOLICITUD_CAJA_CHICADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_SOLICTUD_CCH = MyBase.Columns("ID_SOLICTUD_CCH")
            Me.columnNUMERO_SOLICITUD_CCH = MyBase.Columns("NUMERO_SOLICITUD_CCH")
            Me.columnFECHA_SOLICITUD_CCH = MyBase.Columns("FECHA_SOLICITUD_CCH")
            Me.columnVALOR_SOLICITUD_CCH = MyBase.Columns("VALOR_SOLICITUD_CCH")
            Me.columnDETALLE_SOLICITUD_CCH = MyBase.Columns("DETALLE_SOLICITUD_CCH")
            Me.columnCOD_DEBE_CCH = MyBase.Columns("COD_DEBE_CCH")
            Me.columnCOD_HABER_CCH = MyBase.Columns("COD_HABER_CCH")
            Me.columnESTADO_SOLICITUD_CCH = MyBase.Columns("ESTADO_SOLICITUD_CCH")
            Me.columnID_CAJA_CHICA = MyBase.Columns("ID_CAJA_CHICA")
            Me.columnID_RESPONSABLE_AUTO_CCH = MyBase.Columns("ID_RESPONSABLE_AUTO_CCH")
            Me.columnID_CENTRO_COSTO = MyBase.Columns("ID_CENTRO_COSTO")
            Me.columnID_GASTO_CAJA_CH = MyBase.Columns("ID_GASTO_CAJA_CH")
            Me.columnID_PROVINCIA = MyBase.Columns("ID_PROVINCIA")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnID_PARROQUIAS = MyBase.Columns("ID_PARROQUIAS")
            Me.columnNOMBRES_RECIBE = MyBase.Columns("NOMBRES_RECIBE")
            Me.columnCEDULA_RECIBE = MyBase.Columns("CEDULA_RECIBE")
            Me.columnNOMBRES_ENTREGA = MyBase.Columns("NOMBRES_ENTREGA")
            Me.columnCEDULA_ENTREGA = MyBase.Columns("CEDULA_ENTREGA")
            Me.columnID_PARAMETRO_DOCUMENTOS = MyBase.Columns("ID_PARAMETRO_DOCUMENTOS")
            Me.columnNRO_PARAMETRO_DOCUMENTOS = MyBase.Columns("NRO_PARAMETRO_DOCUMENTOS")
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnID_LIQUIDACION = MyBase.Columns("ID_LIQUIDACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_SOLICTUD_CCH = New Global.System.Data.DataColumn("ID_SOLICTUD_CCH", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SOLICTUD_CCH)
            Me.columnNUMERO_SOLICITUD_CCH = New Global.System.Data.DataColumn("NUMERO_SOLICITUD_CCH", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_SOLICITUD_CCH)
            Me.columnFECHA_SOLICITUD_CCH = New Global.System.Data.DataColumn("FECHA_SOLICITUD_CCH", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SOLICITUD_CCH)
            Me.columnVALOR_SOLICITUD_CCH = New Global.System.Data.DataColumn("VALOR_SOLICITUD_CCH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_SOLICITUD_CCH)
            Me.columnDETALLE_SOLICITUD_CCH = New Global.System.Data.DataColumn("DETALLE_SOLICITUD_CCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_SOLICITUD_CCH)
            Me.columnCOD_DEBE_CCH = New Global.System.Data.DataColumn("COD_DEBE_CCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DEBE_CCH)
            Me.columnCOD_HABER_CCH = New Global.System.Data.DataColumn("COD_HABER_CCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_HABER_CCH)
            Me.columnESTADO_SOLICITUD_CCH = New Global.System.Data.DataColumn("ESTADO_SOLICITUD_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_SOLICITUD_CCH)
            Me.columnID_CAJA_CHICA = New Global.System.Data.DataColumn("ID_CAJA_CHICA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CAJA_CHICA)
            Me.columnID_RESPONSABLE_AUTO_CCH = New Global.System.Data.DataColumn("ID_RESPONSABLE_AUTO_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RESPONSABLE_AUTO_CCH)
            Me.columnID_CENTRO_COSTO = New Global.System.Data.DataColumn("ID_CENTRO_COSTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CENTRO_COSTO)
            Me.columnID_GASTO_CAJA_CH = New Global.System.Data.DataColumn("ID_GASTO_CAJA_CH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GASTO_CAJA_CH)
            Me.columnID_PROVINCIA = New Global.System.Data.DataColumn("ID_PROVINCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIA)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnID_PARROQUIAS = New Global.System.Data.DataColumn("ID_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARROQUIAS)
            Me.columnNOMBRES_RECIBE = New Global.System.Data.DataColumn("NOMBRES_RECIBE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES_RECIBE)
            Me.columnCEDULA_RECIBE = New Global.System.Data.DataColumn("CEDULA_RECIBE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA_RECIBE)
            Me.columnNOMBRES_ENTREGA = New Global.System.Data.DataColumn("NOMBRES_ENTREGA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES_ENTREGA)
            Me.columnCEDULA_ENTREGA = New Global.System.Data.DataColumn("CEDULA_ENTREGA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA_ENTREGA)
            Me.columnID_PARAMETRO_DOCUMENTOS = New Global.System.Data.DataColumn("ID_PARAMETRO_DOCUMENTOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARAMETRO_DOCUMENTOS)
            Me.columnNRO_PARAMETRO_DOCUMENTOS = New Global.System.Data.DataColumn("NRO_PARAMETRO_DOCUMENTOS", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_PARAMETRO_DOCUMENTOS)
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnID_LIQUIDACION = New Global.System.Data.DataColumn("ID_LIQUIDACION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LIQUIDACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_SOLICTUD_CCH}, true))
            Me.columnID_SOLICTUD_CCH.AllowDBNull = false
            Me.columnID_SOLICTUD_CCH.Unique = true
            Me.columnNUMERO_SOLICITUD_CCH.AllowDBNull = false
            Me.columnFECHA_SOLICITUD_CCH.AllowDBNull = false
            Me.columnVALOR_SOLICITUD_CCH.AllowDBNull = false
            Me.columnDETALLE_SOLICITUD_CCH.AllowDBNull = false
            Me.columnDETALLE_SOLICITUD_CCH.MaxLength = 2147483647
            Me.columnCOD_DEBE_CCH.AllowDBNull = false
            Me.columnCOD_DEBE_CCH.MaxLength = 2147483647
            Me.columnCOD_HABER_CCH.AllowDBNull = false
            Me.columnCOD_HABER_CCH.MaxLength = 2147483647
            Me.columnESTADO_SOLICITUD_CCH.AllowDBNull = false
            Me.columnID_CAJA_CHICA.AllowDBNull = false
            Me.columnID_RESPONSABLE_AUTO_CCH.AllowDBNull = false
            Me.columnID_CENTRO_COSTO.AllowDBNull = false
            Me.columnID_GASTO_CAJA_CH.AllowDBNull = false
            Me.columnID_PROVINCIA.AllowDBNull = false
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_PARROQUIAS.AllowDBNull = false
            Me.columnNOMBRES_RECIBE.AllowDBNull = false
            Me.columnNOMBRES_RECIBE.MaxLength = 2147483647
            Me.columnCEDULA_RECIBE.AllowDBNull = false
            Me.columnCEDULA_RECIBE.MaxLength = 2147483647
            Me.columnNOMBRES_ENTREGA.AllowDBNull = false
            Me.columnNOMBRES_ENTREGA.MaxLength = 2147483647
            Me.columnCEDULA_ENTREGA.AllowDBNull = false
            Me.columnCEDULA_ENTREGA.MaxLength = 2147483647
            Me.columnID_PARAMETRO_DOCUMENTOS.AllowDBNull = false
            Me.columnNRO_PARAMETRO_DOCUMENTOS.AllowDBNull = false
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnID_LIQUIDACION.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSOLICITUD_CAJA_CHICARow() As SOLICITUD_CAJA_CHICARow
            Return CType(Me.NewRow,SOLICITUD_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SOLICITUD_CAJA_CHICARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SOLICITUD_CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SOLICITUD_CAJA_CHICARowChangedEvent) Is Nothing) Then
                RaiseEvent SOLICITUD_CAJA_CHICARowChanged(Me, New SOLICITUD_CAJA_CHICARowChangeEvent(CType(e.Row,SOLICITUD_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SOLICITUD_CAJA_CHICARowChangingEvent) Is Nothing) Then
                RaiseEvent SOLICITUD_CAJA_CHICARowChanging(Me, New SOLICITUD_CAJA_CHICARowChangeEvent(CType(e.Row,SOLICITUD_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SOLICITUD_CAJA_CHICARowDeletedEvent) Is Nothing) Then
                RaiseEvent SOLICITUD_CAJA_CHICARowDeleted(Me, New SOLICITUD_CAJA_CHICARowChangeEvent(CType(e.Row,SOLICITUD_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SOLICITUD_CAJA_CHICARowDeletingEvent) Is Nothing) Then
                RaiseEvent SOLICITUD_CAJA_CHICARowDeleting(Me, New SOLICITUD_CAJA_CHICARowChangeEvent(CType(e.Row,SOLICITUD_CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSOLICITUD_CAJA_CHICARow(ByVal row As SOLICITUD_CAJA_CHICARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SOLICITUD_CAJA_CHICADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable
        Inherits Global.System.Data.TypedTableBase(Of RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
        
        Private columnID_RESPONSABLE_AUTO_CCH As Global.System.Data.DataColumn
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnNOMBRES_AUTO_CCH As Global.System.Data.DataColumn
        
        Private columnCEDULA_AUTO_CCH As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIA As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnID_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnESTADO_RESPONSABLE_AUTO_CCH As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RESPONSABLE_AUTORIZACION_FONDO_CAJA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_RESPONSABLE_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_RESPONSABLE_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRES_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULA_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_RESPONSABLE_AUTO_CCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_RESPONSABLE_AUTO_CCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Get
                Return CType(Me.Rows(index),RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RESPONSABLE_AUTORIZACION_FONDO_CAJARowChanging As RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RESPONSABLE_AUTORIZACION_FONDO_CAJARowChanged As RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeleting As RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeleted As RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRESPONSABLE_AUTORIZACION_FONDO_CAJARow(ByVal row As RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRESPONSABLE_AUTORIZACION_FONDO_CAJARow(ByVal ID_RESPONSABLE_AUTO_CCH As Integer, ByVal ID_PERSONAL As Integer, ByVal NOMBRES_AUTO_CCH As String, ByVal CEDULA_AUTO_CCH As String, ByVal ID_PROVINCIA As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ESTADO_RESPONSABLE_AUTO_CCH As Integer) As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Dim rowRESPONSABLE_AUTORIZACION_FONDO_CAJARow As RESPONSABLE_AUTORIZACION_FONDO_CAJARow = CType(Me.NewRow,RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            Dim columnValuesArray() As Object = New Object() {ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, NOMBRES_AUTO_CCH, CEDULA_AUTO_CCH, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ESTADO_RESPONSABLE_AUTO_CCH}
            rowRESPONSABLE_AUTORIZACION_FONDO_CAJARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            Return rowRESPONSABLE_AUTORIZACION_FONDO_CAJARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_RESPONSABLE_AUTO_CCH(ByVal ID_RESPONSABLE_AUTO_CCH As Integer) As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Return CType(Me.Rows.Find(New Object() {ID_RESPONSABLE_AUTO_CCH}),RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable = CType(MyBase.Clone,RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_RESPONSABLE_AUTO_CCH = MyBase.Columns("ID_RESPONSABLE_AUTO_CCH")
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnNOMBRES_AUTO_CCH = MyBase.Columns("NOMBRES_AUTO_CCH")
            Me.columnCEDULA_AUTO_CCH = MyBase.Columns("CEDULA_AUTO_CCH")
            Me.columnID_PROVINCIA = MyBase.Columns("ID_PROVINCIA")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnID_PARROQUIAS = MyBase.Columns("ID_PARROQUIAS")
            Me.columnESTADO_RESPONSABLE_AUTO_CCH = MyBase.Columns("ESTADO_RESPONSABLE_AUTO_CCH")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_RESPONSABLE_AUTO_CCH = New Global.System.Data.DataColumn("ID_RESPONSABLE_AUTO_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_RESPONSABLE_AUTO_CCH)
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnNOMBRES_AUTO_CCH = New Global.System.Data.DataColumn("NOMBRES_AUTO_CCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES_AUTO_CCH)
            Me.columnCEDULA_AUTO_CCH = New Global.System.Data.DataColumn("CEDULA_AUTO_CCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA_AUTO_CCH)
            Me.columnID_PROVINCIA = New Global.System.Data.DataColumn("ID_PROVINCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIA)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnID_PARROQUIAS = New Global.System.Data.DataColumn("ID_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARROQUIAS)
            Me.columnESTADO_RESPONSABLE_AUTO_CCH = New Global.System.Data.DataColumn("ESTADO_RESPONSABLE_AUTO_CCH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_RESPONSABLE_AUTO_CCH)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_RESPONSABLE_AUTO_CCH}, true))
            Me.columnID_RESPONSABLE_AUTO_CCH.AllowDBNull = false
            Me.columnID_RESPONSABLE_AUTO_CCH.Unique = true
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnNOMBRES_AUTO_CCH.AllowDBNull = false
            Me.columnNOMBRES_AUTO_CCH.MaxLength = 2147483647
            Me.columnCEDULA_AUTO_CCH.AllowDBNull = false
            Me.columnCEDULA_AUTO_CCH.MaxLength = 10
            Me.columnID_PROVINCIA.AllowDBNull = false
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_PARROQUIAS.AllowDBNull = false
            Me.columnESTADO_RESPONSABLE_AUTO_CCH.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRESPONSABLE_AUTORIZACION_FONDO_CAJARow() As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Return CType(Me.NewRow,RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RESPONSABLE_AUTORIZACION_FONDO_CAJARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangedEvent) Is Nothing) Then
                RaiseEvent RESPONSABLE_AUTORIZACION_FONDO_CAJARowChanged(Me, New RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent(CType(e.Row,RESPONSABLE_AUTORIZACION_FONDO_CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangingEvent) Is Nothing) Then
                RaiseEvent RESPONSABLE_AUTORIZACION_FONDO_CAJARowChanging(Me, New RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent(CType(e.Row,RESPONSABLE_AUTORIZACION_FONDO_CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeletedEvent) Is Nothing) Then
                RaiseEvent RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeleted(Me, New RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent(CType(e.Row,RESPONSABLE_AUTORIZACION_FONDO_CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeletingEvent) Is Nothing) Then
                RaiseEvent RESPONSABLE_AUTORIZACION_FONDO_CAJARowDeleting(Me, New RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent(CType(e.Row,RESPONSABLE_AUTORIZACION_FONDO_CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRESPONSABLE_AUTORIZACION_FONDO_CAJARow(ByVal row As RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROVINCIASDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROVINCIASRow)
        
        Private columnID_PROVINCIAS As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PROVINCIAS As Global.System.Data.DataColumn
        
        Private columnESTADO_PROVINCIAS As Global.System.Data.DataColumn
        
        Private columnID_PAISES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROVINCIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PAISESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PAISES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROVINCIASRow
            Get
                Return CType(Me.Rows(index),PROVINCIASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVINCIASRowChanging As PROVINCIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVINCIASRowChanged As PROVINCIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVINCIASRowDeleting As PROVINCIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PROVINCIASRowDeleted As PROVINCIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPROVINCIASRow(ByVal row As PROVINCIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPROVINCIASRow(ByVal ID_PROVINCIAS As Integer, ByVal NOMBRE_PROVINCIAS As String, ByVal ESTADO_PROVINCIAS As Integer, ByVal ID_PAISES As Integer) As PROVINCIASRow
            Dim rowPROVINCIASRow As PROVINCIASRow = CType(Me.NewRow,PROVINCIASRow)
            Dim columnValuesArray() As Object = New Object() {ID_PROVINCIAS, NOMBRE_PROVINCIAS, ESTADO_PROVINCIAS, ID_PAISES}
            rowPROVINCIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROVINCIASRow)
            Return rowPROVINCIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_PROVINCIAS(ByVal ID_PROVINCIAS As Integer) As PROVINCIASRow
            Return CType(Me.Rows.Find(New Object() {ID_PROVINCIAS}),PROVINCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROVINCIASDataTable = CType(MyBase.Clone,PROVINCIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROVINCIASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_PROVINCIAS = MyBase.Columns("ID_PROVINCIAS")
            Me.columnNOMBRE_PROVINCIAS = MyBase.Columns("NOMBRE_PROVINCIAS")
            Me.columnESTADO_PROVINCIAS = MyBase.Columns("ESTADO_PROVINCIAS")
            Me.columnID_PAISES = MyBase.Columns("ID_PAISES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_PROVINCIAS = New Global.System.Data.DataColumn("ID_PROVINCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIAS)
            Me.columnNOMBRE_PROVINCIAS = New Global.System.Data.DataColumn("NOMBRE_PROVINCIAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PROVINCIAS)
            Me.columnESTADO_PROVINCIAS = New Global.System.Data.DataColumn("ESTADO_PROVINCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_PROVINCIAS)
            Me.columnID_PAISES = New Global.System.Data.DataColumn("ID_PAISES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PAISES)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_PROVINCIAS}, true))
            Me.columnID_PROVINCIAS.AllowDBNull = false
            Me.columnID_PROVINCIAS.Unique = true
            Me.columnNOMBRE_PROVINCIAS.AllowDBNull = false
            Me.columnNOMBRE_PROVINCIAS.MaxLength = 2147483647
            Me.columnESTADO_PROVINCIAS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPROVINCIASRow() As PROVINCIASRow
            Return CType(Me.NewRow,PROVINCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROVINCIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROVINCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROVINCIASRowChangedEvent) Is Nothing) Then
                RaiseEvent PROVINCIASRowChanged(Me, New PROVINCIASRowChangeEvent(CType(e.Row,PROVINCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROVINCIASRowChangingEvent) Is Nothing) Then
                RaiseEvent PROVINCIASRowChanging(Me, New PROVINCIASRowChangeEvent(CType(e.Row,PROVINCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROVINCIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROVINCIASRowDeleted(Me, New PROVINCIASRowChangeEvent(CType(e.Row,PROVINCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROVINCIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROVINCIASRowDeleting(Me, New PROVINCIASRowChangeEvent(CType(e.Row,PROVINCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePROVINCIASRow(ByVal row As PROVINCIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROVINCIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CIUDADESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CIUDADESRow)
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CIUDADES As Global.System.Data.DataColumn
        
        Private columnESTADO_CIUDADES As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIAS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CIUDADES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_CIUDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CIUDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CIUDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CIUDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CIUDADESRow
            Get
                Return CType(Me.Rows(index),CIUDADESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowChanging As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowChanged As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowDeleting As CIUDADESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CIUDADESRowDeleted As CIUDADESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCIUDADESRow(ByVal row As CIUDADESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCIUDADESRow(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer) As CIUDADESRow
            Dim rowCIUDADESRow As CIUDADESRow = CType(Me.NewRow,CIUDADESRow)
            Dim columnValuesArray() As Object = New Object() {ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS}
            rowCIUDADESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCIUDADESRow)
            Return rowCIUDADESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CIUDAD(ByVal ID_CIUDAD As Integer) As CIUDADESRow
            Return CType(Me.Rows.Find(New Object() {ID_CIUDAD}),CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CIUDADESDataTable = CType(MyBase.Clone,CIUDADESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CIUDADESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnNOMBRE_CIUDADES = MyBase.Columns("NOMBRE_CIUDADES")
            Me.columnESTADO_CIUDADES = MyBase.Columns("ESTADO_CIUDADES")
            Me.columnID_PROVINCIAS = MyBase.Columns("ID_PROVINCIAS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnNOMBRE_CIUDADES = New Global.System.Data.DataColumn("NOMBRE_CIUDADES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CIUDADES)
            Me.columnESTADO_CIUDADES = New Global.System.Data.DataColumn("ESTADO_CIUDADES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CIUDADES)
            Me.columnID_PROVINCIAS = New Global.System.Data.DataColumn("ID_PROVINCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIAS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CIUDAD}, true))
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_CIUDAD.Unique = true
            Me.columnNOMBRE_CIUDADES.AllowDBNull = false
            Me.columnNOMBRE_CIUDADES.MaxLength = 2147483647
            Me.columnESTADO_CIUDADES.AllowDBNull = false
            Me.columnID_PROVINCIAS.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCIUDADESRow() As CIUDADESRow
            Return CType(Me.NewRow,CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CIUDADESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CIUDADESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CIUDADESRowChangedEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowChanged(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CIUDADESRowChangingEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowChanging(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CIUDADESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowDeleted(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CIUDADESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CIUDADESRowDeleting(Me, New CIUDADESRowChangeEvent(CType(e.Row,CIUDADESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCIUDADESRow(ByVal row As CIUDADESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CIUDADESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PARROQUIASDataTable
        Inherits Global.System.Data.TypedTableBase(Of PARROQUIASRow)
        
        Private columnID_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnNOMBRE_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnESTADO_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PARROQUIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PARROQUIASRow
            Get
                Return CType(Me.Rows(index),PARROQUIASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PARROQUIASRowChanging As PARROQUIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PARROQUIASRowChanged As PARROQUIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PARROQUIASRowDeleting As PARROQUIASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PARROQUIASRowDeleted As PARROQUIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPARROQUIASRow(ByVal row As PARROQUIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPARROQUIASRow(ByVal ID_PARROQUIAS As Integer, ByVal NOMBRE_PARROQUIAS As String, ByVal ESTADO_PARROQUIAS As Integer, ByVal ID_CIUDAD As Integer) As PARROQUIASRow
            Dim rowPARROQUIASRow As PARROQUIASRow = CType(Me.NewRow,PARROQUIASRow)
            Dim columnValuesArray() As Object = New Object() {ID_PARROQUIAS, NOMBRE_PARROQUIAS, ESTADO_PARROQUIAS, ID_CIUDAD}
            rowPARROQUIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPARROQUIASRow)
            Return rowPARROQUIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_PARROQUIAS(ByVal ID_PARROQUIAS As Integer) As PARROQUIASRow
            Return CType(Me.Rows.Find(New Object() {ID_PARROQUIAS}),PARROQUIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PARROQUIASDataTable = CType(MyBase.Clone,PARROQUIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PARROQUIASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_PARROQUIAS = MyBase.Columns("ID_PARROQUIAS")
            Me.columnNOMBRE_PARROQUIAS = MyBase.Columns("NOMBRE_PARROQUIAS")
            Me.columnESTADO_PARROQUIAS = MyBase.Columns("ESTADO_PARROQUIAS")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_PARROQUIAS = New Global.System.Data.DataColumn("ID_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARROQUIAS)
            Me.columnNOMBRE_PARROQUIAS = New Global.System.Data.DataColumn("NOMBRE_PARROQUIAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_PARROQUIAS)
            Me.columnESTADO_PARROQUIAS = New Global.System.Data.DataColumn("ESTADO_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_PARROQUIAS)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_PARROQUIAS}, true))
            Me.columnID_PARROQUIAS.AllowDBNull = false
            Me.columnID_PARROQUIAS.Unique = true
            Me.columnNOMBRE_PARROQUIAS.AllowDBNull = false
            Me.columnNOMBRE_PARROQUIAS.MaxLength = 2147483647
            Me.columnESTADO_PARROQUIAS.AllowDBNull = false
            Me.columnID_CIUDAD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPARROQUIASRow() As PARROQUIASRow
            Return CType(Me.NewRow,PARROQUIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PARROQUIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PARROQUIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PARROQUIASRowChangedEvent) Is Nothing) Then
                RaiseEvent PARROQUIASRowChanged(Me, New PARROQUIASRowChangeEvent(CType(e.Row,PARROQUIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PARROQUIASRowChangingEvent) Is Nothing) Then
                RaiseEvent PARROQUIASRowChanging(Me, New PARROQUIASRowChangeEvent(CType(e.Row,PARROQUIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PARROQUIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent PARROQUIASRowDeleted(Me, New PARROQUIASRowChangeEvent(CType(e.Row,PARROQUIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PARROQUIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent PARROQUIASRowDeleting(Me, New PARROQUIASRowChangeEvent(CType(e.Row,PARROQUIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePARROQUIASRow(ByVal row As PARROQUIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PARROQUIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJA_CHICADataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJA_CHICARow)
        
        Private columnID_CAJA_CHICA As Global.System.Data.DataColumn
        
        Private columnDETALLE_CAJA_CHICA As Global.System.Data.DataColumn
        
        Private columnMONTO_CAJA_CHICA As Global.System.Data.DataColumn
        
        Private columnVALOR_GASTO As Global.System.Data.DataColumn
        
        Private columnCTA_CONTABLE As Global.System.Data.DataColumn
        
        Private columnTIPO_CTA As Global.System.Data.DataColumn
        
        Private columnNIVEL_CTA As Global.System.Data.DataColumn
        
        Private columnESTADO_CAJA_CHICA As Global.System.Data.DataColumn
        
        Private columnID_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnID_PROVINCIAS As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnID_PARROQUIAS As Global.System.Data.DataColumn
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJA_CHICA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CAJA_CHICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CAJA_CHICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DETALLE_CAJA_CHICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_CAJA_CHICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MONTO_CAJA_CHICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTO_CAJA_CHICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property VALOR_GASTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_GASTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CTA_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_CTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NIVEL_CTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL_CTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CAJA_CHICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CAJA_CHICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PROVINCIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PROVINCIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PARROQUIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PARROQUIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJA_CHICARow
            Get
                Return CType(Me.Rows(index),CAJA_CHICARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CAJA_CHICARowChanging As CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CAJA_CHICARowChanged As CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CAJA_CHICARowDeleting As CAJA_CHICARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CAJA_CHICARowDeleted As CAJA_CHICARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCAJA_CHICARow(ByVal row As CAJA_CHICARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCAJA_CHICARow(ByVal ID_CAJA_CHICA As Integer, ByVal DETALLE_CAJA_CHICA As String, ByVal MONTO_CAJA_CHICA As Decimal, ByVal VALOR_GASTO As Decimal, ByVal CTA_CONTABLE As String, ByVal TIPO_CTA As Integer, ByVal NIVEL_CTA As Integer, ByVal ESTADO_CAJA_CHICA As Integer, ByVal ID_CENTRO_COSTO As Integer, ByVal ID_PROVINCIAS As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ID_PERSONAL As Integer) As CAJA_CHICARow
            Dim rowCAJA_CHICARow As CAJA_CHICARow = CType(Me.NewRow,CAJA_CHICARow)
            Dim columnValuesArray() As Object = New Object() {ID_CAJA_CHICA, DETALLE_CAJA_CHICA, MONTO_CAJA_CHICA, VALOR_GASTO, CTA_CONTABLE, TIPO_CTA, NIVEL_CTA, ESTADO_CAJA_CHICA, ID_CENTRO_COSTO, ID_PROVINCIAS, ID_CIUDAD, ID_PARROQUIAS, ID_PERSONAL}
            rowCAJA_CHICARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJA_CHICARow)
            Return rowCAJA_CHICARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CAJA_CHICA(ByVal ID_CAJA_CHICA As Integer) As CAJA_CHICARow
            Return CType(Me.Rows.Find(New Object() {ID_CAJA_CHICA}),CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJA_CHICADataTable = CType(MyBase.Clone,CAJA_CHICADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJA_CHICADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CAJA_CHICA = MyBase.Columns("ID_CAJA_CHICA")
            Me.columnDETALLE_CAJA_CHICA = MyBase.Columns("DETALLE_CAJA_CHICA")
            Me.columnMONTO_CAJA_CHICA = MyBase.Columns("MONTO_CAJA_CHICA")
            Me.columnVALOR_GASTO = MyBase.Columns("VALOR_GASTO")
            Me.columnCTA_CONTABLE = MyBase.Columns("CTA_CONTABLE")
            Me.columnTIPO_CTA = MyBase.Columns("TIPO_CTA")
            Me.columnNIVEL_CTA = MyBase.Columns("NIVEL_CTA")
            Me.columnESTADO_CAJA_CHICA = MyBase.Columns("ESTADO_CAJA_CHICA")
            Me.columnID_CENTRO_COSTO = MyBase.Columns("ID_CENTRO_COSTO")
            Me.columnID_PROVINCIAS = MyBase.Columns("ID_PROVINCIAS")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnID_PARROQUIAS = MyBase.Columns("ID_PARROQUIAS")
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CAJA_CHICA = New Global.System.Data.DataColumn("ID_CAJA_CHICA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CAJA_CHICA)
            Me.columnDETALLE_CAJA_CHICA = New Global.System.Data.DataColumn("DETALLE_CAJA_CHICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_CAJA_CHICA)
            Me.columnMONTO_CAJA_CHICA = New Global.System.Data.DataColumn("MONTO_CAJA_CHICA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTO_CAJA_CHICA)
            Me.columnVALOR_GASTO = New Global.System.Data.DataColumn("VALOR_GASTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_GASTO)
            Me.columnCTA_CONTABLE = New Global.System.Data.DataColumn("CTA_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_CONTABLE)
            Me.columnTIPO_CTA = New Global.System.Data.DataColumn("TIPO_CTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CTA)
            Me.columnNIVEL_CTA = New Global.System.Data.DataColumn("NIVEL_CTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL_CTA)
            Me.columnESTADO_CAJA_CHICA = New Global.System.Data.DataColumn("ESTADO_CAJA_CHICA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CAJA_CHICA)
            Me.columnID_CENTRO_COSTO = New Global.System.Data.DataColumn("ID_CENTRO_COSTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CENTRO_COSTO)
            Me.columnID_PROVINCIAS = New Global.System.Data.DataColumn("ID_PROVINCIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PROVINCIAS)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnID_PARROQUIAS = New Global.System.Data.DataColumn("ID_PARROQUIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PARROQUIAS)
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CAJA_CHICA}, true))
            Me.columnID_CAJA_CHICA.AllowDBNull = false
            Me.columnID_CAJA_CHICA.Unique = true
            Me.columnDETALLE_CAJA_CHICA.AllowDBNull = false
            Me.columnDETALLE_CAJA_CHICA.MaxLength = 2147483647
            Me.columnMONTO_CAJA_CHICA.AllowDBNull = false
            Me.columnVALOR_GASTO.AllowDBNull = false
            Me.columnCTA_CONTABLE.AllowDBNull = false
            Me.columnCTA_CONTABLE.MaxLength = 2147483647
            Me.columnTIPO_CTA.AllowDBNull = false
            Me.columnNIVEL_CTA.AllowDBNull = false
            Me.columnESTADO_CAJA_CHICA.AllowDBNull = false
            Me.columnID_CENTRO_COSTO.AllowDBNull = false
            Me.columnID_PROVINCIAS.AllowDBNull = false
            Me.columnID_CIUDAD.AllowDBNull = false
            Me.columnID_PARROQUIAS.AllowDBNull = false
            Me.columnID_PERSONAL.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCAJA_CHICARow() As CAJA_CHICARow
            Return CType(Me.NewRow,CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJA_CHICARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJA_CHICARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJA_CHICARowChangedEvent) Is Nothing) Then
                RaiseEvent CAJA_CHICARowChanged(Me, New CAJA_CHICARowChangeEvent(CType(e.Row,CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJA_CHICARowChangingEvent) Is Nothing) Then
                RaiseEvent CAJA_CHICARowChanging(Me, New CAJA_CHICARowChangeEvent(CType(e.Row,CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJA_CHICARowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJA_CHICARowDeleted(Me, New CAJA_CHICARowChangeEvent(CType(e.Row,CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJA_CHICARowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJA_CHICARowDeleting(Me, New CAJA_CHICARowChangeEvent(CType(e.Row,CAJA_CHICARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCAJA_CHICARow(ByVal row As CAJA_CHICARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJA_CHICADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CENTRO_COSTODataTable
        Inherits Global.System.Data.TypedTableBase(Of CENTRO_COSTORow)
        
        Private columnID_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnDETALLE_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnCODIGO_CENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnESTADO_CENTRO_COSTO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CENTRO_COSTO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DETALLE_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CENTRO_COSTORow
            Get
                Return CType(Me.Rows(index),CENTRO_COSTORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CENTRO_COSTORowChanging As CENTRO_COSTORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CENTRO_COSTORowChanged As CENTRO_COSTORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CENTRO_COSTORowDeleting As CENTRO_COSTORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CENTRO_COSTORowDeleted As CENTRO_COSTORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCENTRO_COSTORow(ByVal row As CENTRO_COSTORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCENTRO_COSTORow(ByVal ID_CENTRO_COSTO As Integer, ByVal DETALLE_CENTRO_COSTO As String, ByVal CODIGO_CENTRO_COSTO As String, ByVal ESTADO_CENTRO_COSTO As Integer) As CENTRO_COSTORow
            Dim rowCENTRO_COSTORow As CENTRO_COSTORow = CType(Me.NewRow,CENTRO_COSTORow)
            Dim columnValuesArray() As Object = New Object() {ID_CENTRO_COSTO, DETALLE_CENTRO_COSTO, CODIGO_CENTRO_COSTO, ESTADO_CENTRO_COSTO}
            rowCENTRO_COSTORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCENTRO_COSTORow)
            Return rowCENTRO_COSTORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CENTRO_COSTO(ByVal ID_CENTRO_COSTO As Integer) As CENTRO_COSTORow
            Return CType(Me.Rows.Find(New Object() {ID_CENTRO_COSTO}),CENTRO_COSTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CENTRO_COSTODataTable = CType(MyBase.Clone,CENTRO_COSTODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CENTRO_COSTODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CENTRO_COSTO = MyBase.Columns("ID_CENTRO_COSTO")
            Me.columnDETALLE_CENTRO_COSTO = MyBase.Columns("DETALLE_CENTRO_COSTO")
            Me.columnCODIGO_CENTRO_COSTO = MyBase.Columns("CODIGO_CENTRO_COSTO")
            Me.columnESTADO_CENTRO_COSTO = MyBase.Columns("ESTADO_CENTRO_COSTO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CENTRO_COSTO = New Global.System.Data.DataColumn("ID_CENTRO_COSTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CENTRO_COSTO)
            Me.columnDETALLE_CENTRO_COSTO = New Global.System.Data.DataColumn("DETALLE_CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_CENTRO_COSTO)
            Me.columnCODIGO_CENTRO_COSTO = New Global.System.Data.DataColumn("CODIGO_CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CENTRO_COSTO)
            Me.columnESTADO_CENTRO_COSTO = New Global.System.Data.DataColumn("ESTADO_CENTRO_COSTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CENTRO_COSTO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CENTRO_COSTO}, true))
            Me.columnID_CENTRO_COSTO.AllowDBNull = false
            Me.columnID_CENTRO_COSTO.Unique = true
            Me.columnDETALLE_CENTRO_COSTO.AllowDBNull = false
            Me.columnDETALLE_CENTRO_COSTO.MaxLength = 2147483647
            Me.columnCODIGO_CENTRO_COSTO.AllowDBNull = false
            Me.columnCODIGO_CENTRO_COSTO.MaxLength = 2147483647
            Me.columnESTADO_CENTRO_COSTO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCENTRO_COSTORow() As CENTRO_COSTORow
            Return CType(Me.NewRow,CENTRO_COSTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CENTRO_COSTORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CENTRO_COSTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CENTRO_COSTORowChangedEvent) Is Nothing) Then
                RaiseEvent CENTRO_COSTORowChanged(Me, New CENTRO_COSTORowChangeEvent(CType(e.Row,CENTRO_COSTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CENTRO_COSTORowChangingEvent) Is Nothing) Then
                RaiseEvent CENTRO_COSTORowChanging(Me, New CENTRO_COSTORowChangeEvent(CType(e.Row,CENTRO_COSTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CENTRO_COSTORowDeletedEvent) Is Nothing) Then
                RaiseEvent CENTRO_COSTORowDeleted(Me, New CENTRO_COSTORowChangeEvent(CType(e.Row,CENTRO_COSTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CENTRO_COSTORowDeletingEvent) Is Nothing) Then
                RaiseEvent CENTRO_COSTORowDeleting(Me, New CENTRO_COSTORowChangeEvent(CType(e.Row,CENTRO_COSTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCENTRO_COSTORow(ByVal row As CENTRO_COSTORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetControlCombustibleCajaChica = New DataSetControlCombustibleCajaChica()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CENTRO_COSTODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CONTROL_COMBUSTIBLESRow
        Inherits Global.System.Data.DataRow
        
        Private tableCONTROL_COMBUSTIBLES As CONTROL_COMBUSTIBLESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCONTROL_COMBUSTIBLES = CType(Me.Table,CONTROL_COMBUSTIBLESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CONTROL_C() As Long
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_CONTROL_CColumn),Long)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_CONTROL_C() As Date
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.FECHA_CONTROL_CColumn),Date)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.FECHA_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_CONTROL_C() As Decimal
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.VALOR_CONTROL_CColumn),Decimal)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.VALOR_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESTINO_CONTROL_C() As String
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.DESTINO_CONTROL_CColumn),String)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.DESTINO_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOTAL_KM_CONTROL_C() As Integer
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.TOTAL_KM_CONTROL_CColumn),Integer)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.TOTAL_KM_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CONTROL_C() As Integer
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ESTADO_CONTROL_CColumn),Integer)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ESTADO_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOTIVO_CONTROL_C() As String
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.MOTIVO_CONTROL_CColumn),String)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.MOTIVO_CONTROL_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SOLICITUD_FR() As Long
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_FRColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_SOLICITUD_FR' de la tabla 'CONTROL_COMBUSTIBLES' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_FRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SOLICITUD_CCH() As Long
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_CCHColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_SOLICITUD_CCH' de la tabla 'CONTROL_COMBUSTIBLES' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ACIVO_FIJO() As Integer
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_ACIVO_FIJOColumn),Integer)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_ACIVO_FIJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GASTOS_FR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_FRColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_GASTOS_FR' de la tabla 'CONTROL_COMBUSTIBLES' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_FRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GASTOS_CCH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_CCHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_GASTOS_CCH' de la tabla 'CONTROL_COMBUSTIBLES' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RESPONSABLE_AUTO_FR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_FRColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_RESPONSABLE_AUTO_FR' de la tabla 'CONTROL_COMBUSTIBLES"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_FRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RESPONSABLE_AUTO_CCH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_CCHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_RESPONSABLE_AUTO_CCH' de la tabla 'CONTROL_COMBUSTIBLE"& _ 
                            "S' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RUBRO() As Integer
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_RUBROColumn),Integer)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_RUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SALIDA_V() As Long
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_SALIDA_VColumn),Long)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LLEGADA_V() As Long
            Get
                Return CType(Me(Me.tableCONTROL_COMBUSTIBLES.ID_LLEGADA_VColumn),Long)
            End Get
            Set
                Me(Me.tableCONTROL_COMBUSTIBLES.ID_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LLEGADA_VEHICULORow() As LLEGADA_VEHICULORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO")),LLEGADA_VEHICULORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALIDA_VEHICULORow() As SALIDA_VEHICULORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO")),SALIDA_VEHICULORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VEHICULOSRow() As VEHICULOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("VEHICULOS_CONTROL_COMBUSTIBLES")),VEHICULOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("VEHICULOS_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ACTIVO_FIJO_GENERALRow() As ACTIVO_FIJO_GENERALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES")),ACTIVO_FIJO_GENERALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RUBROSRow() As RUBROSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RUBROS_CONTROL_COMBUSTIBLES")),RUBROSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RUBROS_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERSONALRow() As PERSONALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("PERSONAL_CONTROL_COMBUSTIBLES")),PERSONALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("PERSONAL_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GASTOS_CAJA_CHICARow() As GASTOS_CAJA_CHICARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES")),GASTOS_CAJA_CHICARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOLICITUD_CAJA_CHICARow() As SOLICITUD_CAJA_CHICARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES")),SOLICITUD_CAJA_CHICARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_SOLICITUD_FRNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_FRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_SOLICITUD_FRNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_FRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_SOLICITUD_CCHNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_CCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_SOLICITUD_CCHNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_SOLICITUD_CCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_GASTOS_FRNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_FRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_GASTOS_FRNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_FRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_GASTOS_CCHNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_CCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_GASTOS_CCHNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_GASTOS_CCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_RESPONSABLE_AUTO_FRNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_FRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_RESPONSABLE_AUTO_FRNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_FRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_RESPONSABLE_AUTO_CCHNull() As Boolean
            Return Me.IsNull(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_CCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_RESPONSABLE_AUTO_CCHNull()
            Me(Me.tableCONTROL_COMBUSTIBLES.ID_RESPONSABLE_AUTO_CCHColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LLEGADA_VEHICULORow
        Inherits Global.System.Data.DataRow
        
        Private tableLLEGADA_VEHICULO As LLEGADA_VEHICULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLLEGADA_VEHICULO = CType(Me.Table,LLEGADA_VEHICULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LLEGADA_V() As Long
            Get
                Return CType(Me(Me.tableLLEGADA_VEHICULO.ID_LLEGADA_VColumn),Long)
            End Get
            Set
                Me(Me.tableLLEGADA_VEHICULO.ID_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_LLEGADA_V() As Date
            Get
                Return CType(Me(Me.tableLLEGADA_VEHICULO.FECHA_LLEGADA_VColumn),Date)
            End Get
            Set
                Me(Me.tableLLEGADA_VEHICULO.FECHA_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HORA_LLEGADA_V() As String
            Get
                Return CType(Me(Me.tableLLEGADA_VEHICULO.HORA_LLEGADA_VColumn),String)
            End Get
            Set
                Me(Me.tableLLEGADA_VEHICULO.HORA_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KM_LLEGADA_V() As Integer
            Get
                Return CType(Me(Me.tableLLEGADA_VEHICULO.KM_LLEGADA_VColumn),Integer)
            End Get
            Set
                Me(Me.tableLLEGADA_VEHICULO.KM_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_LLEGADA_V() As Integer
            Get
                Return CType(Me(Me.tableLLEGADA_VEHICULO.ESTADO_LLEGADA_VColumn),Integer)
            End Get
            Set
                Me(Me.tableLLEGADA_VEHICULO.ESTADO_LLEGADA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CONTROL_COMBUSTIBLES_LLEGADA_VEHICULO")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SALIDA_VEHICULORow
        Inherits Global.System.Data.DataRow
        
        Private tableSALIDA_VEHICULO As SALIDA_VEHICULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSALIDA_VEHICULO = CType(Me.Table,SALIDA_VEHICULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SALIDA_V() As Long
            Get
                Return CType(Me(Me.tableSALIDA_VEHICULO.ID_SALIDA_VColumn),Long)
            End Get
            Set
                Me(Me.tableSALIDA_VEHICULO.ID_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SALIDA_V() As Date
            Get
                Return CType(Me(Me.tableSALIDA_VEHICULO.FECHA_SALIDA_VColumn),Date)
            End Get
            Set
                Me(Me.tableSALIDA_VEHICULO.FECHA_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HORA_SALIDA_V() As String
            Get
                Return CType(Me(Me.tableSALIDA_VEHICULO.HORA_SALIDA_VColumn),String)
            End Get
            Set
                Me(Me.tableSALIDA_VEHICULO.HORA_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KM_SALIDA_V() As Integer
            Get
                Return CType(Me(Me.tableSALIDA_VEHICULO.KM_SALIDA_VColumn),Integer)
            End Get
            Set
                Me(Me.tableSALIDA_VEHICULO.KM_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_SALIDA_V() As Integer
            Get
                Return CType(Me(Me.tableSALIDA_VEHICULO.ESTADO_SALIDA_VColumn),Integer)
            End Get
            Set
                Me(Me.tableSALIDA_VEHICULO.ESTADO_SALIDA_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CONTROL_COMBUSTIBLES_SALIDA_VEHICULO")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VEHICULOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableVEHICULOS As VEHICULOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVEHICULOS = CType(Me.Table,VEHICULOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ACTIVO_FIJO() As Integer
            Get
                Return CType(Me(Me.tableVEHICULOS.ID_ACTIVO_FIJOColumn),Integer)
            End Get
            Set
                Me(Me.tableVEHICULOS.ID_ACTIVO_FIJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MARCA() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.MARCAColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MODELO() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.MODELOColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.MODELOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SERIE() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.SERIEColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CHASIS() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.CHASISColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.CHASISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_ACTIVO() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.ESTADO_ACTIVOColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.ESTADO_ACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACAS() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.PLACASColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.PLACASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOTOR() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.MOTORColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.MOTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CILINDRAJE() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.CILINDRAJEColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.CILINDRAJEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CAPACIDAD() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.CAPACIDADColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.CAPACIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.TIPOColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COLOR() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.COLORColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.COLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ANO_FABRICACION() As Integer
            Get
                Return CType(Me(Me.tableVEHICULOS.ANO_FABRICACIONColumn),Integer)
            End Get
            Set
                Me(Me.tableVEHICULOS.ANO_FABRICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ASEGURADORA() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.ASEGURADORAColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.ASEGURADORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SEGURO() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.SEGUROColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.SEGUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BROKER() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.BROKERColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.BROKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NRO_POLIZA() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.NRO_POLIZAColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.NRO_POLIZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COSTO_PRIMA() As Decimal
            Get
                Return CType(Me(Me.tableVEHICULOS.COSTO_PRIMAColumn),Decimal)
            End Get
            Set
                Me(Me.tableVEHICULOS.COSTO_PRIMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DISPOSITIVO_SEGURIDAD() As String
            Get
                Return CType(Me(Me.tableVEHICULOS.DISPOSITIVO_SEGURIDADColumn),String)
            End Get
            Set
                Me(Me.tableVEHICULOS.DISPOSITIVO_SEGURIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_INICIO_CONTRATO() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_INICIO_CONTRATOColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_INICIO_CONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_FINAL_CONTRATO() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_FINAL_CONTRATOColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_FINAL_CONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_RENOVACION_CONTRATO() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_RENOVACION_CONTRATOColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_RENOVACION_CONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_INICIO_DIS_SEG() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_INICIO_DIS_SEGColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_INICIO_DIS_SEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_FINAL_DIS_SEG() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_FINAL_DIS_SEGColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_FINAL_DIS_SEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_RENOVACION_DIS_SEG() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.FECHA_RENOVACION_DIS_SEGColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.FECHA_RENOVACION_DIS_SEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO() As Integer
            Get
                Return CType(Me(Me.tableVEHICULOS.ESTADOColumn),Integer)
            End Get
            Set
                Me(Me.tableVEHICULOS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOAT() As Date
            Get
                Return CType(Me(Me.tableVEHICULOS.SOATColumn),Date)
            End Get
            Set
                Me(Me.tableVEHICULOS.SOATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("VEHICULOS_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("VEHICULOS_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ACTIVO_FIJO_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableACTIVO_FIJO_GENERAL As ACTIVO_FIJO_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableACTIVO_FIJO_GENERAL = CType(Me.Table,ACTIVO_FIJO_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_ACTIVO_FIJO() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_ACTIVO_FIJOColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_ACTIVO_FIJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_EMPRESA() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_EMPRESAColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SUCURSAL() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_SUCURSALColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_SUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GERENCIAS() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_GERENCIASColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_GERENCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_AREA() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ID_AREAColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ID_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARPETA() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CARPETAColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CARPETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTRATO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CONTRATOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_ACTIVO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_ACTIVOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_ACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_PROVEDOR() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_PROVEDORColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_PROVEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_CUSTODIO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_CUSTODIOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.NOMBRE_CUSTODIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RESPONSABLE() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.RESPONSABLEColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.RESPONSABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA() As Date
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_ARANCEL() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CODIGO_ARANCELColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CODIGO_ARANCELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUM_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.NUM_ORDEN_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.NUM_ORDEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUM_FACTURA() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.NUM_FACTURAColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.NUM_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_FACTURA() As Decimal
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_FACTURAColumn),Decimal)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_ADICIONAL() As Decimal
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_ADICIONALColumn),Decimal)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_ADICIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_RESIDUAL() As Decimal
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_RESIDUALColumn),Decimal)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.VALOR_RESIDUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_ADQUISICION() As Date
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.FECHA_ADQUISICIONColumn),Date)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.FECHA_ADQUISICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AÑOS_VIDA_UTIL() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.AÑOS_VIDA_UTILColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.AÑOS_VIDA_UTILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CTA_ACTIVO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CTA_ACTIVOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CTA_ACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CTA_GASTOS() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CTA_GASTOSColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CTA_GASTOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CTA_DEPRECIACION() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.CTA_DEPRECIACIONColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.CTA_DEPRECIACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO() As Integer
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ESTADOColumn),Integer)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_ACTIVO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.ESTADO_ACTIVOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.ESTADO_ACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_ACTIVO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.TIPO_ACTIVOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.TIPO_ACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MANTENIMIENTO() As String
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.MANTENIMIENTOColumn),String)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.MANTENIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_MANTENIMIENTO() As Date
            Get
                Return CType(Me(Me.tableACTIVO_FIJO_GENERAL.FECHA_MANTENIMIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableACTIVO_FIJO_GENERAL.FECHA_MANTENIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ACTIVO_FIJO_GENERAL_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RUBROSRow
        Inherits Global.System.Data.DataRow
        
        Private tableRUBROS As RUBROSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRUBROS = CType(Me.Table,RUBROSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RUBRO() As Integer
            Get
                Return CType(Me(Me.tableRUBROS.ID_RUBROColumn),Integer)
            End Get
            Set
                Me(Me.tableRUBROS.ID_RUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_RUBRO() As String
            Get
                Return CType(Me(Me.tableRUBROS.NOMBRE_RUBROColumn),String)
            End Get
            Set
                Me(Me.tableRUBROS.NOMBRE_RUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_RUBRO() As Decimal
            Get
                Return CType(Me(Me.tableRUBROS.VALOR_RUBROColumn),Decimal)
            End Get
            Set
                Me(Me.tableRUBROS.VALOR_RUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_RUBRO() As Integer
            Get
                Return CType(Me(Me.tableRUBROS.ESTADO_RUBROColumn),Integer)
            End Get
            Set
                Me(Me.tableRUBROS.ESTADO_RUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("RUBROS_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RUBROS_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PERSONALRow
        Inherits Global.System.Data.DataRow
        
        Private tablePERSONAL As PERSONALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePERSONAL = CType(Me.Table,PERSONALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.CEDULAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.CEDULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES() As String
            Get
                Return CType(Me(Me.tablePERSONAL.NOMBRESColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.NOMBRESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property APELLIDOS() As String
            Get
                Return CType(Me(Me.tablePERSONAL.APELLIDOSColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.APELLIDOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROVINCIA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PROVINCIAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.DIRECCIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_NACIMIENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_NACIMIENTO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SEXO() As String
            Get
                Return CType(Me(Me.tablePERSONAL.SEXOColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.SEXOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CIUDAD() As String
            Get
                Return CType(Me(Me.tablePERSONAL.CIUDADColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUELDO() As Decimal
            Get
                Return CType(Me(Me.tablePERSONAL.SUELDOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePERSONAL.SUELDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LIBRETA_MILITAR() As String
            Get
                Return CType(Me(Me.tablePERSONAL.LIBRETA_MILITARColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.LIBRETA_MILITARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_SANGRE() As String
            Get
                Return CType(Me(Me.tablePERSONAL.TIPO_SANGREColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.TIPO_SANGREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PASAPORTE() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PASAPORTEColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PASAPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PESO() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.PESOColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDAD() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.EDADColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.EDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRUEBA_ANTIDROGA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PRUEBA_ANTIDROGAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PRUEBA_ANTIDROGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_ENTRADA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_ENTRADAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENTRADA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_ENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SALIDA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_SALIDAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_SALIDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_SALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ESTADO_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ESTADO_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_AREA() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_AREAColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CARGO_OCUPACIONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_CARGO_OCUPACIONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_CARGO_OCUPACIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UBICACION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.UBICACIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.UBICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INSTRUCCION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.INSTRUCCIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.INSTRUCCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CIVIL() As String
            Get
                Return CType(Me(Me.tablePERSONAL.ESTADO_CIVILColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.ESTADO_CIVILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOVIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.MOVILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MOVIL' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.MOVILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TELEFONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TELEFONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_HIJOS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD_HIJOS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HISTORIA_CLINICA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HISTORIA_CLINICA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PARROQUIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.PARROQUIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PARROQUIA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.PARROQUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTATURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ESTATURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTATURA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ESTATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DISCAPACIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DISCAPACIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DISCAPACIDAD' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DISCAPACIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXAMEN_PSICOLOGICO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXAMEN_PSICOLOGICO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LUGAR_EXAMEN_PSICOLOGICO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LUGAR_EXAMEN_PSICOLOGICO' de la tabla 'PERSONAL' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARNET_CONADIS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CARNET_CONADISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CARNET_CONADIS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CARNET_CONADISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_HIJOS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_HIJOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_HIJOS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_HIJOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_ESPOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_ESPOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_ESPOSA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_ESPOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CASAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CASAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ARRIENDO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ARRIENDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ARRIENDO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ARRIENDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DEUDOR_GARANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEUDOR_GARANTE' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_DEUDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD_DEUDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property A_QUIEN_ADEUDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'A_QUIEN_ADEUDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRABAJO_ATERIORMENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TRABAJO_ATERIORMENTE' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ANTERIOR_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANTERIOR_TRABAJO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARGO_ANTERIOR_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CARGO_ANTERIOR_TRABAJO' de la tabla 'PERSONAL' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOTIVO_SALIDA_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MOTIVO_SALIDA_TRABAJO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ENTRADA_ANTERIOR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENTRADA_ANTERIOR' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALIDA_ANTERIOR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALIDA_ANTERIOR' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES_PATRONO_ANTERIOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRES_PATRONO_ANTERIOR' de la tabla 'PERSONAL' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_PATRONO_ANTERIOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_PATRONO_ANTERIOR' de la tabla 'PERSONAL' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RECOMENDACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.RECOMENDACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECOMENDACIONES' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.RECOMENDACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_FAMILIARES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_FAMILIARES' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_EMERGENCIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_EMERGENCIA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FOTO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FOTOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FOTO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FOTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFIL() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.PERFILColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PERFIL' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.PERFILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMAIL' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURSO_VIGILANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CURSO_VIGILANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CURSO_VIGILANTE' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CURSO_VIGILANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMISOR_CURSO_VIGILANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.EMISOR_CURSO_VIGILANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMISOR_CURSO_VIGILANTE' de la tabla 'PERSONAL' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.EMISOR_CURSO_VIGILANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACION' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_NACIMIENTONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_NACIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_NACIMIENTONull()
            Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_ENTRADANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_ENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_ENTRADANull()
            Me(Me.tablePERSONAL.FECHA_ENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_SALIDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_SALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_SALIDANull()
            Me(Me.tablePERSONAL.FECHA_SALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMOVILNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.MOVILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMOVILNull()
            Me(Me.tablePERSONAL.MOVILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TELEFONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONONull()
            Me(Me.tablePERSONAL.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCANTIDAD_HIJOSNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CANTIDAD_HIJOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCANTIDAD_HIJOSNull()
            Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHISTORIA_CLINICANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.HISTORIA_CLINICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHISTORIA_CLINICANull()
            Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPARROQUIANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.PARROQUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPARROQUIANull()
            Me(Me.tablePERSONAL.PARROQUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsESTATURANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ESTATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetESTATURANull()
            Me(Me.tablePERSONAL.ESTATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDISCAPACIDADNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DISCAPACIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDISCAPACIDADNull()
            Me(Me.tablePERSONAL.DISCAPACIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXAMEN_PSICOLOGICONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXAMEN_PSICOLOGICONull()
            Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLUGAR_EXAMEN_PSICOLOGICONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLUGAR_EXAMEN_PSICOLOGICONull()
            Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARNET_CONADISNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CARNET_CONADISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARNET_CONADISNull()
            Me(Me.tablePERSONAL.CARNET_CONADISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_HIJOSNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_HIJOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_HIJOSNull()
            Me(Me.tablePERSONAL.DATOS_HIJOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_ESPOSANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_ESPOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_ESPOSANull()
            Me(Me.tablePERSONAL.DATOS_ESPOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CASAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASANull()
            Me(Me.tablePERSONAL.CASAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsARRIENDONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ARRIENDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetARRIENDONull()
            Me(Me.tablePERSONAL.ARRIENDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDEUDOR_GARANTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DEUDOR_GARANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDEUDOR_GARANTENull()
            Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCANTIDAD_DEUDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CANTIDAD_DEUDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCANTIDAD_DEUDANull()
            Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsA_QUIEN_ADEUDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetA_QUIEN_ADEUDANull()
            Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRABAJO_ATERIORMENTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRABAJO_ATERIORMENTENull()
            Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsANTERIOR_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetANTERIOR_TRABAJONull()
            Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARGO_ANTERIOR_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARGO_ANTERIOR_TRABAJONull()
            Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMOTIVO_SALIDA_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMOTIVO_SALIDA_TRABAJONull()
            Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsENTRADA_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ENTRADA_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetENTRADA_ANTERIORNull()
            Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSALIDA_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.SALIDA_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSALIDA_ANTERIORNull()
            Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOMBRES_PATRONO_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOMBRES_PATRONO_ANTERIORNull()
            Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_PATRONO_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_PATRONO_ANTERIORNull()
            Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRECOMENDACIONESNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.RECOMENDACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRECOMENDACIONESNull()
            Me(Me.tablePERSONAL.RECOMENDACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_FAMILIARESNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_FAMILIARESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_FAMILIARESNull()
            Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_EMERGENCIANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_EMERGENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_EMERGENCIANull()
            Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFOTONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FOTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFOTONull()
            Me(Me.tablePERSONAL.FOTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFILNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.PERFILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFILNull()
            Me(Me.tablePERSONAL.PERFILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tablePERSONAL.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURSO_VIGILANTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CURSO_VIGILANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURSO_VIGILANTENull()
            Me(Me.tablePERSONAL.CURSO_VIGILANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMISOR_CURSO_VIGILANTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.EMISOR_CURSO_VIGILANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMISOR_CURSO_VIGILANTENull()
            Me(Me.tablePERSONAL.EMISOR_CURSO_VIGILANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tablePERSONAL.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("PERSONAL_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("PERSONAL_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GASTOS_CAJA_CHICARow
        Inherits Global.System.Data.DataRow
        
        Private tableGASTOS_CAJA_CHICA As GASTOS_CAJA_CHICADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGASTOS_CAJA_CHICA = CType(Me.Table,GASTOS_CAJA_CHICADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GASTOS_CAJA_CH() As Integer
            Get
                Return CType(Me(Me.tableGASTOS_CAJA_CHICA.ID_GASTOS_CAJA_CHColumn),Integer)
            End Get
            Set
                Me(Me.tableGASTOS_CAJA_CHICA.ID_GASTOS_CAJA_CHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_GASTO_CAJA_CH() As String
            Get
                Return CType(Me(Me.tableGASTOS_CAJA_CHICA.NOMBRE_GASTO_CAJA_CHColumn),String)
            End Get
            Set
                Me(Me.tableGASTOS_CAJA_CHICA.NOMBRE_GASTO_CAJA_CHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CTA_CONTABLE_GASTO_CAJA_CH() As String
            Get
                Return CType(Me(Me.tableGASTOS_CAJA_CHICA.CTA_CONTABLE_GASTO_CAJA_CHColumn),String)
            End Get
            Set
                Me(Me.tableGASTOS_CAJA_CHICA.CTA_CONTABLE_GASTO_CAJA_CHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PLAN() As Integer
            Get
                Return CType(Me(Me.tableGASTOS_CAJA_CHICA.ID_PLANColumn),Integer)
            End Get
            Set
                Me(Me.tableGASTOS_CAJA_CHICA.ID_PLANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO() As Integer
            Get
                Return CType(Me(Me.tableGASTOS_CAJA_CHICA.ESTADOColumn),Integer)
            End Get
            Set
                Me(Me.tableGASTOS_CAJA_CHICA.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("GASTOS_CAJA_CHICA_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SOLICITUD_CAJA_CHICARow
        Inherits Global.System.Data.DataRow
        
        Private tableSOLICITUD_CAJA_CHICA As SOLICITUD_CAJA_CHICADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSOLICITUD_CAJA_CHICA = CType(Me.Table,SOLICITUD_CAJA_CHICADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SOLICTUD_CCH() As Long
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_SOLICTUD_CCHColumn),Long)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_SOLICTUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_SOLICITUD_CCH() As Long
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.NUMERO_SOLICITUD_CCHColumn),Long)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.NUMERO_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SOLICITUD_CCH() As Date
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.FECHA_SOLICITUD_CCHColumn),Date)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.FECHA_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_SOLICITUD_CCH() As Decimal
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.VALOR_SOLICITUD_CCHColumn),Decimal)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.VALOR_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DETALLE_SOLICITUD_CCH() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.DETALLE_SOLICITUD_CCHColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.DETALLE_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COD_DEBE_CCH() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.COD_DEBE_CCHColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.COD_DEBE_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COD_HABER_CCH() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.COD_HABER_CCHColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.COD_HABER_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_SOLICITUD_CCH() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ESTADO_SOLICITUD_CCHColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ESTADO_SOLICITUD_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CAJA_CHICA() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CAJA_CHICAColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CAJA_CHICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RESPONSABLE_AUTO_CCH() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_RESPONSABLE_AUTO_CCHColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_RESPONSABLE_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CENTRO_COSTO() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CENTRO_COSTOColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GASTO_CAJA_CH() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_GASTO_CAJA_CHColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_GASTO_CAJA_CHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIA() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PROVINCIAColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES_RECIBE() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.NOMBRES_RECIBEColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.NOMBRES_RECIBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA_RECIBE() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.CEDULA_RECIBEColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.CEDULA_RECIBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES_ENTREGA() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.NOMBRES_ENTREGAColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.NOMBRES_ENTREGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA_ENTREGA() As String
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.CEDULA_ENTREGAColumn),String)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.CEDULA_ENTREGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARAMETRO_DOCUMENTOS() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PARAMETRO_DOCUMENTOSColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PARAMETRO_DOCUMENTOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NRO_PARAMETRO_DOCUMENTOS() As Long
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.NRO_PARAMETRO_DOCUMENTOSColumn),Long)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.NRO_PARAMETRO_DOCUMENTOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_LIQUIDACION() As Integer
            Get
                Return CType(Me(Me.tableSOLICITUD_CAJA_CHICA.ID_LIQUIDACIONColumn),Integer)
            End Get
            Set
                Me(Me.tableSOLICITUD_CAJA_CHICA.ID_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RESPONSABLE_AUTORIZACION_FONDO_CAJARow() As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA")),RESPONSABLE_AUTORIZACION_FONDO_CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROVINCIASRow() As PROVINCIASRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("PROVINCIAS_SOLICITUD_CAJA_CHICA")),PROVINCIASRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("PROVINCIAS_SOLICITUD_CAJA_CHICA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CIUDADESRow() As CIUDADESRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CIUDADES_SOLICITUD_CAJA_CHICA")),CIUDADESRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CIUDADES_SOLICITUD_CAJA_CHICA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PARROQUIASRow() As PARROQUIASRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("PARROQUIAS_SOLICITUD_CAJA_CHICA")),PARROQUIASRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("PARROQUIAS_SOLICITUD_CAJA_CHICA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CAJA_CHICARow() As CAJA_CHICARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA")),CAJA_CHICARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetCONTROL_COMBUSTIBLESRows() As CONTROL_COMBUSTIBLESRow()
            If (Me.Table.ChildRelations("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES") Is Nothing) Then
                Return New CONTROL_COMBUSTIBLESRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("SOLICITUD_CAJA_CHICA_CONTROL_COMBUSTIBLES")),CONTROL_COMBUSTIBLESRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RESPONSABLE_AUTORIZACION_FONDO_CAJARow
        Inherits Global.System.Data.DataRow
        
        Private tableRESPONSABLE_AUTORIZACION_FONDO_CAJA As RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA = CType(Me.Table,RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_RESPONSABLE_AUTO_CCH() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_RESPONSABLE_AUTO_CCHColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_RESPONSABLE_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES_AUTO_CCH() As String
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.NOMBRES_AUTO_CCHColumn),String)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.NOMBRES_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA_AUTO_CCH() As String
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.CEDULA_AUTO_CCHColumn),String)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.CEDULA_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIA() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PROVINCIAColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ID_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_RESPONSABLE_AUTO_CCH() As Integer
            Get
                Return CType(Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ESTADO_RESPONSABLE_AUTO_CCHColumn),Integer)
            End Get
            Set
                Me(Me.tableRESPONSABLE_AUTORIZACION_FONDO_CAJA.ESTADO_RESPONSABLE_AUTO_CCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSOLICITUD_CAJA_CHICARows() As SOLICITUD_CAJA_CHICARow()
            If (Me.Table.ChildRelations("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA") Is Nothing) Then
                Return New SOLICITUD_CAJA_CHICARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_SOLICITUD_CAJA_CHICA_RESPONSABLE_AUTORIZACION_FONDO_CAJA")),SOLICITUD_CAJA_CHICARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROVINCIASRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROVINCIAS As PROVINCIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROVINCIAS = CType(Me.Table,PROVINCIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIAS() As Integer
            Get
                Return CType(Me(Me.tablePROVINCIAS.ID_PROVINCIASColumn),Integer)
            End Get
            Set
                Me(Me.tablePROVINCIAS.ID_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_PROVINCIAS() As String
            Get
                Return CType(Me(Me.tablePROVINCIAS.NOMBRE_PROVINCIASColumn),String)
            End Get
            Set
                Me(Me.tablePROVINCIAS.NOMBRE_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_PROVINCIAS() As Integer
            Get
                Return CType(Me(Me.tablePROVINCIAS.ESTADO_PROVINCIASColumn),Integer)
            End Get
            Set
                Me(Me.tablePROVINCIAS.ESTADO_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PAISES() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROVINCIAS.ID_PAISESColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_PAISES' de la tabla 'PROVINCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROVINCIAS.ID_PAISESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_PAISESNull() As Boolean
            Return Me.IsNull(Me.tablePROVINCIAS.ID_PAISESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_PAISESNull()
            Me(Me.tablePROVINCIAS.ID_PAISESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSOLICITUD_CAJA_CHICARows() As SOLICITUD_CAJA_CHICARow()
            If (Me.Table.ChildRelations("PROVINCIAS_SOLICITUD_CAJA_CHICA") Is Nothing) Then
                Return New SOLICITUD_CAJA_CHICARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("PROVINCIAS_SOLICITUD_CAJA_CHICA")),SOLICITUD_CAJA_CHICARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CIUDADESRow
        Inherits Global.System.Data.DataRow
        
        Private tableCIUDADES As CIUDADESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCIUDADES = CType(Me.Table,CIUDADESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_CIUDADES() As String
            Get
                Return CType(Me(Me.tableCIUDADES.NOMBRE_CIUDADESColumn),String)
            End Get
            Set
                Me(Me.tableCIUDADES.NOMBRE_CIUDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CIUDADES() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ESTADO_CIUDADESColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ESTADO_CIUDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIAS() As Integer
            Get
                Return CType(Me(Me.tableCIUDADES.ID_PROVINCIASColumn),Integer)
            End Get
            Set
                Me(Me.tableCIUDADES.ID_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSOLICITUD_CAJA_CHICARows() As SOLICITUD_CAJA_CHICARow()
            If (Me.Table.ChildRelations("CIUDADES_SOLICITUD_CAJA_CHICA") Is Nothing) Then
                Return New SOLICITUD_CAJA_CHICARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CIUDADES_SOLICITUD_CAJA_CHICA")),SOLICITUD_CAJA_CHICARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PARROQUIASRow
        Inherits Global.System.Data.DataRow
        
        Private tablePARROQUIAS As PARROQUIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePARROQUIAS = CType(Me.Table,PARROQUIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tablePARROQUIAS.ID_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tablePARROQUIAS.ID_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_PARROQUIAS() As String
            Get
                Return CType(Me(Me.tablePARROQUIAS.NOMBRE_PARROQUIASColumn),String)
            End Get
            Set
                Me(Me.tablePARROQUIAS.NOMBRE_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tablePARROQUIAS.ESTADO_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tablePARROQUIAS.ESTADO_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tablePARROQUIAS.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tablePARROQUIAS.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSOLICITUD_CAJA_CHICARows() As SOLICITUD_CAJA_CHICARow()
            If (Me.Table.ChildRelations("PARROQUIAS_SOLICITUD_CAJA_CHICA") Is Nothing) Then
                Return New SOLICITUD_CAJA_CHICARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("PARROQUIAS_SOLICITUD_CAJA_CHICA")),SOLICITUD_CAJA_CHICARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJA_CHICARow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJA_CHICA As CAJA_CHICADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJA_CHICA = CType(Me.Table,CAJA_CHICADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CAJA_CHICA() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_CAJA_CHICAColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_CAJA_CHICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DETALLE_CAJA_CHICA() As String
            Get
                Return CType(Me(Me.tableCAJA_CHICA.DETALLE_CAJA_CHICAColumn),String)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.DETALLE_CAJA_CHICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MONTO_CAJA_CHICA() As Decimal
            Get
                Return CType(Me(Me.tableCAJA_CHICA.MONTO_CAJA_CHICAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.MONTO_CAJA_CHICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property VALOR_GASTO() As Decimal
            Get
                Return CType(Me(Me.tableCAJA_CHICA.VALOR_GASTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.VALOR_GASTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CTA_CONTABLE() As String
            Get
                Return CType(Me(Me.tableCAJA_CHICA.CTA_CONTABLEColumn),String)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.CTA_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_CTA() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.TIPO_CTAColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.TIPO_CTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NIVEL_CTA() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.NIVEL_CTAColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.NIVEL_CTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CAJA_CHICA() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ESTADO_CAJA_CHICAColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ESTADO_CAJA_CHICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CENTRO_COSTO() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_CENTRO_COSTOColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PROVINCIAS() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_PROVINCIASColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_PROVINCIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_CIUDADColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PARROQUIAS() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_PARROQUIASColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_PARROQUIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tableCAJA_CHICA.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tableCAJA_CHICA.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSOLICITUD_CAJA_CHICARows() As SOLICITUD_CAJA_CHICARow()
            If (Me.Table.ChildRelations("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA") Is Nothing) Then
                Return New SOLICITUD_CAJA_CHICARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_SOLICITUD_CAJA_CHICA_CAJA_CHICA")),SOLICITUD_CAJA_CHICARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CENTRO_COSTORow
        Inherits Global.System.Data.DataRow
        
        Private tableCENTRO_COSTO As CENTRO_COSTODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCENTRO_COSTO = CType(Me.Table,CENTRO_COSTODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CENTRO_COSTO() As Integer
            Get
                Return CType(Me(Me.tableCENTRO_COSTO.ID_CENTRO_COSTOColumn),Integer)
            End Get
            Set
                Me(Me.tableCENTRO_COSTO.ID_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DETALLE_CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableCENTRO_COSTO.DETALLE_CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableCENTRO_COSTO.DETALLE_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableCENTRO_COSTO.CODIGO_CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableCENTRO_COSTO.CODIGO_CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CENTRO_COSTO() As Integer
            Get
                Return CType(Me(Me.tableCENTRO_COSTO.ESTADO_CENTRO_COSTOColumn),Integer)
            End Get
            Set
                Me(Me.tableCENTRO_COSTO.ESTADO_CENTRO_COSTOColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CONTROL_COMBUSTIBLESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CONTROL_COMBUSTIBLESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CONTROL_COMBUSTIBLESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CONTROL_COMBUSTIBLESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class LLEGADA_VEHICULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LLEGADA_VEHICULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As LLEGADA_VEHICULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As LLEGADA_VEHICULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class SALIDA_VEHICULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SALIDA_VEHICULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As SALIDA_VEHICULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As SALIDA_VEHICULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class VEHICULOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VEHICULOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As VEHICULOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As VEHICULOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ACTIVO_FIJO_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ACTIVO_FIJO_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ACTIVO_FIJO_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ACTIVO_FIJO_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RUBROSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RUBROSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RUBROSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RUBROSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PERSONALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PERSONALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PERSONALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PERSONALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class GASTOS_CAJA_CHICARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GASTOS_CAJA_CHICARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As GASTOS_CAJA_CHICARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As GASTOS_CAJA_CHICARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class SOLICITUD_CAJA_CHICARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SOLICITUD_CAJA_CHICARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As SOLICITUD_CAJA_CHICARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As SOLICITUD_CAJA_CHICARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RESPONSABLE_AUTORIZACION_FONDO_CAJARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RESPONSABLE_AUTORIZACION_FONDO_CAJARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RESPONSABLE_AUTORIZACION_FONDO_CAJARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PROVINCIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROVINCIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PROVINCIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PROVINCIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CIUDADESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CIUDADESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CIUDADESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CIUDADESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PARROQUIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PARROQUIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PARROQUIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PARROQUIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CAJA_CHICARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJA_CHICARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CAJA_CHICARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CAJA_CHICARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CENTRO_COSTORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CENTRO_COSTORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CENTRO_COSTORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CENTRO_COSTORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSetControlCombustibleCajaChicaTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CONTROL_COMBUSTIBLESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CONTROL_COMBUSTIBLES"
            tableMapping.ColumnMappings.Add("ID_CONTROL_C", "ID_CONTROL_C")
            tableMapping.ColumnMappings.Add("FECHA_CONTROL_C", "FECHA_CONTROL_C")
            tableMapping.ColumnMappings.Add("VALOR_CONTROL_C", "VALOR_CONTROL_C")
            tableMapping.ColumnMappings.Add("DESTINO_CONTROL_C", "DESTINO_CONTROL_C")
            tableMapping.ColumnMappings.Add("TOTAL_KM_CONTROL_C", "TOTAL_KM_CONTROL_C")
            tableMapping.ColumnMappings.Add("ESTADO_CONTROL_C", "ESTADO_CONTROL_C")
            tableMapping.ColumnMappings.Add("MOTIVO_CONTROL_C", "MOTIVO_CONTROL_C")
            tableMapping.ColumnMappings.Add("ID_SOLICITUD_FR", "ID_SOLICITUD_FR")
            tableMapping.ColumnMappings.Add("ID_SOLICITUD_CCH", "ID_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("ID_ACIVO_FIJO", "ID_ACIVO_FIJO")
            tableMapping.ColumnMappings.Add("ID_GASTOS_FR", "ID_GASTOS_FR")
            tableMapping.ColumnMappings.Add("ID_GASTOS_CCH", "ID_GASTOS_CCH")
            tableMapping.ColumnMappings.Add("ID_RESPONSABLE_AUTO_FR", "ID_RESPONSABLE_AUTO_FR")
            tableMapping.ColumnMappings.Add("ID_RESPONSABLE_AUTO_CCH", "ID_RESPONSABLE_AUTO_CCH")
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("ID_RUBRO", "ID_RUBRO")
            tableMapping.ColumnMappings.Add("ID_SALIDA_V", "ID_SALIDA_V")
            tableMapping.ColumnMappings.Add("ID_LLEGADA_V", "ID_LLEGADA_V")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CONTROL_COMBUSTIBLES] WHERE (([ID_CONTROL_C] = @Original_ID_CO"& _ 
                "NTROL_C) AND ([FECHA_CONTROL_C] = @Original_FECHA_CONTROL_C) AND ([VALOR_CONTROL"& _ 
                "_C] = @Original_VALOR_CONTROL_C) AND ([TOTAL_KM_CONTROL_C] = @Original_TOTAL_KM_"& _ 
                "CONTROL_C) AND ([ESTADO_CONTROL_C] = @Original_ESTADO_CONTROL_C) AND ((@IsNull_I"& _ 
                "D_SOLICITUD_FR = 1 AND [ID_SOLICITUD_FR] IS NULL) OR ([ID_SOLICITUD_FR] = @Origi"& _ 
                "nal_ID_SOLICITUD_FR)) AND ((@IsNull_ID_SOLICITUD_CCH = 1 AND [ID_SOLICITUD_CCH] "& _ 
                "IS NULL) OR ([ID_SOLICITUD_CCH] = @Original_ID_SOLICITUD_CCH)) AND ([ID_ACIVO_FI"& _ 
                "JO] = @Original_ID_ACIVO_FIJO) AND ((@IsNull_ID_GASTOS_FR = 1 AND [ID_GASTOS_FR]"& _ 
                " IS NULL) OR ([ID_GASTOS_FR] = @Original_ID_GASTOS_FR)) AND ((@IsNull_ID_GASTOS_"& _ 
                "CCH = 1 AND [ID_GASTOS_CCH] IS NULL) OR ([ID_GASTOS_CCH] = @Original_ID_GASTOS_C"& _ 
                "CH)) AND ((@IsNull_ID_RESPONSABLE_AUTO_FR = 1 AND [ID_RESPONSABLE_AUTO_FR] IS NU"& _ 
                "LL) OR ([ID_RESPONSABLE_AUTO_FR] = @Original_ID_RESPONSABLE_AUTO_FR)) AND ((@IsN"& _ 
                "ull_ID_RESPONSABLE_AUTO_CCH = 1 AND [ID_RESPONSABLE_AUTO_CCH] IS NULL) OR ([ID_R"& _ 
                "ESPONSABLE_AUTO_CCH] = @Original_ID_RESPONSABLE_AUTO_CCH)) AND ([ID_PERSONAL] = "& _ 
                "@Original_ID_PERSONAL) AND ([ID_RUBRO] = @Original_ID_RUBRO) AND ([ID_SALIDA_V] "& _ 
                "= @Original_ID_SALIDA_V) AND ([ID_LLEGADA_V] = @Original_ID_LLEGADA_V))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CONTROL_C", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_CONTROL_C", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_CONTROL_C", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_KM_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTAL_KM_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_SOLICITUD_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICITUD_FR", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ACIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACIVO_FIJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CONTROL_COMBUSTIBLES] ([ID_CONTROL_C], [FECHA_CONTROL_C], [VAL"& _ 
                "OR_CONTROL_C], [DESTINO_CONTROL_C], [TOTAL_KM_CONTROL_C], [ESTADO_CONTROL_C], [M"& _ 
                "OTIVO_CONTROL_C], [ID_SOLICITUD_FR], [ID_SOLICITUD_CCH], [ID_ACIVO_FIJO], [ID_GA"& _ 
                "STOS_FR], [ID_GASTOS_CCH], [ID_RESPONSABLE_AUTO_FR], [ID_RESPONSABLE_AUTO_CCH], "& _ 
                "[ID_PERSONAL], [ID_RUBRO], [ID_SALIDA_V], [ID_LLEGADA_V]) VALUES (@ID_CONTROL_C,"& _ 
                " @FECHA_CONTROL_C, @VALOR_CONTROL_C, @DESTINO_CONTROL_C, @TOTAL_KM_CONTROL_C, @E"& _ 
                "STADO_CONTROL_C, @MOTIVO_CONTROL_C, @ID_SOLICITUD_FR, @ID_SOLICITUD_CCH, @ID_ACI"& _ 
                "VO_FIJO, @ID_GASTOS_FR, @ID_GASTOS_CCH, @ID_RESPONSABLE_AUTO_FR, @ID_RESPONSABLE"& _ 
                "_AUTO_CCH, @ID_PERSONAL, @ID_RUBRO, @ID_SALIDA_V, @ID_LLEGADA_V);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CON"& _ 
                "TROL_C, FECHA_CONTROL_C, VALOR_CONTROL_C, DESTINO_CONTROL_C, TOTAL_KM_CONTROL_C,"& _ 
                " ESTADO_CONTROL_C, MOTIVO_CONTROL_C, ID_SOLICITUD_FR, ID_SOLICITUD_CCH, ID_ACIVO"& _ 
                "_FIJO, ID_GASTOS_FR, ID_GASTOS_CCH, ID_RESPONSABLE_AUTO_FR, ID_RESPONSABLE_AUTO_"& _ 
                "CCH, ID_PERSONAL, ID_RUBRO, ID_SALIDA_V, ID_LLEGADA_V FROM CONTROL_COMBUSTIBLES "& _ 
                "WHERE (ID_CONTROL_C = @ID_CONTROL_C)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CONTROL_C", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_CONTROL_C", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_CONTROL_C", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTINO_CONTROL_C", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_KM_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTAL_KM_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_CONTROL_C", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICITUD_FR", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ACIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACIVO_FIJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CONTROL_COMBUSTIBLES] SET [ID_CONTROL_C] = @ID_CONTROL_C, [FECHA_CO"& _ 
                "NTROL_C] = @FECHA_CONTROL_C, [VALOR_CONTROL_C] = @VALOR_CONTROL_C, [DESTINO_CONT"& _ 
                "ROL_C] = @DESTINO_CONTROL_C, [TOTAL_KM_CONTROL_C] = @TOTAL_KM_CONTROL_C, [ESTADO"& _ 
                "_CONTROL_C] = @ESTADO_CONTROL_C, [MOTIVO_CONTROL_C] = @MOTIVO_CONTROL_C, [ID_SOL"& _ 
                "ICITUD_FR] = @ID_SOLICITUD_FR, [ID_SOLICITUD_CCH] = @ID_SOLICITUD_CCH, [ID_ACIVO"& _ 
                "_FIJO] = @ID_ACIVO_FIJO, [ID_GASTOS_FR] = @ID_GASTOS_FR, [ID_GASTOS_CCH] = @ID_G"& _ 
                "ASTOS_CCH, [ID_RESPONSABLE_AUTO_FR] = @ID_RESPONSABLE_AUTO_FR, [ID_RESPONSABLE_A"& _ 
                "UTO_CCH] = @ID_RESPONSABLE_AUTO_CCH, [ID_PERSONAL] = @ID_PERSONAL, [ID_RUBRO] = "& _ 
                "@ID_RUBRO, [ID_SALIDA_V] = @ID_SALIDA_V, [ID_LLEGADA_V] = @ID_LLEGADA_V WHERE (("& _ 
                "[ID_CONTROL_C] = @Original_ID_CONTROL_C) AND ([FECHA_CONTROL_C] = @Original_FECH"& _ 
                "A_CONTROL_C) AND ([VALOR_CONTROL_C] = @Original_VALOR_CONTROL_C) AND ([TOTAL_KM_"& _ 
                "CONTROL_C] = @Original_TOTAL_KM_CONTROL_C) AND ([ESTADO_CONTROL_C] = @Original_E"& _ 
                "STADO_CONTROL_C) AND ((@IsNull_ID_SOLICITUD_FR = 1 AND [ID_SOLICITUD_FR] IS NULL"& _ 
                ") OR ([ID_SOLICITUD_FR] = @Original_ID_SOLICITUD_FR)) AND ((@IsNull_ID_SOLICITUD"& _ 
                "_CCH = 1 AND [ID_SOLICITUD_CCH] IS NULL) OR ([ID_SOLICITUD_CCH] = @Original_ID_S"& _ 
                "OLICITUD_CCH)) AND ([ID_ACIVO_FIJO] = @Original_ID_ACIVO_FIJO) AND ((@IsNull_ID_"& _ 
                "GASTOS_FR = 1 AND [ID_GASTOS_FR] IS NULL) OR ([ID_GASTOS_FR] = @Original_ID_GAST"& _ 
                "OS_FR)) AND ((@IsNull_ID_GASTOS_CCH = 1 AND [ID_GASTOS_CCH] IS NULL) OR ([ID_GAS"& _ 
                "TOS_CCH] = @Original_ID_GASTOS_CCH)) AND ((@IsNull_ID_RESPONSABLE_AUTO_FR = 1 AN"& _ 
                "D [ID_RESPONSABLE_AUTO_FR] IS NULL) OR ([ID_RESPONSABLE_AUTO_FR] = @Original_ID_"& _ 
                "RESPONSABLE_AUTO_FR)) AND ((@IsNull_ID_RESPONSABLE_AUTO_CCH = 1 AND [ID_RESPONSA"& _ 
                "BLE_AUTO_CCH] IS NULL) OR ([ID_RESPONSABLE_AUTO_CCH] = @Original_ID_RESPONSABLE_"& _ 
                "AUTO_CCH)) AND ([ID_PERSONAL] = @Original_ID_PERSONAL) AND ([ID_RUBRO] = @Origin"& _ 
                "al_ID_RUBRO) AND ([ID_SALIDA_V] = @Original_ID_SALIDA_V) AND ([ID_LLEGADA_V] = @"& _ 
                "Original_ID_LLEGADA_V));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CONTROL_C, FECHA_CONTROL_C, VALOR_CONTROL_C,"& _ 
                " DESTINO_CONTROL_C, TOTAL_KM_CONTROL_C, ESTADO_CONTROL_C, MOTIVO_CONTROL_C, ID_S"& _ 
                "OLICITUD_FR, ID_SOLICITUD_CCH, ID_ACIVO_FIJO, ID_GASTOS_FR, ID_GASTOS_CCH, ID_RE"& _ 
                "SPONSABLE_AUTO_FR, ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, ID_RUBRO, ID_SALIDA_V, "& _ 
                "ID_LLEGADA_V FROM CONTROL_COMBUSTIBLES WHERE (ID_CONTROL_C = @ID_CONTROL_C)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CONTROL_C", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_CONTROL_C", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_CONTROL_C", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTINO_CONTROL_C", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_KM_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTAL_KM_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_CONTROL_C", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_CONTROL_C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICITUD_FR", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ACIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACIVO_FIJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CONTROL_C", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_CONTROL_C", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_CONTROL_C", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_KM_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTAL_KM_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CONTROL_C", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CONTROL_C", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_SOLICITUD_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICITUD_FR", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ACIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACIVO_FIJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_FR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_FR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CONTROL_C, FECHA_CONTROL_C, VALOR_CONTROL_C, DESTINO_CONTROL_C, TOTAL_K"& _ 
                "M_CONTROL_C, ESTADO_CONTROL_C, MOTIVO_CONTROL_C, ID_SOLICITUD_FR, ID_SOLICITUD_C"& _ 
                "CH, ID_ACIVO_FIJO, ID_GASTOS_FR, ID_GASTOS_CCH, ID_RESPONSABLE_AUTO_FR, ID_RESPO"& _ 
                "NSABLE_AUTO_CCH, ID_PERSONAL, ID_RUBRO, ID_SALIDA_V, ID_LLEGADA_V FROM dbo.CONTR"& _ 
                "OL_COMBUSTIBLES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.CONTROL_COMBUSTIBLESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.CONTROL_COMBUSTIBLESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.CONTROL_COMBUSTIBLESDataTable = New DataSetControlCombustibleCajaChica.CONTROL_COMBUSTIBLESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.CONTROL_COMBUSTIBLESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "CONTROL_COMBUSTIBLES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID_CONTROL_C As Long,  _
                    ByVal Original_FECHA_CONTROL_C As Date,  _
                    ByVal Original_VALOR_CONTROL_C As Decimal,  _
                    ByVal Original_TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal Original_ESTADO_CONTROL_C As Integer,  _
                    ByVal Original_ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_ACIVO_FIJO As Integer,  _
                    ByVal Original_ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_RUBRO As Integer,  _
                    ByVal Original_ID_SALIDA_V As Long,  _
                    ByVal Original_ID_LLEGADA_V As Long) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CONTROL_C,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_CONTROL_C,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_VALOR_CONTROL_C,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TOTAL_KM_CONTROL_C,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ESTADO_CONTROL_C,Integer)
            If (Original_ID_SOLICITUD_FR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_SOLICITUD_FR.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_SOLICITUD_CCH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ID_SOLICITUD_CCH.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_ACIVO_FIJO,Integer)
            If (Original_ID_GASTOS_FR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ID_GASTOS_FR.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_GASTOS_CCH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ID_GASTOS_CCH.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_RESPONSABLE_AUTO_FR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ID_RESPONSABLE_AUTO_FR.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_RESPONSABLE_AUTO_CCH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ID_RUBRO,Integer)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ID_SALIDA_V,Long)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ID_LLEGADA_V,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_CONTROL_C As Long,  _
                    ByVal FECHA_CONTROL_C As Date,  _
                    ByVal VALOR_CONTROL_C As Decimal,  _
                    ByVal DESTINO_CONTROL_C As String,  _
                    ByVal TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal ESTADO_CONTROL_C As Integer,  _
                    ByVal MOTIVO_CONTROL_C As String,  _
                    ByVal ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal ID_ACIVO_FIJO As Integer,  _
                    ByVal ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_RUBRO As Integer,  _
                    ByVal ID_SALIDA_V As Long,  _
                    ByVal ID_LLEGADA_V As Long) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CONTROL_C,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_CONTROL_C,Date)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(VALOR_CONTROL_C,Decimal)
            If (DESTINO_CONTROL_C Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESTINO_CONTROL_C")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DESTINO_CONTROL_C,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(TOTAL_KM_CONTROL_C,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ESTADO_CONTROL_C,Integer)
            If (MOTIVO_CONTROL_C Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MOTIVO_CONTROL_C")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MOTIVO_CONTROL_C,String)
            End If
            If (ID_SOLICITUD_FR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_SOLICITUD_FR.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (ID_SOLICITUD_CCH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID_SOLICITUD_CCH.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ID_ACIVO_FIJO,Integer)
            If (ID_GASTOS_FR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ID_GASTOS_FR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ID_GASTOS_CCH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_GASTOS_CCH.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ID_RESPONSABLE_AUTO_FR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_RESPONSABLE_AUTO_FR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ID_RESPONSABLE_AUTO_CCH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ID_RESPONSABLE_AUTO_CCH.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ID_RUBRO,Integer)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(ID_SALIDA_V,Long)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(ID_LLEGADA_V,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_CONTROL_C As Long,  _
                    ByVal FECHA_CONTROL_C As Date,  _
                    ByVal VALOR_CONTROL_C As Decimal,  _
                    ByVal DESTINO_CONTROL_C As String,  _
                    ByVal TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal ESTADO_CONTROL_C As Integer,  _
                    ByVal MOTIVO_CONTROL_C As String,  _
                    ByVal ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal ID_ACIVO_FIJO As Integer,  _
                    ByVal ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_RUBRO As Integer,  _
                    ByVal ID_SALIDA_V As Long,  _
                    ByVal ID_LLEGADA_V As Long,  _
                    ByVal Original_ID_CONTROL_C As Long,  _
                    ByVal Original_FECHA_CONTROL_C As Date,  _
                    ByVal Original_VALOR_CONTROL_C As Decimal,  _
                    ByVal Original_TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal Original_ESTADO_CONTROL_C As Integer,  _
                    ByVal Original_ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_ACIVO_FIJO As Integer,  _
                    ByVal Original_ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_RUBRO As Integer,  _
                    ByVal Original_ID_SALIDA_V As Long,  _
                    ByVal Original_ID_LLEGADA_V As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CONTROL_C,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_CONTROL_C,Date)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(VALOR_CONTROL_C,Decimal)
            If (DESTINO_CONTROL_C Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESTINO_CONTROL_C")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DESTINO_CONTROL_C,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TOTAL_KM_CONTROL_C,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ESTADO_CONTROL_C,Integer)
            If (MOTIVO_CONTROL_C Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MOTIVO_CONTROL_C")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(MOTIVO_CONTROL_C,String)
            End If
            If (ID_SOLICITUD_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_SOLICITUD_FR.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (ID_SOLICITUD_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ID_SOLICITUD_CCH.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ID_ACIVO_FIJO,Integer)
            If (ID_GASTOS_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ID_GASTOS_FR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ID_GASTOS_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_GASTOS_CCH.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ID_RESPONSABLE_AUTO_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_RESPONSABLE_AUTO_FR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ID_RESPONSABLE_AUTO_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ID_RESPONSABLE_AUTO_CCH.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ID_RUBRO,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ID_SALIDA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ID_LLEGADA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_CONTROL_C,Long)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FECHA_CONTROL_C,Date)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_VALOR_CONTROL_C,Decimal)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TOTAL_KM_CONTROL_C,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_ESTADO_CONTROL_C,Integer)
            If (Original_ID_SOLICITUD_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ID_SOLICITUD_FR.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_SOLICITUD_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_ID_SOLICITUD_CCH.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ID_ACIVO_FIJO,Integer)
            If (Original_ID_GASTOS_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ID_GASTOS_FR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_GASTOS_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ID_GASTOS_CCH.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_RESPONSABLE_AUTO_FR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_ID_RESPONSABLE_AUTO_FR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_ID_RESPONSABLE_AUTO_CCH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_ID_RUBRO,Integer)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_ID_SALIDA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_ID_LLEGADA_V,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FECHA_CONTROL_C As Date,  _
                    ByVal VALOR_CONTROL_C As Decimal,  _
                    ByVal DESTINO_CONTROL_C As String,  _
                    ByVal TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal ESTADO_CONTROL_C As Integer,  _
                    ByVal MOTIVO_CONTROL_C As String,  _
                    ByVal ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal ID_ACIVO_FIJO As Integer,  _
                    ByVal ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_RUBRO As Integer,  _
                    ByVal ID_SALIDA_V As Long,  _
                    ByVal ID_LLEGADA_V As Long,  _
                    ByVal Original_ID_CONTROL_C As Long,  _
                    ByVal Original_FECHA_CONTROL_C As Date,  _
                    ByVal Original_VALOR_CONTROL_C As Decimal,  _
                    ByVal Original_TOTAL_KM_CONTROL_C As Integer,  _
                    ByVal Original_ESTADO_CONTROL_C As Integer,  _
                    ByVal Original_ID_SOLICITUD_FR As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_SOLICITUD_CCH As Global.System.Nullable(Of Long),  _
                    ByVal Original_ID_ACIVO_FIJO As Integer,  _
                    ByVal Original_ID_GASTOS_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_GASTOS_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_FR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_RUBRO As Integer,  _
                    ByVal Original_ID_SALIDA_V As Long,  _
                    ByVal Original_ID_LLEGADA_V As Long) As Integer
            Return Me.Update(Original_ID_CONTROL_C, FECHA_CONTROL_C, VALOR_CONTROL_C, DESTINO_CONTROL_C, TOTAL_KM_CONTROL_C, ESTADO_CONTROL_C, MOTIVO_CONTROL_C, ID_SOLICITUD_FR, ID_SOLICITUD_CCH, ID_ACIVO_FIJO, ID_GASTOS_FR, ID_GASTOS_CCH, ID_RESPONSABLE_AUTO_FR, ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, ID_RUBRO, ID_SALIDA_V, ID_LLEGADA_V, Original_ID_CONTROL_C, Original_FECHA_CONTROL_C, Original_VALOR_CONTROL_C, Original_TOTAL_KM_CONTROL_C, Original_ESTADO_CONTROL_C, Original_ID_SOLICITUD_FR, Original_ID_SOLICITUD_CCH, Original_ID_ACIVO_FIJO, Original_ID_GASTOS_FR, Original_ID_GASTOS_CCH, Original_ID_RESPONSABLE_AUTO_FR, Original_ID_RESPONSABLE_AUTO_CCH, Original_ID_PERSONAL, Original_ID_RUBRO, Original_ID_SALIDA_V, Original_ID_LLEGADA_V)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LLEGADA_VEHICULOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LLEGADA_VEHICULO"
            tableMapping.ColumnMappings.Add("ID_LLEGADA_V", "ID_LLEGADA_V")
            tableMapping.ColumnMappings.Add("FECHA_LLEGADA_V", "FECHA_LLEGADA_V")
            tableMapping.ColumnMappings.Add("HORA_LLEGADA_V", "HORA_LLEGADA_V")
            tableMapping.ColumnMappings.Add("KM_LLEGADA_V", "KM_LLEGADA_V")
            tableMapping.ColumnMappings.Add("ESTADO_LLEGADA_V", "ESTADO_LLEGADA_V")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LLEGADA_VEHICULO] WHERE (([ID_LLEGADA_V] = @Original_ID_LLEGAD"& _ 
                "A_V) AND ([FECHA_LLEGADA_V] = @Original_FECHA_LLEGADA_V) AND ([KM_LLEGADA_V] = @"& _ 
                "Original_KM_LLEGADA_V) AND ([ESTADO_LLEGADA_V] = @Original_ESTADO_LLEGADA_V))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_LLEGADA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KM_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LLEGADA_VEHICULO] ([ID_LLEGADA_V], [FECHA_LLEGADA_V], [HORA_LL"& _ 
                "EGADA_V], [KM_LLEGADA_V], [ESTADO_LLEGADA_V]) VALUES (@ID_LLEGADA_V, @FECHA_LLEG"& _ 
                "ADA_V, @HORA_LLEGADA_V, @KM_LLEGADA_V, @ESTADO_LLEGADA_V);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_LLEGADA_V,"& _ 
                " FECHA_LLEGADA_V, HORA_LLEGADA_V, KM_LLEGADA_V, ESTADO_LLEGADA_V FROM LLEGADA_VE"& _ 
                "HICULO WHERE (ID_LLEGADA_V = @ID_LLEGADA_V)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_LLEGADA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HORA_LLEGADA_V", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HORA_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KM_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[LLEGADA_VEHICULO] SET [ID_LLEGADA_V] = @ID_LLEGADA_V, [FECHA_LLEGAD"& _ 
                "A_V] = @FECHA_LLEGADA_V, [HORA_LLEGADA_V] = @HORA_LLEGADA_V, [KM_LLEGADA_V] = @K"& _ 
                "M_LLEGADA_V, [ESTADO_LLEGADA_V] = @ESTADO_LLEGADA_V WHERE (([ID_LLEGADA_V] = @Or"& _ 
                "iginal_ID_LLEGADA_V) AND ([FECHA_LLEGADA_V] = @Original_FECHA_LLEGADA_V) AND ([K"& _ 
                "M_LLEGADA_V] = @Original_KM_LLEGADA_V) AND ([ESTADO_LLEGADA_V] = @Original_ESTAD"& _ 
                "O_LLEGADA_V));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_LLEGADA_V, FECHA_LLEGADA_V, HORA_LLEGADA_V, KM_LLEGADA"& _ 
                "_V, ESTADO_LLEGADA_V FROM LLEGADA_VEHICULO WHERE (ID_LLEGADA_V = @ID_LLEGADA_V)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_LLEGADA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HORA_LLEGADA_V", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HORA_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KM_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_LLEGADA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LLEGADA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_LLEGADA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KM_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_LLEGADA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_LLEGADA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_LLEGADA_V, FECHA_LLEGADA_V, HORA_LLEGADA_V, KM_LLEGADA_V, ESTADO_LLEGAD"& _ 
                "A_V FROM dbo.LLEGADA_VEHICULO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.LLEGADA_VEHICULODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.LLEGADA_VEHICULODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.LLEGADA_VEHICULODataTable = New DataSetControlCombustibleCajaChica.LLEGADA_VEHICULODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.LLEGADA_VEHICULODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "LLEGADA_VEHICULO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_LLEGADA_V As Long, ByVal Original_FECHA_LLEGADA_V As Date, ByVal Original_KM_LLEGADA_V As Integer, ByVal Original_ESTADO_LLEGADA_V As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_LLEGADA_V,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_LLEGADA_V,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_KM_LLEGADA_V,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ESTADO_LLEGADA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_LLEGADA_V As Long, ByVal FECHA_LLEGADA_V As Date, ByVal HORA_LLEGADA_V As String, ByVal KM_LLEGADA_V As Integer, ByVal ESTADO_LLEGADA_V As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_LLEGADA_V,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_LLEGADA_V,Date)
            If (HORA_LLEGADA_V Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HORA_LLEGADA_V")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HORA_LLEGADA_V,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(KM_LLEGADA_V,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ESTADO_LLEGADA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_LLEGADA_V As Long, ByVal FECHA_LLEGADA_V As Date, ByVal HORA_LLEGADA_V As String, ByVal KM_LLEGADA_V As Integer, ByVal ESTADO_LLEGADA_V As Integer, ByVal Original_ID_LLEGADA_V As Long, ByVal Original_FECHA_LLEGADA_V As Date, ByVal Original_KM_LLEGADA_V As Integer, ByVal Original_ESTADO_LLEGADA_V As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_LLEGADA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_LLEGADA_V,Date)
            If (HORA_LLEGADA_V Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HORA_LLEGADA_V")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HORA_LLEGADA_V,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(KM_LLEGADA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ESTADO_LLEGADA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_LLEGADA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FECHA_LLEGADA_V,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_KM_LLEGADA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ESTADO_LLEGADA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FECHA_LLEGADA_V As Date, ByVal HORA_LLEGADA_V As String, ByVal KM_LLEGADA_V As Integer, ByVal ESTADO_LLEGADA_V As Integer, ByVal Original_ID_LLEGADA_V As Long, ByVal Original_FECHA_LLEGADA_V As Date, ByVal Original_KM_LLEGADA_V As Integer, ByVal Original_ESTADO_LLEGADA_V As Integer) As Integer
            Return Me.Update(Original_ID_LLEGADA_V, FECHA_LLEGADA_V, HORA_LLEGADA_V, KM_LLEGADA_V, ESTADO_LLEGADA_V, Original_ID_LLEGADA_V, Original_FECHA_LLEGADA_V, Original_KM_LLEGADA_V, Original_ESTADO_LLEGADA_V)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SALIDA_VEHICULOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SALIDA_VEHICULO"
            tableMapping.ColumnMappings.Add("ID_SALIDA_V", "ID_SALIDA_V")
            tableMapping.ColumnMappings.Add("FECHA_SALIDA_V", "FECHA_SALIDA_V")
            tableMapping.ColumnMappings.Add("HORA_SALIDA_V", "HORA_SALIDA_V")
            tableMapping.ColumnMappings.Add("KM_SALIDA_V", "KM_SALIDA_V")
            tableMapping.ColumnMappings.Add("ESTADO_SALIDA_V", "ESTADO_SALIDA_V")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SALIDA_VEHICULO] WHERE (([ID_SALIDA_V] = @Original_ID_SALIDA_V"& _ 
                ") AND ([FECHA_SALIDA_V] = @Original_FECHA_SALIDA_V) AND ([KM_SALIDA_V] = @Origin"& _ 
                "al_KM_SALIDA_V) AND ([ESTADO_SALIDA_V] = @Original_ESTADO_SALIDA_V))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KM_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SALIDA_VEHICULO] ([ID_SALIDA_V], [FECHA_SALIDA_V], [HORA_SALID"& _ 
                "A_V], [KM_SALIDA_V], [ESTADO_SALIDA_V]) VALUES (@ID_SALIDA_V, @FECHA_SALIDA_V, @"& _ 
                "HORA_SALIDA_V, @KM_SALIDA_V, @ESTADO_SALIDA_V);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_SALIDA_V, FECHA_SALID"& _ 
                "A_V, HORA_SALIDA_V, KM_SALIDA_V, ESTADO_SALIDA_V FROM SALIDA_VEHICULO WHERE (ID_"& _ 
                "SALIDA_V = @ID_SALIDA_V)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HORA_SALIDA_V", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HORA_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KM_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SALIDA_VEHICULO] SET [ID_SALIDA_V] = @ID_SALIDA_V, [FECHA_SALIDA_V]"& _ 
                " = @FECHA_SALIDA_V, [HORA_SALIDA_V] = @HORA_SALIDA_V, [KM_SALIDA_V] = @KM_SALIDA"& _ 
                "_V, [ESTADO_SALIDA_V] = @ESTADO_SALIDA_V WHERE (([ID_SALIDA_V] = @Original_ID_SA"& _ 
                "LIDA_V) AND ([FECHA_SALIDA_V] = @Original_FECHA_SALIDA_V) AND ([KM_SALIDA_V] = @"& _ 
                "Original_KM_SALIDA_V) AND ([ESTADO_SALIDA_V] = @Original_ESTADO_SALIDA_V));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT ID_SALIDA_V, FECHA_SALIDA_V, HORA_SALIDA_V, KM_SALIDA_V, ESTADO_SALIDA_V FRO"& _ 
                "M SALIDA_VEHICULO WHERE (ID_SALIDA_V = @ID_SALIDA_V)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HORA_SALIDA_V", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HORA_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KM_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SALIDA_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SALIDA_V", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA_V", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KM_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SALIDA_V", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SALIDA_V", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_SALIDA_V, FECHA_SALIDA_V, HORA_SALIDA_V, KM_SALIDA_V, ESTADO_SALIDA_V F"& _ 
                "ROM dbo.SALIDA_VEHICULO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.SALIDA_VEHICULODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.SALIDA_VEHICULODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.SALIDA_VEHICULODataTable = New DataSetControlCombustibleCajaChica.SALIDA_VEHICULODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.SALIDA_VEHICULODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "SALIDA_VEHICULO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_SALIDA_V As Long, ByVal Original_FECHA_SALIDA_V As Date, ByVal Original_KM_SALIDA_V As Integer, ByVal Original_ESTADO_SALIDA_V As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_SALIDA_V,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FECHA_SALIDA_V,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_KM_SALIDA_V,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ESTADO_SALIDA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_SALIDA_V As Long, ByVal FECHA_SALIDA_V As Date, ByVal HORA_SALIDA_V As String, ByVal KM_SALIDA_V As Integer, ByVal ESTADO_SALIDA_V As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_SALIDA_V,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FECHA_SALIDA_V,Date)
            If (HORA_SALIDA_V Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HORA_SALIDA_V")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HORA_SALIDA_V,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(KM_SALIDA_V,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ESTADO_SALIDA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_SALIDA_V As Long, ByVal FECHA_SALIDA_V As Date, ByVal HORA_SALIDA_V As String, ByVal KM_SALIDA_V As Integer, ByVal ESTADO_SALIDA_V As Integer, ByVal Original_ID_SALIDA_V As Long, ByVal Original_FECHA_SALIDA_V As Date, ByVal Original_KM_SALIDA_V As Integer, ByVal Original_ESTADO_SALIDA_V As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_SALIDA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FECHA_SALIDA_V,Date)
            If (HORA_SALIDA_V Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HORA_SALIDA_V")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HORA_SALIDA_V,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(KM_SALIDA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ESTADO_SALIDA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_SALIDA_V,Long)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FECHA_SALIDA_V,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_KM_SALIDA_V,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ESTADO_SALIDA_V,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FECHA_SALIDA_V As Date, ByVal HORA_SALIDA_V As String, ByVal KM_SALIDA_V As Integer, ByVal ESTADO_SALIDA_V As Integer, ByVal Original_ID_SALIDA_V As Long, ByVal Original_FECHA_SALIDA_V As Date, ByVal Original_KM_SALIDA_V As Integer, ByVal Original_ESTADO_SALIDA_V As Integer) As Integer
            Return Me.Update(Original_ID_SALIDA_V, FECHA_SALIDA_V, HORA_SALIDA_V, KM_SALIDA_V, ESTADO_SALIDA_V, Original_ID_SALIDA_V, Original_FECHA_SALIDA_V, Original_KM_SALIDA_V, Original_ESTADO_SALIDA_V)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VEHICULOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VEHICULOS"
            tableMapping.ColumnMappings.Add("ID_ACTIVO_FIJO", "ID_ACTIVO_FIJO")
            tableMapping.ColumnMappings.Add("MARCA", "MARCA")
            tableMapping.ColumnMappings.Add("MODELO", "MODELO")
            tableMapping.ColumnMappings.Add("SERIE", "SERIE")
            tableMapping.ColumnMappings.Add("CHASIS", "CHASIS")
            tableMapping.ColumnMappings.Add("ESTADO_ACTIVO", "ESTADO_ACTIVO")
            tableMapping.ColumnMappings.Add("PLACAS", "PLACAS")
            tableMapping.ColumnMappings.Add("MOTOR", "MOTOR")
            tableMapping.ColumnMappings.Add("CILINDRAJE", "CILINDRAJE")
            tableMapping.ColumnMappings.Add("CAPACIDAD", "CAPACIDAD")
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("COLOR", "COLOR")
            tableMapping.ColumnMappings.Add("ANO_FABRICACION", "ANO_FABRICACION")
            tableMapping.ColumnMappings.Add("ASEGURADORA", "ASEGURADORA")
            tableMapping.ColumnMappings.Add("SEGURO", "SEGURO")
            tableMapping.ColumnMappings.Add("BROKER", "BROKER")
            tableMapping.ColumnMappings.Add("NRO_POLIZA", "NRO_POLIZA")
            tableMapping.ColumnMappings.Add("COSTO_PRIMA", "COSTO_PRIMA")
            tableMapping.ColumnMappings.Add("DISPOSITIVO_SEGURIDAD", "DISPOSITIVO_SEGURIDAD")
            tableMapping.ColumnMappings.Add("FECHA_INICIO_CONTRATO", "FECHA_INICIO_CONTRATO")
            tableMapping.ColumnMappings.Add("FECHA_FINAL_CONTRATO", "FECHA_FINAL_CONTRATO")
            tableMapping.ColumnMappings.Add("FECHA_RENOVACION_CONTRATO", "FECHA_RENOVACION_CONTRATO")
            tableMapping.ColumnMappings.Add("FECHA_INICIO_DIS_SEG", "FECHA_INICIO_DIS_SEG")
            tableMapping.ColumnMappings.Add("FECHA_FINAL_DIS_SEG", "FECHA_FINAL_DIS_SEG")
            tableMapping.ColumnMappings.Add("FECHA_RENOVACION_DIS_SEG", "FECHA_RENOVACION_DIS_SEG")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("SOAT", "SOAT")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[VEHICULOS] ([ID_ACTIVO_FIJO], [MARCA], [MODELO], [SERIE], [CHA"& _ 
                "SIS], [ESTADO_ACTIVO], [PLACAS], [MOTOR], [CILINDRAJE], [CAPACIDAD], [TIPO], [CO"& _ 
                "LOR], [ANO_FABRICACION], [ASEGURADORA], [SEGURO], [BROKER], [NRO_POLIZA], [COSTO"& _ 
                "_PRIMA], [DISPOSITIVO_SEGURIDAD], [FECHA_INICIO_CONTRATO], [FECHA_FINAL_CONTRATO"& _ 
                "], [FECHA_RENOVACION_CONTRATO], [FECHA_INICIO_DIS_SEG], [FECHA_FINAL_DIS_SEG], ["& _ 
                "FECHA_RENOVACION_DIS_SEG], [ESTADO], [SOAT]) VALUES (@ID_ACTIVO_FIJO, @MARCA, @M"& _ 
                "ODELO, @SERIE, @CHASIS, @ESTADO_ACTIVO, @PLACAS, @MOTOR, @CILINDRAJE, @CAPACIDAD"& _ 
                ", @TIPO, @COLOR, @ANO_FABRICACION, @ASEGURADORA, @SEGURO, @BROKER, @NRO_POLIZA, "& _ 
                "@COSTO_PRIMA, @DISPOSITIVO_SEGURIDAD, @FECHA_INICIO_CONTRATO, @FECHA_FINAL_CONTR"& _ 
                "ATO, @FECHA_RENOVACION_CONTRATO, @FECHA_INICIO_DIS_SEG, @FECHA_FINAL_DIS_SEG, @F"& _ 
                "ECHA_RENOVACION_DIS_SEG, @ESTADO, @SOAT)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ACTIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACTIVO_FIJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARCA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARCA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODELO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODELO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHASIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHASIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLACAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLACAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CILINDRAJE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CILINDRAJE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPACIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPACIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANO_FABRICACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANO_FABRICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASEGURADORA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASEGURADORA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEGURO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BROKER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BROKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_POLIZA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_POLIZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTO_PRIMA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTO_PRIMA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISPOSITIVO_SEGURIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISPOSITIVO_SEGURIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INICIO_CONTRATO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INICIO_CONTRATO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_FINAL_CONTRATO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_FINAL_CONTRATO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_RENOVACION_CONTRATO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_CONTRATO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INICIO_DIS_SEG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INICIO_DIS_SEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_FINAL_DIS_SEG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_FINAL_DIS_SEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_RENOVACION_DIS_SEG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_RENOVACION_DIS_SEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_ACTIVO_FIJO, MARCA, MODELO, SERIE, CHASIS, ESTADO_ACTIVO, PLACAS, MOTOR"& _ 
                ", CILINDRAJE, CAPACIDAD, TIPO, COLOR, ANO_FABRICACION, ASEGURADORA, SEGURO, BROK"& _ 
                "ER, NRO_POLIZA, COSTO_PRIMA, DISPOSITIVO_SEGURIDAD, FECHA_INICIO_CONTRATO, FECHA"& _ 
                "_FINAL_CONTRATO, FECHA_RENOVACION_CONTRATO, FECHA_INICIO_DIS_SEG, FECHA_FINAL_DI"& _ 
                "S_SEG, FECHA_RENOVACION_DIS_SEG, ESTADO, SOAT FROM dbo.VEHICULOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.VEHICULOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.VEHICULOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.VEHICULOSDataTable = New DataSetControlCombustibleCajaChica.VEHICULOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.VEHICULOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "VEHICULOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_ACTIVO_FIJO As Integer,  _
                    ByVal MARCA As String,  _
                    ByVal MODELO As String,  _
                    ByVal SERIE As String,  _
                    ByVal CHASIS As String,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal PLACAS As String,  _
                    ByVal MOTOR As String,  _
                    ByVal CILINDRAJE As String,  _
                    ByVal CAPACIDAD As String,  _
                    ByVal TIPO As String,  _
                    ByVal COLOR As String,  _
                    ByVal ANO_FABRICACION As Integer,  _
                    ByVal ASEGURADORA As String,  _
                    ByVal SEGURO As String,  _
                    ByVal BROKER As String,  _
                    ByVal NRO_POLIZA As String,  _
                    ByVal COSTO_PRIMA As Decimal,  _
                    ByVal DISPOSITIVO_SEGURIDAD As String,  _
                    ByVal FECHA_INICIO_CONTRATO As Date,  _
                    ByVal FECHA_FINAL_CONTRATO As Date,  _
                    ByVal FECHA_RENOVACION_CONTRATO As Date,  _
                    ByVal FECHA_INICIO_DIS_SEG As Date,  _
                    ByVal FECHA_FINAL_DIS_SEG As Date,  _
                    ByVal FECHA_RENOVACION_DIS_SEG As Date,  _
                    ByVal ESTADO As Integer,  _
                    ByVal SOAT As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_ACTIVO_FIJO,Integer)
            If (MARCA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MARCA")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(MARCA,String)
            End If
            If (MODELO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODELO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(MODELO,String)
            End If
            If (SERIE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SERIE,String)
            End If
            If (CHASIS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHASIS")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CHASIS,String)
            End If
            If (ESTADO_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_ACTIVO")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ESTADO_ACTIVO,String)
            End If
            If (PLACAS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PLACAS")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PLACAS,String)
            End If
            If (MOTOR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MOTOR")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MOTOR,String)
            End If
            If (CILINDRAJE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CILINDRAJE")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CILINDRAJE,String)
            End If
            If (CAPACIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CAPACIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CAPACIDAD,String)
            End If
            If (TIPO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TIPO,String)
            End If
            If (COLOR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COLOR")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(COLOR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ANO_FABRICACION,Integer)
            If (ASEGURADORA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ASEGURADORA")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ASEGURADORA,String)
            End If
            If (SEGURO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEGURO")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SEGURO,String)
            End If
            If (BROKER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BROKER")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BROKER,String)
            End If
            If (NRO_POLIZA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NRO_POLIZA")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(NRO_POLIZA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(COSTO_PRIMA,Decimal)
            If (DISPOSITIVO_SEGURIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DISPOSITIVO_SEGURIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(DISPOSITIVO_SEGURIDAD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(FECHA_INICIO_CONTRATO,Date)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(FECHA_FINAL_CONTRATO,Date)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(FECHA_RENOVACION_CONTRATO,Date)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(FECHA_INICIO_DIS_SEG,Date)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(FECHA_FINAL_DIS_SEG,Date)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(FECHA_RENOVACION_DIS_SEG,Date)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(ESTADO,Integer)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(SOAT,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ACTIVO_FIJO_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ACTIVO_FIJO_GENERAL"
            tableMapping.ColumnMappings.Add("ID_ACTIVO_FIJO", "ID_ACTIVO_FIJO")
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("ID_EMPRESA", "ID_EMPRESA")
            tableMapping.ColumnMappings.Add("ID_SUCURSAL", "ID_SUCURSAL")
            tableMapping.ColumnMappings.Add("ID_GERENCIAS", "ID_GERENCIAS")
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA")
            tableMapping.ColumnMappings.Add("CARPETA", "CARPETA")
            tableMapping.ColumnMappings.Add("CONTRATO", "CONTRATO")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("NOMBRE_ACTIVO", "NOMBRE_ACTIVO")
            tableMapping.ColumnMappings.Add("NOMBRE_PROVEDOR", "NOMBRE_PROVEDOR")
            tableMapping.ColumnMappings.Add("NOMBRE_CUSTODIO", "NOMBRE_CUSTODIO")
            tableMapping.ColumnMappings.Add("RESPONSABLE", "RESPONSABLE")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            tableMapping.ColumnMappings.Add("CODIGO_ARANCEL", "CODIGO_ARANCEL")
            tableMapping.ColumnMappings.Add("NUM_ORDEN_COMPRA", "NUM_ORDEN_COMPRA")
            tableMapping.ColumnMappings.Add("NUM_FACTURA", "NUM_FACTURA")
            tableMapping.ColumnMappings.Add("VALOR_FACTURA", "VALOR_FACTURA")
            tableMapping.ColumnMappings.Add("VALOR_ADICIONAL", "VALOR_ADICIONAL")
            tableMapping.ColumnMappings.Add("VALOR_RESIDUAL", "VALOR_RESIDUAL")
            tableMapping.ColumnMappings.Add("FECHA_ADQUISICION", "FECHA_ADQUISICION")
            tableMapping.ColumnMappings.Add("AÑOS_VIDA_UTIL", "AÑOS_VIDA_UTIL")
            tableMapping.ColumnMappings.Add("CTA_ACTIVO", "CTA_ACTIVO")
            tableMapping.ColumnMappings.Add("CTA_GASTOS", "CTA_GASTOS")
            tableMapping.ColumnMappings.Add("CTA_DEPRECIACION", "CTA_DEPRECIACION")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("ESTADO_ACTIVO", "ESTADO_ACTIVO")
            tableMapping.ColumnMappings.Add("TIPO_ACTIVO", "TIPO_ACTIVO")
            tableMapping.ColumnMappings.Add("MANTENIMIENTO", "MANTENIMIENTO")
            tableMapping.ColumnMappings.Add("FECHA_MANTENIMIENTO", "FECHA_MANTENIMIENTO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ACTIVO_FIJO_GENERAL] WHERE (([ID_ACTIVO_FIJO] = @Original_ID_A"& _ 
                "CTIVO_FIJO) AND ([ID_PERSONAL] = @Original_ID_PERSONAL) AND ([ID_EMPRESA] = @Ori"& _ 
                "ginal_ID_EMPRESA) AND ([ID_SUCURSAL] = @Original_ID_SUCURSAL) AND ([ID_GERENCIAS"& _ 
                "] = @Original_ID_GERENCIAS) AND ([ID_AREA] = @Original_ID_AREA) AND ([FECHA] = @"& _ 
                "Original_FECHA) AND ([VALOR_FACTURA] = @Original_VALOR_FACTURA) AND ([VALOR_ADIC"& _ 
                "IONAL] = @Original_VALOR_ADICIONAL) AND ([VALOR_RESIDUAL] = @Original_VALOR_RESI"& _ 
                "DUAL) AND ([FECHA_ADQUISICION] = @Original_FECHA_ADQUISICION) AND ([AÑOS_VIDA_UT"& _ 
                "IL] = @Original_AÑOS_VIDA_UTIL) AND ([ESTADO] = @Original_ESTADO) AND ([FECHA_MA"& _ 
                "NTENIMIENTO] = @Original_FECHA_MANTENIMIENTO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ACTIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACTIVO_FIJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_EMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GERENCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_FACTURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_ADICIONAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_ADICIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_RESIDUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RESIDUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ADQUISICION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ADQUISICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AÑOS_VIDA_UTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AÑOS_VIDA_UTIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_MANTENIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_MANTENIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ACTIVO_FIJO_GENERAL] ([ID_ACTIVO_FIJO], [ID_PERSONAL], [ID_EMP"& _ 
                "RESA], [ID_SUCURSAL], [ID_GERENCIAS], [ID_AREA], [CARPETA], [CONTRATO], [CODIGO]"& _ 
                ", [NOMBRE_ACTIVO], [NOMBRE_PROVEDOR], [NOMBRE_CUSTODIO], [RESPONSABLE], [FECHA],"& _ 
                " [CODIGO_ARANCEL], [NUM_ORDEN_COMPRA], [NUM_FACTURA], [VALOR_FACTURA], [VALOR_AD"& _ 
                "ICIONAL], [VALOR_RESIDUAL], [FECHA_ADQUISICION], [AÑOS_VIDA_UTIL], [CTA_ACTIVO],"& _ 
                " [CTA_GASTOS], [CTA_DEPRECIACION], [ESTADO], [ESTADO_ACTIVO], [TIPO_ACTIVO], [MA"& _ 
                "NTENIMIENTO], [FECHA_MANTENIMIENTO]) VALUES (@ID_ACTIVO_FIJO, @ID_PERSONAL, @ID_"& _ 
                "EMPRESA, @ID_SUCURSAL, @ID_GERENCIAS, @ID_AREA, @CARPETA, @CONTRATO, @CODIGO, @N"& _ 
                "OMBRE_ACTIVO, @NOMBRE_PROVEDOR, @NOMBRE_CUSTODIO, @RESPONSABLE, @FECHA, @CODIGO_"& _ 
                "ARANCEL, @NUM_ORDEN_COMPRA, @NUM_FACTURA, @VALOR_FACTURA, @VALOR_ADICIONAL, @VAL"& _ 
                "OR_RESIDUAL, @FECHA_ADQUISICION, @AÑOS_VIDA_UTIL, @CTA_ACTIVO, @CTA_GASTOS, @CTA"& _ 
                "_DEPRECIACION, @ESTADO, @ESTADO_ACTIVO, @TIPO_ACTIVO, @MANTENIMIENTO, @FECHA_MAN"& _ 
                "TENIMIENTO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_ACTIVO_FIJO, ID_PERSONAL, ID_EMPRESA, ID_SUCURSAL, ID_GE"& _ 
                "RENCIAS, ID_AREA, CARPETA, CONTRATO, CODIGO, NOMBRE_ACTIVO, NOMBRE_PROVEDOR, NOM"& _ 
                "BRE_CUSTODIO, RESPONSABLE, FECHA, CODIGO_ARANCEL, NUM_ORDEN_COMPRA, NUM_FACTURA,"& _ 
                " VALOR_FACTURA, VALOR_ADICIONAL, VALOR_RESIDUAL, FECHA_ADQUISICION, AÑOS_VIDA_UT"& _ 
                "IL, CTA_ACTIVO, CTA_GASTOS, CTA_DEPRECIACION, ESTADO, ESTADO_ACTIVO, TIPO_ACTIVO"& _ 
                ", MANTENIMIENTO, FECHA_MANTENIMIENTO FROM ACTIVO_FIJO_GENERAL WHERE (ID_ACTIVO_F"& _ 
                "IJO = @ID_ACTIVO_FIJO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ACTIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACTIVO_FIJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_EMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GERENCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARPETA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARPETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTRATO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRATO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PROVEDOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PROVEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CUSTODIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CUSTODIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESPONSABLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESPONSABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_ARANCEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_ARANCEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_FACTURA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_FACTURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_ADICIONAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_ADICIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_RESIDUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RESIDUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ADQUISICION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ADQUISICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑOS_VIDA_UTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AÑOS_VIDA_UTIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_GASTOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_GASTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_DEPRECIACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_DEPRECIACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MANTENIMIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MANTENIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_MANTENIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_MANTENIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ACTIVO_FIJO_GENERAL] SET [ID_ACTIVO_FIJO] = @ID_ACTIVO_FIJO, [ID_PE"& _ 
                "RSONAL] = @ID_PERSONAL, [ID_EMPRESA] = @ID_EMPRESA, [ID_SUCURSAL] = @ID_SUCURSAL"& _ 
                ", [ID_GERENCIAS] = @ID_GERENCIAS, [ID_AREA] = @ID_AREA, [CARPETA] = @CARPETA, [C"& _ 
                "ONTRATO] = @CONTRATO, [CODIGO] = @CODIGO, [NOMBRE_ACTIVO] = @NOMBRE_ACTIVO, [NOM"& _ 
                "BRE_PROVEDOR] = @NOMBRE_PROVEDOR, [NOMBRE_CUSTODIO] = @NOMBRE_CUSTODIO, [RESPONS"& _ 
                "ABLE] = @RESPONSABLE, [FECHA] = @FECHA, [CODIGO_ARANCEL] = @CODIGO_ARANCEL, [NUM"& _ 
                "_ORDEN_COMPRA] = @NUM_ORDEN_COMPRA, [NUM_FACTURA] = @NUM_FACTURA, [VALOR_FACTURA"& _ 
                "] = @VALOR_FACTURA, [VALOR_ADICIONAL] = @VALOR_ADICIONAL, [VALOR_RESIDUAL] = @VA"& _ 
                "LOR_RESIDUAL, [FECHA_ADQUISICION] = @FECHA_ADQUISICION, [AÑOS_VIDA_UTIL] = @AÑOS"& _ 
                "_VIDA_UTIL, [CTA_ACTIVO] = @CTA_ACTIVO, [CTA_GASTOS] = @CTA_GASTOS, [CTA_DEPRECI"& _ 
                "ACION] = @CTA_DEPRECIACION, [ESTADO] = @ESTADO, [ESTADO_ACTIVO] = @ESTADO_ACTIVO"& _ 
                ", [TIPO_ACTIVO] = @TIPO_ACTIVO, [MANTENIMIENTO] = @MANTENIMIENTO, [FECHA_MANTENI"& _ 
                "MIENTO] = @FECHA_MANTENIMIENTO WHERE (([ID_ACTIVO_FIJO] = @Original_ID_ACTIVO_FI"& _ 
                "JO) AND ([ID_PERSONAL] = @Original_ID_PERSONAL) AND ([ID_EMPRESA] = @Original_ID"& _ 
                "_EMPRESA) AND ([ID_SUCURSAL] = @Original_ID_SUCURSAL) AND ([ID_GERENCIAS] = @Ori"& _ 
                "ginal_ID_GERENCIAS) AND ([ID_AREA] = @Original_ID_AREA) AND ([FECHA] = @Original"& _ 
                "_FECHA) AND ([VALOR_FACTURA] = @Original_VALOR_FACTURA) AND ([VALOR_ADICIONAL] ="& _ 
                " @Original_VALOR_ADICIONAL) AND ([VALOR_RESIDUAL] = @Original_VALOR_RESIDUAL) AN"& _ 
                "D ([FECHA_ADQUISICION] = @Original_FECHA_ADQUISICION) AND ([AÑOS_VIDA_UTIL] = @O"& _ 
                "riginal_AÑOS_VIDA_UTIL) AND ([ESTADO] = @Original_ESTADO) AND ([FECHA_MANTENIMIE"& _ 
                "NTO] = @Original_FECHA_MANTENIMIENTO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_ACTIVO_FIJO, ID_PERSONAL, ID_"& _ 
                "EMPRESA, ID_SUCURSAL, ID_GERENCIAS, ID_AREA, CARPETA, CONTRATO, CODIGO, NOMBRE_A"& _ 
                "CTIVO, NOMBRE_PROVEDOR, NOMBRE_CUSTODIO, RESPONSABLE, FECHA, CODIGO_ARANCEL, NUM"& _ 
                "_ORDEN_COMPRA, NUM_FACTURA, VALOR_FACTURA, VALOR_ADICIONAL, VALOR_RESIDUAL, FECH"& _ 
                "A_ADQUISICION, AÑOS_VIDA_UTIL, CTA_ACTIVO, CTA_GASTOS, CTA_DEPRECIACION, ESTADO,"& _ 
                " ESTADO_ACTIVO, TIPO_ACTIVO, MANTENIMIENTO, FECHA_MANTENIMIENTO FROM ACTIVO_FIJO"& _ 
                "_GENERAL WHERE (ID_ACTIVO_FIJO = @ID_ACTIVO_FIJO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_ACTIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACTIVO_FIJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_EMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GERENCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARPETA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARPETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTRATO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTRATO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PROVEDOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PROVEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CUSTODIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CUSTODIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESPONSABLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESPONSABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_ARANCEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_ARANCEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_ORDEN_COMPRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_ORDEN_COMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_FACTURA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_FACTURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_ADICIONAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_ADICIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_RESIDUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RESIDUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ADQUISICION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ADQUISICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑOS_VIDA_UTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AÑOS_VIDA_UTIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_GASTOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_GASTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_DEPRECIACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_DEPRECIACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_ACTIVO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_ACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MANTENIMIENTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MANTENIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_MANTENIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_MANTENIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_ACTIVO_FIJO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_ACTIVO_FIJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_EMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GERENCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_FACTURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_ADICIONAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_ADICIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_RESIDUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RESIDUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ADQUISICION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ADQUISICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AÑOS_VIDA_UTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AÑOS_VIDA_UTIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_MANTENIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_MANTENIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_ACTIVO_FIJO, ID_PERSONAL, ID_EMPRESA, ID_SUCURSAL, ID_GERENCIAS, ID_ARE"& _ 
                "A, CARPETA, CONTRATO, CODIGO, NOMBRE_ACTIVO, NOMBRE_PROVEDOR, NOMBRE_CUSTODIO, R"& _ 
                "ESPONSABLE, FECHA, CODIGO_ARANCEL, NUM_ORDEN_COMPRA, NUM_FACTURA, VALOR_FACTURA,"& _ 
                " VALOR_ADICIONAL, VALOR_RESIDUAL, FECHA_ADQUISICION, AÑOS_VIDA_UTIL, CTA_ACTIVO,"& _ 
                " CTA_GASTOS, CTA_DEPRECIACION, ESTADO, ESTADO_ACTIVO, TIPO_ACTIVO, MANTENIMIENTO"& _ 
                ", FECHA_MANTENIMIENTO FROM dbo.ACTIVO_FIJO_GENERAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.ACTIVO_FIJO_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.ACTIVO_FIJO_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.ACTIVO_FIJO_GENERALDataTable = New DataSetControlCombustibleCajaChica.ACTIVO_FIJO_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.ACTIVO_FIJO_GENERALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "ACTIVO_FIJO_GENERAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_ACTIVO_FIJO As Integer, ByVal Original_ID_PERSONAL As Integer, ByVal Original_ID_EMPRESA As Integer, ByVal Original_ID_SUCURSAL As Integer, ByVal Original_ID_GERENCIAS As Integer, ByVal Original_ID_AREA As Integer, ByVal Original_FECHA As Date, ByVal Original_VALOR_FACTURA As Decimal, ByVal Original_VALOR_ADICIONAL As Decimal, ByVal Original_VALOR_RESIDUAL As Decimal, ByVal Original_FECHA_ADQUISICION As Date, ByVal Original_AÑOS_VIDA_UTIL As Integer, ByVal Original_ESTADO As Integer, ByVal Original_FECHA_MANTENIMIENTO As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_ACTIVO_FIJO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_EMPRESA,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_SUCURSAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ID_GERENCIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FECHA,Date)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_VALOR_FACTURA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_VALOR_ADICIONAL,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_VALOR_RESIDUAL,Decimal)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FECHA_ADQUISICION,Date)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_AÑOS_VIDA_UTIL,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ESTADO,Integer)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_FECHA_MANTENIMIENTO,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_ACTIVO_FIJO As Integer,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_EMPRESA As Integer,  _
                    ByVal ID_SUCURSAL As Integer,  _
                    ByVal ID_GERENCIAS As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal CARPETA As String,  _
                    ByVal CONTRATO As String,  _
                    ByVal CODIGO As String,  _
                    ByVal NOMBRE_ACTIVO As String,  _
                    ByVal NOMBRE_PROVEDOR As String,  _
                    ByVal NOMBRE_CUSTODIO As String,  _
                    ByVal RESPONSABLE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal CODIGO_ARANCEL As String,  _
                    ByVal NUM_ORDEN_COMPRA As String,  _
                    ByVal NUM_FACTURA As String,  _
                    ByVal VALOR_FACTURA As Decimal,  _
                    ByVal VALOR_ADICIONAL As Decimal,  _
                    ByVal VALOR_RESIDUAL As Decimal,  _
                    ByVal FECHA_ADQUISICION As Date,  _
                    ByVal AÑOS_VIDA_UTIL As Integer,  _
                    ByVal CTA_ACTIVO As String,  _
                    ByVal CTA_GASTOS As String,  _
                    ByVal CTA_DEPRECIACION As String,  _
                    ByVal ESTADO As Integer,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal TIPO_ACTIVO As String,  _
                    ByVal MANTENIMIENTO As String,  _
                    ByVal FECHA_MANTENIMIENTO As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_ACTIVO_FIJO,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ID_EMPRESA,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_SUCURSAL,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_GERENCIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_AREA,Integer)
            If (CARPETA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CARPETA")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CARPETA,String)
            End If
            If (CONTRATO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTRATO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CONTRATO,String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODIGO,String)
            End If
            If (NOMBRE_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_ACTIVO")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NOMBRE_ACTIVO,String)
            End If
            If (NOMBRE_PROVEDOR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PROVEDOR")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(NOMBRE_PROVEDOR,String)
            End If
            If (NOMBRE_CUSTODIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CUSTODIO")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(NOMBRE_CUSTODIO,String)
            End If
            If (RESPONSABLE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RESPONSABLE")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RESPONSABLE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECHA,Date)
            If (CODIGO_ARANCEL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_ARANCEL")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CODIGO_ARANCEL,String)
            End If
            If (NUM_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUM_ORDEN_COMPRA")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NUM_ORDEN_COMPRA,String)
            End If
            If (NUM_FACTURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUM_FACTURA")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(NUM_FACTURA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(VALOR_FACTURA,Decimal)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(VALOR_ADICIONAL,Decimal)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(VALOR_RESIDUAL,Decimal)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(FECHA_ADQUISICION,Date)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(AÑOS_VIDA_UTIL,Integer)
            If (CTA_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_ACTIVO")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CTA_ACTIVO,String)
            End If
            If (CTA_GASTOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_GASTOS")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CTA_GASTOS,String)
            End If
            If (CTA_DEPRECIACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_DEPRECIACION")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CTA_DEPRECIACION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(ESTADO,Integer)
            If (ESTADO_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_ACTIVO")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ESTADO_ACTIVO,String)
            End If
            If (TIPO_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_ACTIVO")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TIPO_ACTIVO,String)
            End If
            If (MANTENIMIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MANTENIMIENTO")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MANTENIMIENTO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(FECHA_MANTENIMIENTO,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_ACTIVO_FIJO As Integer,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_EMPRESA As Integer,  _
                    ByVal ID_SUCURSAL As Integer,  _
                    ByVal ID_GERENCIAS As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal CARPETA As String,  _
                    ByVal CONTRATO As String,  _
                    ByVal CODIGO As String,  _
                    ByVal NOMBRE_ACTIVO As String,  _
                    ByVal NOMBRE_PROVEDOR As String,  _
                    ByVal NOMBRE_CUSTODIO As String,  _
                    ByVal RESPONSABLE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal CODIGO_ARANCEL As String,  _
                    ByVal NUM_ORDEN_COMPRA As String,  _
                    ByVal NUM_FACTURA As String,  _
                    ByVal VALOR_FACTURA As Decimal,  _
                    ByVal VALOR_ADICIONAL As Decimal,  _
                    ByVal VALOR_RESIDUAL As Decimal,  _
                    ByVal FECHA_ADQUISICION As Date,  _
                    ByVal AÑOS_VIDA_UTIL As Integer,  _
                    ByVal CTA_ACTIVO As String,  _
                    ByVal CTA_GASTOS As String,  _
                    ByVal CTA_DEPRECIACION As String,  _
                    ByVal ESTADO As Integer,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal TIPO_ACTIVO As String,  _
                    ByVal MANTENIMIENTO As String,  _
                    ByVal FECHA_MANTENIMIENTO As Date,  _
                    ByVal Original_ID_ACTIVO_FIJO As Integer,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_EMPRESA As Integer,  _
                    ByVal Original_ID_SUCURSAL As Integer,  _
                    ByVal Original_ID_GERENCIAS As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_FECHA As Date,  _
                    ByVal Original_VALOR_FACTURA As Decimal,  _
                    ByVal Original_VALOR_ADICIONAL As Decimal,  _
                    ByVal Original_VALOR_RESIDUAL As Decimal,  _
                    ByVal Original_FECHA_ADQUISICION As Date,  _
                    ByVal Original_AÑOS_VIDA_UTIL As Integer,  _
                    ByVal Original_ESTADO As Integer,  _
                    ByVal Original_FECHA_MANTENIMIENTO As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_ACTIVO_FIJO,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ID_EMPRESA,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_SUCURSAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_GERENCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_AREA,Integer)
            If (CARPETA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CARPETA")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CARPETA,String)
            End If
            If (CONTRATO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CONTRATO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CONTRATO,String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODIGO,String)
            End If
            If (NOMBRE_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_ACTIVO")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NOMBRE_ACTIVO,String)
            End If
            If (NOMBRE_PROVEDOR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PROVEDOR")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(NOMBRE_PROVEDOR,String)
            End If
            If (NOMBRE_CUSTODIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CUSTODIO")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(NOMBRE_CUSTODIO,String)
            End If
            If (RESPONSABLE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RESPONSABLE")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RESPONSABLE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECHA,Date)
            If (CODIGO_ARANCEL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_ARANCEL")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CODIGO_ARANCEL,String)
            End If
            If (NUM_ORDEN_COMPRA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUM_ORDEN_COMPRA")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NUM_ORDEN_COMPRA,String)
            End If
            If (NUM_FACTURA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUM_FACTURA")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(NUM_FACTURA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(VALOR_FACTURA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(VALOR_ADICIONAL,Decimal)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(VALOR_RESIDUAL,Decimal)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(FECHA_ADQUISICION,Date)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(AÑOS_VIDA_UTIL,Integer)
            If (CTA_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_ACTIVO")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CTA_ACTIVO,String)
            End If
            If (CTA_GASTOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_GASTOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CTA_GASTOS,String)
            End If
            If (CTA_DEPRECIACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_DEPRECIACION")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CTA_DEPRECIACION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ESTADO,Integer)
            If (ESTADO_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_ACTIVO")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ESTADO_ACTIVO,String)
            End If
            If (TIPO_ACTIVO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_ACTIVO")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(TIPO_ACTIVO,String)
            End If
            If (MANTENIMIENTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MANTENIMIENTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MANTENIMIENTO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(FECHA_MANTENIMIENTO,Date)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID_ACTIVO_FIJO,Integer)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_ID_EMPRESA,Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_ID_SUCURSAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ID_GERENCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_FECHA,Date)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_VALOR_FACTURA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_VALOR_ADICIONAL,Decimal)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_VALOR_RESIDUAL,Decimal)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FECHA_ADQUISICION,Date)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_AÑOS_VIDA_UTIL,Integer)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ESTADO,Integer)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_FECHA_MANTENIMIENTO,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_EMPRESA As Integer,  _
                    ByVal ID_SUCURSAL As Integer,  _
                    ByVal ID_GERENCIAS As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal CARPETA As String,  _
                    ByVal CONTRATO As String,  _
                    ByVal CODIGO As String,  _
                    ByVal NOMBRE_ACTIVO As String,  _
                    ByVal NOMBRE_PROVEDOR As String,  _
                    ByVal NOMBRE_CUSTODIO As String,  _
                    ByVal RESPONSABLE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal CODIGO_ARANCEL As String,  _
                    ByVal NUM_ORDEN_COMPRA As String,  _
                    ByVal NUM_FACTURA As String,  _
                    ByVal VALOR_FACTURA As Decimal,  _
                    ByVal VALOR_ADICIONAL As Decimal,  _
                    ByVal VALOR_RESIDUAL As Decimal,  _
                    ByVal FECHA_ADQUISICION As Date,  _
                    ByVal AÑOS_VIDA_UTIL As Integer,  _
                    ByVal CTA_ACTIVO As String,  _
                    ByVal CTA_GASTOS As String,  _
                    ByVal CTA_DEPRECIACION As String,  _
                    ByVal ESTADO As Integer,  _
                    ByVal ESTADO_ACTIVO As String,  _
                    ByVal TIPO_ACTIVO As String,  _
                    ByVal MANTENIMIENTO As String,  _
                    ByVal FECHA_MANTENIMIENTO As Date,  _
                    ByVal Original_ID_ACTIVO_FIJO As Integer,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_EMPRESA As Integer,  _
                    ByVal Original_ID_SUCURSAL As Integer,  _
                    ByVal Original_ID_GERENCIAS As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_FECHA As Date,  _
                    ByVal Original_VALOR_FACTURA As Decimal,  _
                    ByVal Original_VALOR_ADICIONAL As Decimal,  _
                    ByVal Original_VALOR_RESIDUAL As Decimal,  _
                    ByVal Original_FECHA_ADQUISICION As Date,  _
                    ByVal Original_AÑOS_VIDA_UTIL As Integer,  _
                    ByVal Original_ESTADO As Integer,  _
                    ByVal Original_FECHA_MANTENIMIENTO As Date) As Integer
            Return Me.Update(Original_ID_ACTIVO_FIJO, ID_PERSONAL, ID_EMPRESA, ID_SUCURSAL, ID_GERENCIAS, ID_AREA, CARPETA, CONTRATO, CODIGO, NOMBRE_ACTIVO, NOMBRE_PROVEDOR, NOMBRE_CUSTODIO, RESPONSABLE, FECHA, CODIGO_ARANCEL, NUM_ORDEN_COMPRA, NUM_FACTURA, VALOR_FACTURA, VALOR_ADICIONAL, VALOR_RESIDUAL, FECHA_ADQUISICION, AÑOS_VIDA_UTIL, CTA_ACTIVO, CTA_GASTOS, CTA_DEPRECIACION, ESTADO, ESTADO_ACTIVO, TIPO_ACTIVO, MANTENIMIENTO, FECHA_MANTENIMIENTO, Original_ID_ACTIVO_FIJO, Original_ID_PERSONAL, Original_ID_EMPRESA, Original_ID_SUCURSAL, Original_ID_GERENCIAS, Original_ID_AREA, Original_FECHA, Original_VALOR_FACTURA, Original_VALOR_ADICIONAL, Original_VALOR_RESIDUAL, Original_FECHA_ADQUISICION, Original_AÑOS_VIDA_UTIL, Original_ESTADO, Original_FECHA_MANTENIMIENTO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RUBROSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RUBROS"
            tableMapping.ColumnMappings.Add("ID_RUBRO", "ID_RUBRO")
            tableMapping.ColumnMappings.Add("NOMBRE_RUBRO", "NOMBRE_RUBRO")
            tableMapping.ColumnMappings.Add("VALOR_RUBRO", "VALOR_RUBRO")
            tableMapping.ColumnMappings.Add("ESTADO_RUBRO", "ESTADO_RUBRO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[RUBROS] WHERE (([ID_RUBRO] = @Original_ID_RUBRO) AND ([VALOR_R"& _ 
                "UBRO] = @Original_VALOR_RUBRO) AND ([ESTADO_RUBRO] = @Original_ESTADO_RUBRO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_RUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[RUBROS] ([ID_RUBRO], [NOMBRE_RUBRO], [VALOR_RUBRO], [ESTADO_RU"& _ 
                "BRO]) VALUES (@ID_RUBRO, @NOMBRE_RUBRO, @VALOR_RUBRO, @ESTADO_RUBRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID"& _ 
                "_RUBRO, NOMBRE_RUBRO, VALOR_RUBRO, ESTADO_RUBRO FROM RUBROS WHERE (ID_RUBRO = @I"& _ 
                "D_RUBRO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_RUBRO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_RUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[RUBROS] SET [ID_RUBRO] = @ID_RUBRO, [NOMBRE_RUBRO] = @NOMBRE_RUBRO,"& _ 
                " [VALOR_RUBRO] = @VALOR_RUBRO, [ESTADO_RUBRO] = @ESTADO_RUBRO WHERE (([ID_RUBRO]"& _ 
                " = @Original_ID_RUBRO) AND ([VALOR_RUBRO] = @Original_VALOR_RUBRO) AND ([ESTADO_"& _ 
                "RUBRO] = @Original_ESTADO_RUBRO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_RUBRO, NOMBRE_RUBRO, VALOR_RUBRO, "& _ 
                "ESTADO_RUBRO FROM RUBROS WHERE (ID_RUBRO = @ID_RUBRO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_RUBRO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_RUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_RUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_RUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_RUBRO, NOMBRE_RUBRO, VALOR_RUBRO, ESTADO_RUBRO FROM dbo.RUBROS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.RUBROSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.RUBROSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.RUBROSDataTable = New DataSetControlCombustibleCajaChica.RUBROSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.RUBROSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "RUBROS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_RUBRO As Integer, ByVal Original_VALOR_RUBRO As Decimal, ByVal Original_ESTADO_RUBRO As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_RUBRO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_VALOR_RUBRO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ESTADO_RUBRO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_RUBRO As Integer, ByVal NOMBRE_RUBRO As String, ByVal VALOR_RUBRO As Decimal, ByVal ESTADO_RUBRO As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_RUBRO,Integer)
            If (NOMBRE_RUBRO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_RUBRO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_RUBRO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(VALOR_RUBRO,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ESTADO_RUBRO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_RUBRO As Integer, ByVal NOMBRE_RUBRO As String, ByVal VALOR_RUBRO As Decimal, ByVal ESTADO_RUBRO As Integer, ByVal Original_ID_RUBRO As Integer, ByVal Original_VALOR_RUBRO As Decimal, ByVal Original_ESTADO_RUBRO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_RUBRO,Integer)
            If (NOMBRE_RUBRO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_RUBRO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_RUBRO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(VALOR_RUBRO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ESTADO_RUBRO,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_RUBRO,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_VALOR_RUBRO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ESTADO_RUBRO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_RUBRO As String, ByVal VALOR_RUBRO As Decimal, ByVal ESTADO_RUBRO As Integer, ByVal Original_ID_RUBRO As Integer, ByVal Original_VALOR_RUBRO As Decimal, ByVal Original_ESTADO_RUBRO As Integer) As Integer
            Return Me.Update(Original_ID_RUBRO, NOMBRE_RUBRO, VALOR_RUBRO, ESTADO_RUBRO, Original_ID_RUBRO, Original_VALOR_RUBRO, Original_ESTADO_RUBRO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PERSONALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PERSONAL"
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("CEDULA", "CEDULA")
            tableMapping.ColumnMappings.Add("NOMBRES", "NOMBRES")
            tableMapping.ColumnMappings.Add("APELLIDOS", "APELLIDOS")
            tableMapping.ColumnMappings.Add("PROVINCIA", "PROVINCIA")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("FECHA_NACIMIENTO", "FECHA_NACIMIENTO")
            tableMapping.ColumnMappings.Add("SEXO", "SEXO")
            tableMapping.ColumnMappings.Add("CIUDAD", "CIUDAD")
            tableMapping.ColumnMappings.Add("SUELDO", "SUELDO")
            tableMapping.ColumnMappings.Add("LIBRETA_MILITAR", "LIBRETA_MILITAR")
            tableMapping.ColumnMappings.Add("TIPO_SANGRE", "TIPO_SANGRE")
            tableMapping.ColumnMappings.Add("PASAPORTE", "PASAPORTE")
            tableMapping.ColumnMappings.Add("PESO", "PESO")
            tableMapping.ColumnMappings.Add("EDAD", "EDAD")
            tableMapping.ColumnMappings.Add("PRUEBA_ANTIDROGA", "PRUEBA_ANTIDROGA")
            tableMapping.ColumnMappings.Add("FECHA_ENTRADA", "FECHA_ENTRADA")
            tableMapping.ColumnMappings.Add("FECHA_SALIDA", "FECHA_SALIDA")
            tableMapping.ColumnMappings.Add("ESTADO_PERSONAL", "ESTADO_PERSONAL")
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA")
            tableMapping.ColumnMappings.Add("ID_CARGO_OCUPACIONAL", "ID_CARGO_OCUPACIONAL")
            tableMapping.ColumnMappings.Add("UBICACION", "UBICACION")
            tableMapping.ColumnMappings.Add("INSTRUCCION", "INSTRUCCION")
            tableMapping.ColumnMappings.Add("ESTADO_CIVIL", "ESTADO_CIVIL")
            tableMapping.ColumnMappings.Add("MOVIL", "MOVIL")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CANTIDAD_HIJOS", "CANTIDAD_HIJOS")
            tableMapping.ColumnMappings.Add("HISTORIA_CLINICA", "HISTORIA_CLINICA")
            tableMapping.ColumnMappings.Add("PARROQUIA", "PARROQUIA")
            tableMapping.ColumnMappings.Add("ESTATURA", "ESTATURA")
            tableMapping.ColumnMappings.Add("DISCAPACIDAD", "DISCAPACIDAD")
            tableMapping.ColumnMappings.Add("EXAMEN_PSICOLOGICO", "EXAMEN_PSICOLOGICO")
            tableMapping.ColumnMappings.Add("LUGAR_EXAMEN_PSICOLOGICO", "LUGAR_EXAMEN_PSICOLOGICO")
            tableMapping.ColumnMappings.Add("CARNET_CONADIS", "CARNET_CONADIS")
            tableMapping.ColumnMappings.Add("DATOS_HIJOS", "DATOS_HIJOS")
            tableMapping.ColumnMappings.Add("DATOS_ESPOSA", "DATOS_ESPOSA")
            tableMapping.ColumnMappings.Add("CASA", "CASA")
            tableMapping.ColumnMappings.Add("ARRIENDO", "ARRIENDO")
            tableMapping.ColumnMappings.Add("DEUDOR_GARANTE", "DEUDOR_GARANTE")
            tableMapping.ColumnMappings.Add("CANTIDAD_DEUDA", "CANTIDAD_DEUDA")
            tableMapping.ColumnMappings.Add("A_QUIEN_ADEUDA", "A_QUIEN_ADEUDA")
            tableMapping.ColumnMappings.Add("TRABAJO_ATERIORMENTE", "TRABAJO_ATERIORMENTE")
            tableMapping.ColumnMappings.Add("ANTERIOR_TRABAJO", "ANTERIOR_TRABAJO")
            tableMapping.ColumnMappings.Add("CARGO_ANTERIOR_TRABAJO", "CARGO_ANTERIOR_TRABAJO")
            tableMapping.ColumnMappings.Add("MOTIVO_SALIDA_TRABAJO", "MOTIVO_SALIDA_TRABAJO")
            tableMapping.ColumnMappings.Add("ENTRADA_ANTERIOR", "ENTRADA_ANTERIOR")
            tableMapping.ColumnMappings.Add("SALIDA_ANTERIOR", "SALIDA_ANTERIOR")
            tableMapping.ColumnMappings.Add("NOMBRES_PATRONO_ANTERIOR", "NOMBRES_PATRONO_ANTERIOR")
            tableMapping.ColumnMappings.Add("TELEFONO_PATRONO_ANTERIOR", "TELEFONO_PATRONO_ANTERIOR")
            tableMapping.ColumnMappings.Add("RECOMENDACIONES", "RECOMENDACIONES")
            tableMapping.ColumnMappings.Add("DATOS_FAMILIARES", "DATOS_FAMILIARES")
            tableMapping.ColumnMappings.Add("DATOS_EMERGENCIA", "DATOS_EMERGENCIA")
            tableMapping.ColumnMappings.Add("FOTO", "FOTO")
            tableMapping.ColumnMappings.Add("PERFIL", "PERFIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PERSONAL] WHERE (([ID_PERSONAL] = @Original_ID_PERSONAL) AND ("& _ 
                "[CEDULA] = @Original_CEDULA) AND ((@IsNull_FECHA_NACIMIENTO = 1 AND [FECHA_NACIM"& _ 
                "IENTO] IS NULL) OR ([FECHA_NACIMIENTO] = @Original_FECHA_NACIMIENTO)) AND ([SEXO"& _ 
                "] = @Original_SEXO) AND ([SUELDO] = @Original_SUELDO) AND ([LIBRETA_MILITAR] = @"& _ 
                "Original_LIBRETA_MILITAR) AND ([TIPO_SANGRE] = @Original_TIPO_SANGRE) AND ([PASA"& _ 
                "PORTE] = @Original_PASAPORTE) AND ([PESO] = @Original_PESO) AND ([EDAD] = @Origi"& _ 
                "nal_EDAD) AND ([PRUEBA_ANTIDROGA] = @Original_PRUEBA_ANTIDROGA) AND ((@IsNull_FE"& _ 
                "CHA_ENTRADA = 1 AND [FECHA_ENTRADA] IS NULL) OR ([FECHA_ENTRADA] = @Original_FEC"& _ 
                "HA_ENTRADA)) AND ((@IsNull_FECHA_SALIDA = 1 AND [FECHA_SALIDA] IS NULL) OR ([FEC"& _ 
                "HA_SALIDA] = @Original_FECHA_SALIDA)) AND ([ESTADO_PERSONAL] = @Original_ESTADO_"& _ 
                "PERSONAL) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_CARGO_OCUPACIONAL] = @Ori"& _ 
                "ginal_ID_CARGO_OCUPACIONAL) AND ([ESTADO_CIVIL] = @Original_ESTADO_CIVIL) AND (("& _ 
                "@IsNull_CANTIDAD_HIJOS = 1 AND [CANTIDAD_HIJOS] IS NULL) OR ([CANTIDAD_HIJOS] = "& _ 
                "@Original_CANTIDAD_HIJOS)) AND ((@IsNull_ESTATURA = 1 AND [ESTATURA] IS NULL) OR"& _ 
                " ([ESTATURA] = @Original_ESTATURA)) AND ((@IsNull_CANTIDAD_DEUDA = 1 AND [CANTID"& _ 
                "AD_DEUDA] IS NULL) OR ([CANTIDAD_DEUDA] = @Original_CANTIDAD_DEUDA)) AND ((@IsNu"& _ 
                "ll_ENTRADA_ANTERIOR = 1 AND [ENTRADA_ANTERIOR] IS NULL) OR ([ENTRADA_ANTERIOR] ="& _ 
                " @Original_ENTRADA_ANTERIOR)) AND ((@IsNull_SALIDA_ANTERIOR = 1 AND [SALIDA_ANTE"& _ 
                "RIOR] IS NULL) OR ([SALIDA_ANTERIOR] = @Original_SALIDA_ANTERIOR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_ENTRADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_SALIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTATURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTATURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PERSONAL] ([ID_PERSONAL], [CEDULA], [NOMBRES], [APELLIDOS], [P"& _ 
                "ROVINCIA], [DIRECCION], [FECHA_NACIMIENTO], [SEXO], [CIUDAD], [SUELDO], [LIBRETA"& _ 
                "_MILITAR], [TIPO_SANGRE], [PASAPORTE], [PESO], [EDAD], [PRUEBA_ANTIDROGA], [FECH"& _ 
                "A_ENTRADA], [FECHA_SALIDA], [ESTADO_PERSONAL], [ID_AREA], [ID_CARGO_OCUPACIONAL]"& _ 
                ", [UBICACION], [INSTRUCCION], [ESTADO_CIVIL], [MOVIL], [TELEFONO], [CANTIDAD_HIJ"& _ 
                "OS], [HISTORIA_CLINICA], [PARROQUIA], [ESTATURA], [DISCAPACIDAD], [EXAMEN_PSICOL"& _ 
                "OGICO], [LUGAR_EXAMEN_PSICOLOGICO], [CARNET_CONADIS], [DATOS_HIJOS], [DATOS_ESPO"& _ 
                "SA], [CASA], [ARRIENDO], [DEUDOR_GARANTE], [CANTIDAD_DEUDA], [A_QUIEN_ADEUDA], ["& _ 
                "TRABAJO_ATERIORMENTE], [ANTERIOR_TRABAJO], [CARGO_ANTERIOR_TRABAJO], [MOTIVO_SAL"& _ 
                "IDA_TRABAJO], [ENTRADA_ANTERIOR], [SALIDA_ANTERIOR], [NOMBRES_PATRONO_ANTERIOR],"& _ 
                " [TELEFONO_PATRONO_ANTERIOR], [RECOMENDACIONES], [DATOS_FAMILIARES], [DATOS_EMER"& _ 
                "GENCIA], [FOTO], [PERFIL]) VALUES (@ID_PERSONAL, @CEDULA, @NOMBRES, @APELLIDOS, "& _ 
                "@PROVINCIA, @DIRECCION, @FECHA_NACIMIENTO, @SEXO, @CIUDAD, @SUELDO, @LIBRETA_MIL"& _ 
                "ITAR, @TIPO_SANGRE, @PASAPORTE, @PESO, @EDAD, @PRUEBA_ANTIDROGA, @FECHA_ENTRADA,"& _ 
                " @FECHA_SALIDA, @ESTADO_PERSONAL, @ID_AREA, @ID_CARGO_OCUPACIONAL, @UBICACION, @"& _ 
                "INSTRUCCION, @ESTADO_CIVIL, @MOVIL, @TELEFONO, @CANTIDAD_HIJOS, @HISTORIA_CLINIC"& _ 
                "A, @PARROQUIA, @ESTATURA, @DISCAPACIDAD, @EXAMEN_PSICOLOGICO, @LUGAR_EXAMEN_PSIC"& _ 
                "OLOGICO, @CARNET_CONADIS, @DATOS_HIJOS, @DATOS_ESPOSA, @CASA, @ARRIENDO, @DEUDOR"& _ 
                "_GARANTE, @CANTIDAD_DEUDA, @A_QUIEN_ADEUDA, @TRABAJO_ATERIORMENTE, @ANTERIOR_TRA"& _ 
                "BAJO, @CARGO_ANTERIOR_TRABAJO, @MOTIVO_SALIDA_TRABAJO, @ENTRADA_ANTERIOR, @SALID"& _ 
                "A_ANTERIOR, @NOMBRES_PATRONO_ANTERIOR, @TELEFONO_PATRONO_ANTERIOR, @RECOMENDACIO"& _ 
                "NES, @DATOS_FAMILIARES, @DATOS_EMERGENCIA, @FOTO, @PERFIL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PERSONAL,"& _ 
                " CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDA"& _ 
                "D, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA"& _ 
                ", FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL, U"& _ 
                "BICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_C"& _ 
                "LINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSIC"& _ 
                "OLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARAN"& _ 
                "TE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARG"& _ 
                "O_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NO"& _ 
                "MBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILI"& _ 
                "ARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM PERSONAL WHERE (ID_PERSONAL = @ID_PERS"& _ 
                "ONAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UBICACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UBICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSTRUCCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSTRUCCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HISTORIA_CLINICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HISTORIA_CLINICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISCAPACIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISCAPACIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARNET_CONADIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARNET_CONADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_HIJOS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_ESPOSA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_ESPOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARRIENDO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARRIENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDOR_GARANTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDOR_GARANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_QUIEN_ADEUDA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_QUIEN_ADEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABAJO_ATERIORMENTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABAJO_ATERIORMENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARGO_ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARGO_ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_SALIDA_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_SALIDA_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECOMENDACIONES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECOMENDACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_FAMILIARES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_FAMILIARES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_EMERGENCIA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_EMERGENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOTO", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFIL", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PERSONAL] SET [ID_PERSONAL] = @ID_PERSONAL, [CEDULA] = @CEDULA, [NO"& _ 
                "MBRES] = @NOMBRES, [APELLIDOS] = @APELLIDOS, [PROVINCIA] = @PROVINCIA, [DIRECCIO"& _ 
                "N] = @DIRECCION, [FECHA_NACIMIENTO] = @FECHA_NACIMIENTO, [SEXO] = @SEXO, [CIUDAD"& _ 
                "] = @CIUDAD, [SUELDO] = @SUELDO, [LIBRETA_MILITAR] = @LIBRETA_MILITAR, [TIPO_SAN"& _ 
                "GRE] = @TIPO_SANGRE, [PASAPORTE] = @PASAPORTE, [PESO] = @PESO, [EDAD] = @EDAD, ["& _ 
                "PRUEBA_ANTIDROGA] = @PRUEBA_ANTIDROGA, [FECHA_ENTRADA] = @FECHA_ENTRADA, [FECHA_"& _ 
                "SALIDA] = @FECHA_SALIDA, [ESTADO_PERSONAL] = @ESTADO_PERSONAL, [ID_AREA] = @ID_A"& _ 
                "REA, [ID_CARGO_OCUPACIONAL] = @ID_CARGO_OCUPACIONAL, [UBICACION] = @UBICACION, ["& _ 
                "INSTRUCCION] = @INSTRUCCION, [ESTADO_CIVIL] = @ESTADO_CIVIL, [MOVIL] = @MOVIL, ["& _ 
                "TELEFONO] = @TELEFONO, [CANTIDAD_HIJOS] = @CANTIDAD_HIJOS, [HISTORIA_CLINICA] = "& _ 
                "@HISTORIA_CLINICA, [PARROQUIA] = @PARROQUIA, [ESTATURA] = @ESTATURA, [DISCAPACID"& _ 
                "AD] = @DISCAPACIDAD, [EXAMEN_PSICOLOGICO] = @EXAMEN_PSICOLOGICO, [LUGAR_EXAMEN_P"& _ 
                "SICOLOGICO] = @LUGAR_EXAMEN_PSICOLOGICO, [CARNET_CONADIS] = @CARNET_CONADIS, [DA"& _ 
                "TOS_HIJOS] = @DATOS_HIJOS, [DATOS_ESPOSA] = @DATOS_ESPOSA, [CASA] = @CASA, [ARRI"& _ 
                "ENDO] = @ARRIENDO, [DEUDOR_GARANTE] = @DEUDOR_GARANTE, [CANTIDAD_DEUDA] = @CANTI"& _ 
                "DAD_DEUDA, [A_QUIEN_ADEUDA] = @A_QUIEN_ADEUDA, [TRABAJO_ATERIORMENTE] = @TRABAJO"& _ 
                "_ATERIORMENTE, [ANTERIOR_TRABAJO] = @ANTERIOR_TRABAJO, [CARGO_ANTERIOR_TRABAJO] "& _ 
                "= @CARGO_ANTERIOR_TRABAJO, [MOTIVO_SALIDA_TRABAJO] = @MOTIVO_SALIDA_TRABAJO, [EN"& _ 
                "TRADA_ANTERIOR] = @ENTRADA_ANTERIOR, [SALIDA_ANTERIOR] = @SALIDA_ANTERIOR, [NOMB"& _ 
                "RES_PATRONO_ANTERIOR] = @NOMBRES_PATRONO_ANTERIOR, [TELEFONO_PATRONO_ANTERIOR] ="& _ 
                " @TELEFONO_PATRONO_ANTERIOR, [RECOMENDACIONES] = @RECOMENDACIONES, [DATOS_FAMILI"& _ 
                "ARES] = @DATOS_FAMILIARES, [DATOS_EMERGENCIA] = @DATOS_EMERGENCIA, [FOTO] = @FOT"& _ 
                "O, [PERFIL] = @PERFIL WHERE (([ID_PERSONAL] = @Original_ID_PERSONAL) AND ([CEDUL"& _ 
                "A] = @Original_CEDULA) AND ((@IsNull_FECHA_NACIMIENTO = 1 AND [FECHA_NACIMIENTO]"& _ 
                " IS NULL) OR ([FECHA_NACIMIENTO] = @Original_FECHA_NACIMIENTO)) AND ([SEXO] = @O"& _ 
                "riginal_SEXO) AND ([SUELDO] = @Original_SUELDO) AND ([LIBRETA_MILITAR] = @Origin"& _ 
                "al_LIBRETA_MILITAR) AND ([TIPO_SANGRE] = @Original_TIPO_SANGRE) AND ([PASAPORTE]"& _ 
                " = @Original_PASAPORTE) AND ([PESO] = @Original_PESO) AND ([EDAD] = @Original_ED"& _ 
                "AD) AND ([PRUEBA_ANTIDROGA] = @Original_PRUEBA_ANTIDROGA) AND ((@IsNull_FECHA_EN"& _ 
                "TRADA = 1 AND [FECHA_ENTRADA] IS NULL) OR ([FECHA_ENTRADA] = @Original_FECHA_ENT"& _ 
                "RADA)) AND ((@IsNull_FECHA_SALIDA = 1 AND [FECHA_SALIDA] IS NULL) OR ([FECHA_SAL"& _ 
                "IDA] = @Original_FECHA_SALIDA)) AND ([ESTADO_PERSONAL] = @Original_ESTADO_PERSON"& _ 
                "AL) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_CARGO_OCUPACIONAL] = @Original_"& _ 
                "ID_CARGO_OCUPACIONAL) AND ([ESTADO_CIVIL] = @Original_ESTADO_CIVIL) AND ((@IsNul"& _ 
                "l_CANTIDAD_HIJOS = 1 AND [CANTIDAD_HIJOS] IS NULL) OR ([CANTIDAD_HIJOS] = @Origi"& _ 
                "nal_CANTIDAD_HIJOS)) AND ((@IsNull_ESTATURA = 1 AND [ESTATURA] IS NULL) OR ([EST"& _ 
                "ATURA] = @Original_ESTATURA)) AND ((@IsNull_CANTIDAD_DEUDA = 1 AND [CANTIDAD_DEU"& _ 
                "DA] IS NULL) OR ([CANTIDAD_DEUDA] = @Original_CANTIDAD_DEUDA)) AND ((@IsNull_ENT"& _ 
                "RADA_ANTERIOR = 1 AND [ENTRADA_ANTERIOR] IS NULL) OR ([ENTRADA_ANTERIOR] = @Orig"& _ 
                "inal_ENTRADA_ANTERIOR)) AND ((@IsNull_SALIDA_ANTERIOR = 1 AND [SALIDA_ANTERIOR] "& _ 
                "IS NULL) OR ([SALIDA_ANTERIOR] = @Original_SALIDA_ANTERIOR)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PERSON"& _ 
                "AL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CI"& _ 
                "UDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDR"& _ 
                "OGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL"& _ 
                ", UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORI"& _ 
                "A_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_P"& _ 
                "SICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GA"& _ 
                "RANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, C"& _ 
                "ARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR,"& _ 
                " NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAM"& _ 
                "ILIARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM PERSONAL WHERE (ID_PERSONAL = @ID_P"& _ 
                "ERSONAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UBICACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UBICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSTRUCCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSTRUCCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HISTORIA_CLINICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HISTORIA_CLINICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISCAPACIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISCAPACIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARNET_CONADIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARNET_CONADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_HIJOS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_ESPOSA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_ESPOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARRIENDO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARRIENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDOR_GARANTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDOR_GARANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_QUIEN_ADEUDA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_QUIEN_ADEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABAJO_ATERIORMENTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABAJO_ATERIORMENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARGO_ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARGO_ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_SALIDA_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_SALIDA_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECOMENDACIONES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECOMENDACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_FAMILIARES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_FAMILIARES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_EMERGENCIA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_EMERGENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOTO", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFIL", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_ENTRADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_SALIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTATURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTATURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIM"& _ 
                "IENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD"& _ 
                ", PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CA"& _ 
                "RGO_OCUPACIONAL, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD"& _ 
                "_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO,"& _ 
                " LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRI"& _ 
                "ENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTE"& _ 
                "RIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, S"& _ 
                "ALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACI"& _ 
                "ONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM dbo.PERSONAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.PERSONALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.PERSONALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.PERSONALDataTable = New DataSetControlCombustibleCajaChica.PERSONALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.PERSONALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "PERSONAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CEDULA,String)
            End If
            If (Original_FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SEXO")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SEXO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_SUELDO,Decimal)
            If (Original_LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LIBRETA_MILITAR")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LIBRETA_MILITAR,String)
            End If
            If (Original_TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_SANGRE")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_TIPO_SANGRE,String)
            End If
            If (Original_PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PASAPORTE")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PASAPORTE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PESO,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EDAD,Integer)
            If (Original_PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PRUEBA_ANTIDROGA,String)
            End If
            If (Original_FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ESTADO_PERSONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            If (Original_ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_CIVIL")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ESTADO_CIVIL,String)
            End If
            If (Original_CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTATURA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ESTATURA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_PERSONAL,Integer)
            If (CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CEDULA,String)
            End If
            If (NOMBRES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRES,String)
            End If
            If (APELLIDOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APELLIDOS")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(APELLIDOS,String)
            End If
            If (PROVINCIA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PROVINCIA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DIRECCION,String)
            End If
            If (FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEXO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SEXO,String)
            End If
            If (CIUDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CIUDAD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(SUELDO,Decimal)
            If (LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LIBRETA_MILITAR")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LIBRETA_MILITAR,String)
            End If
            If (TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_SANGRE")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TIPO_SANGRE,String)
            End If
            If (PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PASAPORTE")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PASAPORTE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(PESO,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(EDAD,Integer)
            If (PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRUEBA_ANTIDROGA,String)
            End If
            If (FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(ESTADO_PERSONAL,Integer)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(ID_AREA,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (UBICACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UBICACION")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(UBICACION,String)
            End If
            If (INSTRUCCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSTRUCCION")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(INSTRUCCION,String)
            End If
            If (ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_CIVIL")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ESTADO_CIVIL,String)
            End If
            If (MOVIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MOVIL,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TELEFONO,String)
            End If
            If (CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HISTORIA_CLINICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(HISTORIA_CLINICA,String)
            End If
            If (PARROQUIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PARROQUIA,String)
            End If
            If (ESTATURA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ESTATURA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DISCAPACIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DISCAPACIDAD,String)
            End If
            If (EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(EXAMEN_PSICOLOGICO,String)
            End If
            If (LUGAR_EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(LUGAR_EXAMEN_PSICOLOGICO,String)
            End If
            If (CARNET_CONADIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CARNET_CONADIS,String)
            End If
            If (DATOS_HIJOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(DATOS_HIJOS,String)
            End If
            If (DATOS_ESPOSA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(DATOS_ESPOSA,String)
            End If
            If (CASA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CASA,String)
            End If
            If (ARRIENDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ARRIENDO,String)
            End If
            If (DEUDOR_GARANTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DEUDOR_GARANTE,String)
            End If
            If (CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (A_QUIEN_ADEUDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(A_QUIEN_ADEUDA,String)
            End If
            If (TRABAJO_ATERIORMENTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(TRABAJO_ATERIORMENTE,String)
            End If
            If (ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ANTERIOR_TRABAJO,String)
            End If
            If (CARGO_ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CARGO_ANTERIOR_TRABAJO,String)
            End If
            If (MOTIVO_SALIDA_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MOTIVO_SALIDA_TRABAJO,String)
            End If
            If (ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (NOMBRES_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(NOMBRES_PATRONO_ANTERIOR,String)
            End If
            If (TELEFONO_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(TELEFONO_PATRONO_ANTERIOR,String)
            End If
            If (RECOMENDACIONES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(RECOMENDACIONES,String)
            End If
            If (DATOS_FAMILIARES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(DATOS_FAMILIARES,String)
            End If
            If (DATOS_EMERGENCIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DATOS_EMERGENCIA,String)
            End If
            If (FOTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(FOTO,Byte())
            End If
            If (PERFIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(PERFIL,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_PERSONAL,Integer)
            If (CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CEDULA,String)
            End If
            If (NOMBRES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRES,String)
            End If
            If (APELLIDOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APELLIDOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(APELLIDOS,String)
            End If
            If (PROVINCIA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PROVINCIA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DIRECCION,String)
            End If
            If (FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEXO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SEXO,String)
            End If
            If (CIUDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CIUDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SUELDO,Decimal)
            If (LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LIBRETA_MILITAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(LIBRETA_MILITAR,String)
            End If
            If (TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_SANGRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TIPO_SANGRE,String)
            End If
            If (PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PASAPORTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PASAPORTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PESO,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EDAD,Integer)
            If (PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRUEBA_ANTIDROGA,String)
            End If
            If (FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ESTADO_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ID_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (UBICACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UBICACION")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(UBICACION,String)
            End If
            If (INSTRUCCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSTRUCCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(INSTRUCCION,String)
            End If
            If (ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_CIVIL")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ESTADO_CIVIL,String)
            End If
            If (MOVIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MOVIL,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TELEFONO,String)
            End If
            If (CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HISTORIA_CLINICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(HISTORIA_CLINICA,String)
            End If
            If (PARROQUIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(PARROQUIA,String)
            End If
            If (ESTATURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ESTATURA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DISCAPACIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(DISCAPACIDAD,String)
            End If
            If (EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(EXAMEN_PSICOLOGICO,String)
            End If
            If (LUGAR_EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(LUGAR_EXAMEN_PSICOLOGICO,String)
            End If
            If (CARNET_CONADIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CARNET_CONADIS,String)
            End If
            If (DATOS_HIJOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DATOS_HIJOS,String)
            End If
            If (DATOS_ESPOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(DATOS_ESPOSA,String)
            End If
            If (CASA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CASA,String)
            End If
            If (ARRIENDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ARRIENDO,String)
            End If
            If (DEUDOR_GARANTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DEUDOR_GARANTE,String)
            End If
            If (CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (A_QUIEN_ADEUDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(A_QUIEN_ADEUDA,String)
            End If
            If (TRABAJO_ATERIORMENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(TRABAJO_ATERIORMENTE,String)
            End If
            If (ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ANTERIOR_TRABAJO,String)
            End If
            If (CARGO_ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CARGO_ANTERIOR_TRABAJO,String)
            End If
            If (MOTIVO_SALIDA_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(MOTIVO_SALIDA_TRABAJO,String)
            End If
            If (ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (NOMBRES_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(NOMBRES_PATRONO_ANTERIOR,String)
            End If
            If (TELEFONO_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(TELEFONO_PATRONO_ANTERIOR,String)
            End If
            If (RECOMENDACIONES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(RECOMENDACIONES,String)
            End If
            If (DATOS_FAMILIARES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(DATOS_FAMILIARES,String)
            End If
            If (DATOS_EMERGENCIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(DATOS_EMERGENCIA,String)
            End If
            If (FOTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(FOTO,Byte())
            End If
            If (PERFIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(PERFIL,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_CEDULA,String)
            End If
            If (Original_FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SEXO")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_SEXO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_SUELDO,Decimal)
            If (Original_LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LIBRETA_MILITAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_LIBRETA_MILITAR,String)
            End If
            If (Original_TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_SANGRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_TIPO_SANGRE,String)
            End If
            If (Original_PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PASAPORTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_PASAPORTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_PESO,Integer)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_EDAD,Integer)
            If (Original_PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_PRUEBA_ANTIDROGA,String)
            End If
            If (Original_FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_ESTADO_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            If (Original_ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_CIVIL")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_ESTADO_CIVIL,String)
            End If
            If (Original_CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTATURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ESTATURA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL, Original_ID_PERSONAL, Original_CEDULA, Original_FECHA_NACIMIENTO, Original_SEXO, Original_SUELDO, Original_LIBRETA_MILITAR, Original_TIPO_SANGRE, Original_PASAPORTE, Original_PESO, Original_EDAD, Original_PRUEBA_ANTIDROGA, Original_FECHA_ENTRADA, Original_FECHA_SALIDA, Original_ESTADO_PERSONAL, Original_ID_AREA, Original_ID_CARGO_OCUPACIONAL, Original_ESTADO_CIVIL, Original_CANTIDAD_HIJOS, Original_ESTATURA, Original_CANTIDAD_DEUDA, Original_ENTRADA_ANTERIOR, Original_SALIDA_ANTERIOR)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GASTOS_CAJA_CHICATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GASTOS_CAJA_CHICA"
            tableMapping.ColumnMappings.Add("ID_GASTOS_CAJA_CH", "ID_GASTOS_CAJA_CH")
            tableMapping.ColumnMappings.Add("NOMBRE_GASTO_CAJA_CH", "NOMBRE_GASTO_CAJA_CH")
            tableMapping.ColumnMappings.Add("CTA_CONTABLE_GASTO_CAJA_CH", "CTA_CONTABLE_GASTO_CAJA_CH")
            tableMapping.ColumnMappings.Add("ID_PLAN", "ID_PLAN")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GASTOS_CAJA_CHICA] WHERE (([ID_GASTOS_CAJA_CH] = @Original_ID_"& _ 
                "GASTOS_CAJA_CH) AND ([ID_PLAN] = @Original_ID_PLAN) AND ([ESTADO] = @Original_ES"& _ 
                "TADO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CAJA_CH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PLAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PLAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GASTOS_CAJA_CHICA] ([ID_GASTOS_CAJA_CH], [NOMBRE_GASTO_CAJA_CH"& _ 
                "], [CTA_CONTABLE_GASTO_CAJA_CH], [ID_PLAN], [ESTADO]) VALUES (@ID_GASTOS_CAJA_CH"& _ 
                ", @NOMBRE_GASTO_CAJA_CH, @CTA_CONTABLE_GASTO_CAJA_CH, @ID_PLAN, @ESTADO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T ID_GASTOS_CAJA_CH, NOMBRE_GASTO_CAJA_CH, CTA_CONTABLE_GASTO_CAJA_CH, ID_PLAN, "& _ 
                "ESTADO FROM GASTOS_CAJA_CHICA WHERE (ID_GASTOS_CAJA_CH = @ID_GASTOS_CAJA_CH)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_GASTO_CAJA_CH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_CONTABLE_GASTO_CAJA_CH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_CONTABLE_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PLAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PLAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GASTOS_CAJA_CHICA] SET [ID_GASTOS_CAJA_CH] = @ID_GASTOS_CAJA_CH, [N"& _ 
                "OMBRE_GASTO_CAJA_CH] = @NOMBRE_GASTO_CAJA_CH, [CTA_CONTABLE_GASTO_CAJA_CH] = @CT"& _ 
                "A_CONTABLE_GASTO_CAJA_CH, [ID_PLAN] = @ID_PLAN, [ESTADO] = @ESTADO WHERE (([ID_G"& _ 
                "ASTOS_CAJA_CH] = @Original_ID_GASTOS_CAJA_CH) AND ([ID_PLAN] = @Original_ID_PLAN"& _ 
                ") AND ([ESTADO] = @Original_ESTADO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_GASTOS_CAJA_CH, NOMBRE_GASTO_CA"& _ 
                "JA_CH, CTA_CONTABLE_GASTO_CAJA_CH, ID_PLAN, ESTADO FROM GASTOS_CAJA_CHICA WHERE "& _ 
                "(ID_GASTOS_CAJA_CH = @ID_GASTOS_CAJA_CH)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTOS_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_GASTO_CAJA_CH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_CONTABLE_GASTO_CAJA_CH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_CONTABLE_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PLAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PLAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTOS_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTOS_CAJA_CH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PLAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PLAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_GASTOS_CAJA_CH, NOMBRE_GASTO_CAJA_CH, CTA_CONTABLE_GASTO_CAJA_CH, ID_PL"& _ 
                "AN, ESTADO FROM dbo.GASTOS_CAJA_CHICA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.GASTOS_CAJA_CHICADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.GASTOS_CAJA_CHICADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.GASTOS_CAJA_CHICADataTable = New DataSetControlCombustibleCajaChica.GASTOS_CAJA_CHICADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.GASTOS_CAJA_CHICADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "GASTOS_CAJA_CHICA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_GASTOS_CAJA_CH As Integer, ByVal Original_ID_PLAN As Integer, ByVal Original_ESTADO As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_GASTOS_CAJA_CH,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_PLAN,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_GASTOS_CAJA_CH As Integer, ByVal NOMBRE_GASTO_CAJA_CH As String, ByVal CTA_CONTABLE_GASTO_CAJA_CH As String, ByVal ID_PLAN As Integer, ByVal ESTADO As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_GASTOS_CAJA_CH,Integer)
            If (NOMBRE_GASTO_CAJA_CH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_GASTO_CAJA_CH")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_GASTO_CAJA_CH,String)
            End If
            If (CTA_CONTABLE_GASTO_CAJA_CH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_CONTABLE_GASTO_CAJA_CH")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CTA_CONTABLE_GASTO_CAJA_CH,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_PLAN,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_GASTOS_CAJA_CH As Integer, ByVal NOMBRE_GASTO_CAJA_CH As String, ByVal CTA_CONTABLE_GASTO_CAJA_CH As String, ByVal ID_PLAN As Integer, ByVal ESTADO As Integer, ByVal Original_ID_GASTOS_CAJA_CH As Integer, ByVal Original_ID_PLAN As Integer, ByVal Original_ESTADO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_GASTOS_CAJA_CH,Integer)
            If (NOMBRE_GASTO_CAJA_CH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_GASTO_CAJA_CH")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_GASTO_CAJA_CH,String)
            End If
            If (CTA_CONTABLE_GASTO_CAJA_CH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_CONTABLE_GASTO_CAJA_CH")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CTA_CONTABLE_GASTO_CAJA_CH,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_PLAN,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ESTADO,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_GASTOS_CAJA_CH,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_PLAN,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ESTADO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_GASTO_CAJA_CH As String, ByVal CTA_CONTABLE_GASTO_CAJA_CH As String, ByVal ID_PLAN As Integer, ByVal ESTADO As Integer, ByVal Original_ID_GASTOS_CAJA_CH As Integer, ByVal Original_ID_PLAN As Integer, ByVal Original_ESTADO As Integer) As Integer
            Return Me.Update(Original_ID_GASTOS_CAJA_CH, NOMBRE_GASTO_CAJA_CH, CTA_CONTABLE_GASTO_CAJA_CH, ID_PLAN, ESTADO, Original_ID_GASTOS_CAJA_CH, Original_ID_PLAN, Original_ESTADO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SOLICITUD_CAJA_CHICATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SOLICITUD_CAJA_CHICA"
            tableMapping.ColumnMappings.Add("ID_SOLICTUD_CCH", "ID_SOLICTUD_CCH")
            tableMapping.ColumnMappings.Add("NUMERO_SOLICITUD_CCH", "NUMERO_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("FECHA_SOLICITUD_CCH", "FECHA_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("VALOR_SOLICITUD_CCH", "VALOR_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("DETALLE_SOLICITUD_CCH", "DETALLE_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("COD_DEBE_CCH", "COD_DEBE_CCH")
            tableMapping.ColumnMappings.Add("COD_HABER_CCH", "COD_HABER_CCH")
            tableMapping.ColumnMappings.Add("ESTADO_SOLICITUD_CCH", "ESTADO_SOLICITUD_CCH")
            tableMapping.ColumnMappings.Add("ID_CAJA_CHICA", "ID_CAJA_CHICA")
            tableMapping.ColumnMappings.Add("ID_RESPONSABLE_AUTO_CCH", "ID_RESPONSABLE_AUTO_CCH")
            tableMapping.ColumnMappings.Add("ID_CENTRO_COSTO", "ID_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("ID_GASTO_CAJA_CH", "ID_GASTO_CAJA_CH")
            tableMapping.ColumnMappings.Add("ID_PROVINCIA", "ID_PROVINCIA")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("ID_PARROQUIAS", "ID_PARROQUIAS")
            tableMapping.ColumnMappings.Add("NOMBRES_RECIBE", "NOMBRES_RECIBE")
            tableMapping.ColumnMappings.Add("CEDULA_RECIBE", "CEDULA_RECIBE")
            tableMapping.ColumnMappings.Add("NOMBRES_ENTREGA", "NOMBRES_ENTREGA")
            tableMapping.ColumnMappings.Add("CEDULA_ENTREGA", "CEDULA_ENTREGA")
            tableMapping.ColumnMappings.Add("ID_PARAMETRO_DOCUMENTOS", "ID_PARAMETRO_DOCUMENTOS")
            tableMapping.ColumnMappings.Add("NRO_PARAMETRO_DOCUMENTOS", "NRO_PARAMETRO_DOCUMENTOS")
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("ID_LIQUIDACION", "ID_LIQUIDACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SOLICITUD_CAJA_CHICA] WHERE (([ID_SOLICTUD_CCH] = @Original_ID"& _ 
                "_SOLICTUD_CCH) AND ([NUMERO_SOLICITUD_CCH] = @Original_NUMERO_SOLICITUD_CCH) AND"& _ 
                " ([FECHA_SOLICITUD_CCH] = @Original_FECHA_SOLICITUD_CCH) AND ([VALOR_SOLICITUD_C"& _ 
                "CH] = @Original_VALOR_SOLICITUD_CCH) AND ([ESTADO_SOLICITUD_CCH] = @Original_EST"& _ 
                "ADO_SOLICITUD_CCH) AND ([ID_CAJA_CHICA] = @Original_ID_CAJA_CHICA) AND ([ID_RESP"& _ 
                "ONSABLE_AUTO_CCH] = @Original_ID_RESPONSABLE_AUTO_CCH) AND ([ID_CENTRO_COSTO] = "& _ 
                "@Original_ID_CENTRO_COSTO) AND ([ID_GASTO_CAJA_CH] = @Original_ID_GASTO_CAJA_CH)"& _ 
                " AND ([ID_PROVINCIA] = @Original_ID_PROVINCIA) AND ([ID_CIUDAD] = @Original_ID_C"& _ 
                "IUDAD) AND ([ID_PARROQUIAS] = @Original_ID_PARROQUIAS) AND ([ID_PARAMETRO_DOCUME"& _ 
                "NTOS] = @Original_ID_PARAMETRO_DOCUMENTOS) AND ([NRO_PARAMETRO_DOCUMENTOS] = @Or"& _ 
                "iginal_NRO_PARAMETRO_DOCUMENTOS) AND ([ID_PERSONAL] = @Original_ID_PERSONAL) AND"& _ 
                " ([ID_LIQUIDACION] = @Original_ID_LIQUIDACION))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICTUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICTUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SOLICITUD_CCH", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_SOLICITUD_CCH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTO_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIQUIDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIQUIDACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SOLICITUD_CAJA_CHICA] ([ID_SOLICTUD_CCH], [NUMERO_SOLICITUD_CC"& _ 
                "H], [FECHA_SOLICITUD_CCH], [VALOR_SOLICITUD_CCH], [DETALLE_SOLICITUD_CCH], [COD_"& _ 
                "DEBE_CCH], [COD_HABER_CCH], [ESTADO_SOLICITUD_CCH], [ID_CAJA_CHICA], [ID_RESPONS"& _ 
                "ABLE_AUTO_CCH], [ID_CENTRO_COSTO], [ID_GASTO_CAJA_CH], [ID_PROVINCIA], [ID_CIUDA"& _ 
                "D], [ID_PARROQUIAS], [NOMBRES_RECIBE], [CEDULA_RECIBE], [NOMBRES_ENTREGA], [CEDU"& _ 
                "LA_ENTREGA], [ID_PARAMETRO_DOCUMENTOS], [NRO_PARAMETRO_DOCUMENTOS], [ID_PERSONAL"& _ 
                "], [ID_LIQUIDACION]) VALUES (@ID_SOLICTUD_CCH, @NUMERO_SOLICITUD_CCH, @FECHA_SOL"& _ 
                "ICITUD_CCH, @VALOR_SOLICITUD_CCH, @DETALLE_SOLICITUD_CCH, @COD_DEBE_CCH, @COD_HA"& _ 
                "BER_CCH, @ESTADO_SOLICITUD_CCH, @ID_CAJA_CHICA, @ID_RESPONSABLE_AUTO_CCH, @ID_CE"& _ 
                "NTRO_COSTO, @ID_GASTO_CAJA_CH, @ID_PROVINCIA, @ID_CIUDAD, @ID_PARROQUIAS, @NOMBR"& _ 
                "ES_RECIBE, @CEDULA_RECIBE, @NOMBRES_ENTREGA, @CEDULA_ENTREGA, @ID_PARAMETRO_DOCU"& _ 
                "MENTOS, @NRO_PARAMETRO_DOCUMENTOS, @ID_PERSONAL, @ID_LIQUIDACION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_SO"& _ 
                "LICTUD_CCH, NUMERO_SOLICITUD_CCH, FECHA_SOLICITUD_CCH, VALOR_SOLICITUD_CCH, DETA"& _ 
                "LLE_SOLICITUD_CCH, COD_DEBE_CCH, COD_HABER_CCH, ESTADO_SOLICITUD_CCH, ID_CAJA_CH"& _ 
                "ICA, ID_RESPONSABLE_AUTO_CCH, ID_CENTRO_COSTO, ID_GASTO_CAJA_CH, ID_PROVINCIA, I"& _ 
                "D_CIUDAD, ID_PARROQUIAS, NOMBRES_RECIBE, CEDULA_RECIBE, NOMBRES_ENTREGA, CEDULA_"& _ 
                "ENTREGA, ID_PARAMETRO_DOCUMENTOS, NRO_PARAMETRO_DOCUMENTOS, ID_PERSONAL, ID_LIQU"& _ 
                "IDACION FROM SOLICITUD_CAJA_CHICA WHERE (ID_SOLICTUD_CCH = @ID_SOLICTUD_CCH)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICTUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICTUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SOLICITUD_CCH", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_SOLICITUD_CCH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_SOLICITUD_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_DEBE_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COD_DEBE_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_HABER_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COD_HABER_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTO_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_RECIBE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_RECIBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_RECIBE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_RECIBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_ENTREGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_ENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_ENTREGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIQUIDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIQUIDACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SOLICITUD_CAJA_CHICA] SET [ID_SOLICTUD_CCH] = @ID_SOLICTUD_CCH, [NU"& _ 
                "MERO_SOLICITUD_CCH] = @NUMERO_SOLICITUD_CCH, [FECHA_SOLICITUD_CCH] = @FECHA_SOLI"& _ 
                "CITUD_CCH, [VALOR_SOLICITUD_CCH] = @VALOR_SOLICITUD_CCH, [DETALLE_SOLICITUD_CCH]"& _ 
                " = @DETALLE_SOLICITUD_CCH, [COD_DEBE_CCH] = @COD_DEBE_CCH, [COD_HABER_CCH] = @CO"& _ 
                "D_HABER_CCH, [ESTADO_SOLICITUD_CCH] = @ESTADO_SOLICITUD_CCH, [ID_CAJA_CHICA] = @"& _ 
                "ID_CAJA_CHICA, [ID_RESPONSABLE_AUTO_CCH] = @ID_RESPONSABLE_AUTO_CCH, [ID_CENTRO_"& _ 
                "COSTO] = @ID_CENTRO_COSTO, [ID_GASTO_CAJA_CH] = @ID_GASTO_CAJA_CH, [ID_PROVINCIA"& _ 
                "] = @ID_PROVINCIA, [ID_CIUDAD] = @ID_CIUDAD, [ID_PARROQUIAS] = @ID_PARROQUIAS, ["& _ 
                "NOMBRES_RECIBE] = @NOMBRES_RECIBE, [CEDULA_RECIBE] = @CEDULA_RECIBE, [NOMBRES_EN"& _ 
                "TREGA] = @NOMBRES_ENTREGA, [CEDULA_ENTREGA] = @CEDULA_ENTREGA, [ID_PARAMETRO_DOC"& _ 
                "UMENTOS] = @ID_PARAMETRO_DOCUMENTOS, [NRO_PARAMETRO_DOCUMENTOS] = @NRO_PARAMETRO"& _ 
                "_DOCUMENTOS, [ID_PERSONAL] = @ID_PERSONAL, [ID_LIQUIDACION] = @ID_LIQUIDACION WH"& _ 
                "ERE (([ID_SOLICTUD_CCH] = @Original_ID_SOLICTUD_CCH) AND ([NUMERO_SOLICITUD_CCH]"& _ 
                " = @Original_NUMERO_SOLICITUD_CCH) AND ([FECHA_SOLICITUD_CCH] = @Original_FECHA_"& _ 
                "SOLICITUD_CCH) AND ([VALOR_SOLICITUD_CCH] = @Original_VALOR_SOLICITUD_CCH) AND ("& _ 
                "[ESTADO_SOLICITUD_CCH] = @Original_ESTADO_SOLICITUD_CCH) AND ([ID_CAJA_CHICA] = "& _ 
                "@Original_ID_CAJA_CHICA) AND ([ID_RESPONSABLE_AUTO_CCH] = @Original_ID_RESPONSAB"& _ 
                "LE_AUTO_CCH) AND ([ID_CENTRO_COSTO] = @Original_ID_CENTRO_COSTO) AND ([ID_GASTO_"& _ 
                "CAJA_CH] = @Original_ID_GASTO_CAJA_CH) AND ([ID_PROVINCIA] = @Original_ID_PROVIN"& _ 
                "CIA) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ID_PARROQUIAS] = @Original_ID"& _ 
                "_PARROQUIAS) AND ([ID_PARAMETRO_DOCUMENTOS] = @Original_ID_PARAMETRO_DOCUMENTOS)"& _ 
                " AND ([NRO_PARAMETRO_DOCUMENTOS] = @Original_NRO_PARAMETRO_DOCUMENTOS) AND ([ID_"& _ 
                "PERSONAL] = @Original_ID_PERSONAL) AND ([ID_LIQUIDACION] = @Original_ID_LIQUIDAC"& _ 
                "ION));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_SOLICTUD_CCH, NUMERO_SOLICITUD_CCH, FECHA_SOLICITUD_CCH, VALOR"& _ 
                "_SOLICITUD_CCH, DETALLE_SOLICITUD_CCH, COD_DEBE_CCH, COD_HABER_CCH, ESTADO_SOLIC"& _ 
                "ITUD_CCH, ID_CAJA_CHICA, ID_RESPONSABLE_AUTO_CCH, ID_CENTRO_COSTO, ID_GASTO_CAJA"& _ 
                "_CH, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, NOMBRES_RECIBE, CEDULA_RECIBE, NOMB"& _ 
                "RES_ENTREGA, CEDULA_ENTREGA, ID_PARAMETRO_DOCUMENTOS, NRO_PARAMETRO_DOCUMENTOS, "& _ 
                "ID_PERSONAL, ID_LIQUIDACION FROM SOLICITUD_CAJA_CHICA WHERE (ID_SOLICTUD_CCH = @"& _ 
                "ID_SOLICTUD_CCH)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SOLICTUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICTUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SOLICITUD_CCH", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_SOLICITUD_CCH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_SOLICITUD_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_DEBE_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COD_DEBE_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_HABER_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COD_HABER_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GASTO_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_RECIBE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_RECIBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_RECIBE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_RECIBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_ENTREGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_ENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_ENTREGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_ENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_LIQUIDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIQUIDACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SOLICTUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SOLICTUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_SOLICITUD_CCH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SOLICITUD_CCH", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_SOLICITUD_CCH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_SOLICITUD_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_SOLICITUD_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GASTO_CAJA_CH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GASTO_CAJA_CH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_PARAMETRO_DOCUMENTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_LIQUIDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_LIQUIDACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_SOLICTUD_CCH, NUMERO_SOLICITUD_CCH, FECHA_SOLICITUD_CCH, VALOR_SOLICITU"& _ 
                "D_CCH, DETALLE_SOLICITUD_CCH, COD_DEBE_CCH, COD_HABER_CCH, ESTADO_SOLICITUD_CCH,"& _ 
                " ID_CAJA_CHICA, ID_RESPONSABLE_AUTO_CCH, ID_CENTRO_COSTO, ID_GASTO_CAJA_CH, ID_P"& _ 
                "ROVINCIA, ID_CIUDAD, ID_PARROQUIAS, NOMBRES_RECIBE, CEDULA_RECIBE, NOMBRES_ENTRE"& _ 
                "GA, CEDULA_ENTREGA, ID_PARAMETRO_DOCUMENTOS, NRO_PARAMETRO_DOCUMENTOS, ID_PERSON"& _ 
                "AL, ID_LIQUIDACION FROM dbo.SOLICITUD_CAJA_CHICA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.SOLICITUD_CAJA_CHICADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.SOLICITUD_CAJA_CHICADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.SOLICITUD_CAJA_CHICADataTable = New DataSetControlCombustibleCajaChica.SOLICITUD_CAJA_CHICADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.SOLICITUD_CAJA_CHICADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "SOLICITUD_CAJA_CHICA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID_SOLICTUD_CCH As Long,  _
                    ByVal Original_NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal Original_FECHA_SOLICITUD_CCH As Date,  _
                    ByVal Original_VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal Original_ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal Original_ID_CAJA_CHICA As Integer,  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_GASTO_CAJA_CH As Integer,  _
                    ByVal Original_ID_PROVINCIA As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal Original_NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_LIQUIDACION As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_SOLICTUD_CCH,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NUMERO_SOLICITUD_CCH,Long)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FECHA_SOLICITUD_CCH,Date)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_VALOR_SOLICITUD_CCH,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ESTADO_SOLICITUD_CCH,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_CAJA_CHICA,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ID_GASTO_CAJA_CH,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ID_PARAMETRO_DOCUMENTOS,Integer)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_NRO_PARAMETRO_DOCUMENTOS,Long)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ID_LIQUIDACION,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_SOLICTUD_CCH As Long,  _
                    ByVal NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal FECHA_SOLICITUD_CCH As Date,  _
                    ByVal VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal DETALLE_SOLICITUD_CCH As String,  _
                    ByVal COD_DEBE_CCH As String,  _
                    ByVal COD_HABER_CCH As String,  _
                    ByVal ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal ID_CAJA_CHICA As Integer,  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_GASTO_CAJA_CH As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal NOMBRES_RECIBE As String,  _
                    ByVal CEDULA_RECIBE As String,  _
                    ByVal NOMBRES_ENTREGA As String,  _
                    ByVal CEDULA_ENTREGA As String,  _
                    ByVal ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_LIQUIDACION As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_SOLICTUD_CCH,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUMERO_SOLICITUD_CCH,Long)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FECHA_SOLICITUD_CCH,Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(VALOR_SOLICITUD_CCH,Decimal)
            If (DETALLE_SOLICITUD_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_SOLICITUD_CCH")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DETALLE_SOLICITUD_CCH,String)
            End If
            If (COD_DEBE_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COD_DEBE_CCH")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(COD_DEBE_CCH,String)
            End If
            If (COD_HABER_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COD_HABER_CCH")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(COD_HABER_CCH,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ESTADO_SOLICITUD_CCH,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID_CAJA_CHICA,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_GASTO_CAJA_CH,Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(ID_PARROQUIAS,Integer)
            If (NOMBRES_RECIBE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_RECIBE")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NOMBRES_RECIBE,String)
            End If
            If (CEDULA_RECIBE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_RECIBE")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CEDULA_RECIBE,String)
            End If
            If (NOMBRES_ENTREGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_ENTREGA")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(NOMBRES_ENTREGA,String)
            End If
            If (CEDULA_ENTREGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_ENTREGA")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CEDULA_ENTREGA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(ID_PARAMETRO_DOCUMENTOS,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(NRO_PARAMETRO_DOCUMENTOS,Long)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(ID_LIQUIDACION,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_SOLICTUD_CCH As Long,  _
                    ByVal NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal FECHA_SOLICITUD_CCH As Date,  _
                    ByVal VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal DETALLE_SOLICITUD_CCH As String,  _
                    ByVal COD_DEBE_CCH As String,  _
                    ByVal COD_HABER_CCH As String,  _
                    ByVal ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal ID_CAJA_CHICA As Integer,  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_GASTO_CAJA_CH As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal NOMBRES_RECIBE As String,  _
                    ByVal CEDULA_RECIBE As String,  _
                    ByVal NOMBRES_ENTREGA As String,  _
                    ByVal CEDULA_ENTREGA As String,  _
                    ByVal ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_LIQUIDACION As Integer,  _
                    ByVal Original_ID_SOLICTUD_CCH As Long,  _
                    ByVal Original_NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal Original_FECHA_SOLICITUD_CCH As Date,  _
                    ByVal Original_VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal Original_ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal Original_ID_CAJA_CHICA As Integer,  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_GASTO_CAJA_CH As Integer,  _
                    ByVal Original_ID_PROVINCIA As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal Original_NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_LIQUIDACION As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_SOLICTUD_CCH,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUMERO_SOLICITUD_CCH,Long)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FECHA_SOLICITUD_CCH,Date)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(VALOR_SOLICITUD_CCH,Decimal)
            If (DETALLE_SOLICITUD_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_SOLICITUD_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DETALLE_SOLICITUD_CCH,String)
            End If
            If (COD_DEBE_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COD_DEBE_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(COD_DEBE_CCH,String)
            End If
            If (COD_HABER_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("COD_HABER_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(COD_HABER_CCH,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ESTADO_SOLICITUD_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ID_CAJA_CHICA,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_GASTO_CAJA_CH,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ID_PARROQUIAS,Integer)
            If (NOMBRES_RECIBE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_RECIBE")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NOMBRES_RECIBE,String)
            End If
            If (CEDULA_RECIBE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_RECIBE")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CEDULA_RECIBE,String)
            End If
            If (NOMBRES_ENTREGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_ENTREGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(NOMBRES_ENTREGA,String)
            End If
            If (CEDULA_ENTREGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_ENTREGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CEDULA_ENTREGA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ID_PARAMETRO_DOCUMENTOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NRO_PARAMETRO_DOCUMENTOS,Long)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ID_LIQUIDACION,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ID_SOLICTUD_CCH,Long)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_NUMERO_SOLICITUD_CCH,Long)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_FECHA_SOLICITUD_CCH,Date)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_VALOR_SOLICITUD_CCH,Decimal)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ESTADO_SOLICITUD_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ID_CAJA_CHICA,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ID_GASTO_CAJA_CH,Integer)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ID_PARAMETRO_DOCUMENTOS,Integer)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_NRO_PARAMETRO_DOCUMENTOS,Long)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_ID_LIQUIDACION,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal FECHA_SOLICITUD_CCH As Date,  _
                    ByVal VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal DETALLE_SOLICITUD_CCH As String,  _
                    ByVal COD_DEBE_CCH As String,  _
                    ByVal COD_HABER_CCH As String,  _
                    ByVal ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal ID_CAJA_CHICA As Integer,  _
                    ByVal ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_GASTO_CAJA_CH As Integer,  _
                    ByVal ID_PROVINCIA As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal NOMBRES_RECIBE As String,  _
                    ByVal CEDULA_RECIBE As String,  _
                    ByVal NOMBRES_ENTREGA As String,  _
                    ByVal CEDULA_ENTREGA As String,  _
                    ByVal ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal ID_LIQUIDACION As Integer,  _
                    ByVal Original_ID_SOLICTUD_CCH As Long,  _
                    ByVal Original_NUMERO_SOLICITUD_CCH As Long,  _
                    ByVal Original_FECHA_SOLICITUD_CCH As Date,  _
                    ByVal Original_VALOR_SOLICITUD_CCH As Decimal,  _
                    ByVal Original_ESTADO_SOLICITUD_CCH As Integer,  _
                    ByVal Original_ID_CAJA_CHICA As Integer,  _
                    ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_GASTO_CAJA_CH As Integer,  _
                    ByVal Original_ID_PROVINCIA As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_PARAMETRO_DOCUMENTOS As Integer,  _
                    ByVal Original_NRO_PARAMETRO_DOCUMENTOS As Long,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_ID_LIQUIDACION As Integer) As Integer
            Return Me.Update(Original_ID_SOLICTUD_CCH, NUMERO_SOLICITUD_CCH, FECHA_SOLICITUD_CCH, VALOR_SOLICITUD_CCH, DETALLE_SOLICITUD_CCH, COD_DEBE_CCH, COD_HABER_CCH, ESTADO_SOLICITUD_CCH, ID_CAJA_CHICA, ID_RESPONSABLE_AUTO_CCH, ID_CENTRO_COSTO, ID_GASTO_CAJA_CH, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, NOMBRES_RECIBE, CEDULA_RECIBE, NOMBRES_ENTREGA, CEDULA_ENTREGA, ID_PARAMETRO_DOCUMENTOS, NRO_PARAMETRO_DOCUMENTOS, ID_PERSONAL, ID_LIQUIDACION, Original_ID_SOLICTUD_CCH, Original_NUMERO_SOLICITUD_CCH, Original_FECHA_SOLICITUD_CCH, Original_VALOR_SOLICITUD_CCH, Original_ESTADO_SOLICITUD_CCH, Original_ID_CAJA_CHICA, Original_ID_RESPONSABLE_AUTO_CCH, Original_ID_CENTRO_COSTO, Original_ID_GASTO_CAJA_CH, Original_ID_PROVINCIA, Original_ID_CIUDAD, Original_ID_PARROQUIAS, Original_ID_PARAMETRO_DOCUMENTOS, Original_NRO_PARAMETRO_DOCUMENTOS, Original_ID_PERSONAL, Original_ID_LIQUIDACION)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RESPONSABLE_AUTORIZACION_FONDO_CAJA"
            tableMapping.ColumnMappings.Add("ID_RESPONSABLE_AUTO_CCH", "ID_RESPONSABLE_AUTO_CCH")
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("NOMBRES_AUTO_CCH", "NOMBRES_AUTO_CCH")
            tableMapping.ColumnMappings.Add("CEDULA_AUTO_CCH", "CEDULA_AUTO_CCH")
            tableMapping.ColumnMappings.Add("ID_PROVINCIA", "ID_PROVINCIA")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("ID_PARROQUIAS", "ID_PARROQUIAS")
            tableMapping.ColumnMappings.Add("ESTADO_RESPONSABLE_AUTO_CCH", "ESTADO_RESPONSABLE_AUTO_CCH")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[RESPONSABLE_AUTORIZACION_FONDO_CAJA] WHERE (([ID_RESPONSABLE_A"& _ 
                "UTO_CCH] = @Original_ID_RESPONSABLE_AUTO_CCH) AND ([ID_PERSONAL] = @Original_ID_"& _ 
                "PERSONAL) AND ([CEDULA_AUTO_CCH] = @Original_CEDULA_AUTO_CCH) AND ([ID_PROVINCIA"& _ 
                "] = @Original_ID_PROVINCIA) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ID_PAR"& _ 
                "ROQUIAS] = @Original_ID_PARROQUIAS) AND ([ESTADO_RESPONSABLE_AUTO_CCH] = @Origin"& _ 
                "al_ESTADO_RESPONSABLE_AUTO_CCH))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[RESPONSABLE_AUTORIZACION_FONDO_CAJA] ([ID_RESPONSABLE_AUTO_CCH"& _ 
                "], [ID_PERSONAL], [NOMBRES_AUTO_CCH], [CEDULA_AUTO_CCH], [ID_PROVINCIA], [ID_CIU"& _ 
                "DAD], [ID_PARROQUIAS], [ESTADO_RESPONSABLE_AUTO_CCH]) VALUES (@ID_RESPONSABLE_AU"& _ 
                "TO_CCH, @ID_PERSONAL, @NOMBRES_AUTO_CCH, @CEDULA_AUTO_CCH, @ID_PROVINCIA, @ID_CI"& _ 
                "UDAD, @ID_PARROQUIAS, @ESTADO_RESPONSABLE_AUTO_CCH);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_RESPONSABLE_AUTO"& _ 
                "_CCH, ID_PERSONAL, NOMBRES_AUTO_CCH, CEDULA_AUTO_CCH, ID_PROVINCIA, ID_CIUDAD, I"& _ 
                "D_PARROQUIAS, ESTADO_RESPONSABLE_AUTO_CCH FROM RESPONSABLE_AUTORIZACION_FONDO_CA"& _ 
                "JA WHERE (ID_RESPONSABLE_AUTO_CCH = @ID_RESPONSABLE_AUTO_CCH)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[RESPONSABLE_AUTORIZACION_FONDO_CAJA] SET [ID_RESPONSABLE_AUTO_CCH] "& _ 
                "= @ID_RESPONSABLE_AUTO_CCH, [ID_PERSONAL] = @ID_PERSONAL, [NOMBRES_AUTO_CCH] = @"& _ 
                "NOMBRES_AUTO_CCH, [CEDULA_AUTO_CCH] = @CEDULA_AUTO_CCH, [ID_PROVINCIA] = @ID_PRO"& _ 
                "VINCIA, [ID_CIUDAD] = @ID_CIUDAD, [ID_PARROQUIAS] = @ID_PARROQUIAS, [ESTADO_RESP"& _ 
                "ONSABLE_AUTO_CCH] = @ESTADO_RESPONSABLE_AUTO_CCH WHERE (([ID_RESPONSABLE_AUTO_CC"& _ 
                "H] = @Original_ID_RESPONSABLE_AUTO_CCH) AND ([ID_PERSONAL] = @Original_ID_PERSON"& _ 
                "AL) AND ([CEDULA_AUTO_CCH] = @Original_CEDULA_AUTO_CCH) AND ([ID_PROVINCIA] = @O"& _ 
                "riginal_ID_PROVINCIA) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ID_PARROQUIA"& _ 
                "S] = @Original_ID_PARROQUIAS) AND ([ESTADO_RESPONSABLE_AUTO_CCH] = @Original_EST"& _ 
                "ADO_RESPONSABLE_AUTO_CCH));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, NOMBRE"& _ 
                "S_AUTO_CCH, CEDULA_AUTO_CCH, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ESTADO_RESP"& _ 
                "ONSABLE_AUTO_CCH FROM RESPONSABLE_AUTORIZACION_FONDO_CAJA WHERE (ID_RESPONSABLE_"& _ 
                "AUTO_CCH = @ID_RESPONSABLE_AUTO_CCH)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA_AUTO_CCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_RESPONSABLE_AUTO_CCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, NOMBRES_AUTO_CCH, CEDULA_AUTO_CCH, I"& _ 
                "D_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ESTADO_RESPONSABLE_AUTO_CCH FROM dbo.RESP"& _ 
                "ONSABLE_AUTORIZACION_FONDO_CAJA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable = New DataSetControlCombustibleCajaChica.RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.RESPONSABLE_AUTORIZACION_FONDO_CAJADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "RESPONSABLE_AUTORIZACION_FONDO_CAJA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer, ByVal Original_ID_PERSONAL As Integer, ByVal Original_CEDULA_AUTO_CCH As String, ByVal Original_ID_PROVINCIA As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_RESPONSABLE_AUTO_CCH As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA_AUTO_CCH")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CEDULA_AUTO_CCH,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ESTADO_RESPONSABLE_AUTO_CCH,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_RESPONSABLE_AUTO_CCH As Integer, ByVal ID_PERSONAL As Integer, ByVal NOMBRES_AUTO_CCH As String, ByVal CEDULA_AUTO_CCH As String, ByVal ID_PROVINCIA As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ESTADO_RESPONSABLE_AUTO_CCH As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_PERSONAL,Integer)
            If (NOMBRES_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_AUTO_CCH")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRES_AUTO_CCH,String)
            End If
            If (CEDULA_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_AUTO_CCH")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CEDULA_AUTO_CCH,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ESTADO_RESPONSABLE_AUTO_CCH,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_RESPONSABLE_AUTO_CCH As Integer, ByVal ID_PERSONAL As Integer, ByVal NOMBRES_AUTO_CCH As String, ByVal CEDULA_AUTO_CCH As String, ByVal ID_PROVINCIA As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ESTADO_RESPONSABLE_AUTO_CCH As Integer, ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer, ByVal Original_ID_PERSONAL As Integer, ByVal Original_CEDULA_AUTO_CCH As String, ByVal Original_ID_PROVINCIA As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_RESPONSABLE_AUTO_CCH As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_PERSONAL,Integer)
            If (NOMBRES_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES_AUTO_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRES_AUTO_CCH,String)
            End If
            If (CEDULA_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA_AUTO_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CEDULA_AUTO_CCH,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ESTADO_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ID_RESPONSABLE_AUTO_CCH,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA_AUTO_CCH Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA_AUTO_CCH")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CEDULA_AUTO_CCH,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ID_PROVINCIA,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ESTADO_RESPONSABLE_AUTO_CCH,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_PERSONAL As Integer, ByVal NOMBRES_AUTO_CCH As String, ByVal CEDULA_AUTO_CCH As String, ByVal ID_PROVINCIA As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ESTADO_RESPONSABLE_AUTO_CCH As Integer, ByVal Original_ID_RESPONSABLE_AUTO_CCH As Integer, ByVal Original_ID_PERSONAL As Integer, ByVal Original_CEDULA_AUTO_CCH As String, ByVal Original_ID_PROVINCIA As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_RESPONSABLE_AUTO_CCH As Integer) As Integer
            Return Me.Update(Original_ID_RESPONSABLE_AUTO_CCH, ID_PERSONAL, NOMBRES_AUTO_CCH, CEDULA_AUTO_CCH, ID_PROVINCIA, ID_CIUDAD, ID_PARROQUIAS, ESTADO_RESPONSABLE_AUTO_CCH, Original_ID_RESPONSABLE_AUTO_CCH, Original_ID_PERSONAL, Original_CEDULA_AUTO_CCH, Original_ID_PROVINCIA, Original_ID_CIUDAD, Original_ID_PARROQUIAS, Original_ESTADO_RESPONSABLE_AUTO_CCH)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PROVINCIASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PROVINCIAS"
            tableMapping.ColumnMappings.Add("ID_PROVINCIAS", "ID_PROVINCIAS")
            tableMapping.ColumnMappings.Add("NOMBRE_PROVINCIAS", "NOMBRE_PROVINCIAS")
            tableMapping.ColumnMappings.Add("ESTADO_PROVINCIAS", "ESTADO_PROVINCIAS")
            tableMapping.ColumnMappings.Add("ID_PAISES", "ID_PAISES")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PROVINCIAS] WHERE (([ID_PROVINCIAS] = @Original_ID_PROVINCIAS)"& _ 
                " AND ([ESTADO_PROVINCIAS] = @Original_ESTADO_PROVINCIAS) AND ((@IsNull_ID_PAISES"& _ 
                " = 1 AND [ID_PAISES] IS NULL) OR ([ID_PAISES] = @Original_ID_PAISES)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PROVINCIAS] ([ID_PROVINCIAS], [NOMBRE_PROVINCIAS], [ESTADO_PRO"& _ 
                "VINCIAS], [ID_PAISES]) VALUES (@ID_PROVINCIAS, @NOMBRE_PROVINCIAS, @ESTADO_PROVI"& _ 
                "NCIAS, @ID_PAISES);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PROVINCIAS, NOMBRE_PROVINCIAS, ESTADO_PROVINCIAS,"& _ 
                " ID_PAISES FROM PROVINCIAS WHERE (ID_PROVINCIAS = @ID_PROVINCIAS)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PROVINCIAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PROVINCIAS] SET [ID_PROVINCIAS] = @ID_PROVINCIAS, [NOMBRE_PROVINCIA"& _ 
                "S] = @NOMBRE_PROVINCIAS, [ESTADO_PROVINCIAS] = @ESTADO_PROVINCIAS, [ID_PAISES] ="& _ 
                " @ID_PAISES WHERE (([ID_PROVINCIAS] = @Original_ID_PROVINCIAS) AND ([ESTADO_PROV"& _ 
                "INCIAS] = @Original_ESTADO_PROVINCIAS) AND ((@IsNull_ID_PAISES = 1 AND [ID_PAISE"& _ 
                "S] IS NULL) OR ([ID_PAISES] = @Original_ID_PAISES)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PROVINCIAS, NOM"& _ 
                "BRE_PROVINCIAS, ESTADO_PROVINCIAS, ID_PAISES FROM PROVINCIAS WHERE (ID_PROVINCIA"& _ 
                "S = @ID_PROVINCIAS)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PROVINCIAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PAISES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PAISES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_PROVINCIAS, NOMBRE_PROVINCIAS, ESTADO_PROVINCIAS, ID_PAISES FROM dbo.PR"& _ 
                "OVINCIAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.PROVINCIASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.PROVINCIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.PROVINCIASDataTable = New DataSetControlCombustibleCajaChica.PROVINCIASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.PROVINCIASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "PROVINCIAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_PROVINCIAS As Integer, ByVal Original_ESTADO_PROVINCIAS As Integer, ByVal Original_ID_PAISES As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_PROVINCIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_PROVINCIAS,Integer)
            If (Original_ID_PAISES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_PAISES.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_PROVINCIAS As Integer, ByVal NOMBRE_PROVINCIAS As String, ByVal ESTADO_PROVINCIAS As Integer, ByVal ID_PAISES As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_PROVINCIAS,Integer)
            If (NOMBRE_PROVINCIAS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PROVINCIAS")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_PROVINCIAS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ESTADO_PROVINCIAS,Integer)
            If (ID_PAISES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_PAISES.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_PROVINCIAS As Integer, ByVal NOMBRE_PROVINCIAS As String, ByVal ESTADO_PROVINCIAS As Integer, ByVal ID_PAISES As Global.System.Nullable(Of Integer), ByVal Original_ID_PROVINCIAS As Integer, ByVal Original_ESTADO_PROVINCIAS As Integer, ByVal Original_ID_PAISES As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_PROVINCIAS,Integer)
            If (NOMBRE_PROVINCIAS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PROVINCIAS")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_PROVINCIAS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ESTADO_PROVINCIAS,Integer)
            If (ID_PAISES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_PAISES.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_PROVINCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ESTADO_PROVINCIAS,Integer)
            If (Original_ID_PAISES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ID_PAISES.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_PROVINCIAS As String, ByVal ESTADO_PROVINCIAS As Integer, ByVal ID_PAISES As Global.System.Nullable(Of Integer), ByVal Original_ID_PROVINCIAS As Integer, ByVal Original_ESTADO_PROVINCIAS As Integer, ByVal Original_ID_PAISES As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_ID_PROVINCIAS, NOMBRE_PROVINCIAS, ESTADO_PROVINCIAS, ID_PAISES, Original_ID_PROVINCIAS, Original_ESTADO_PROVINCIAS, Original_ID_PAISES)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CIUDADESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CIUDADES"
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("NOMBRE_CIUDADES", "NOMBRE_CIUDADES")
            tableMapping.ColumnMappings.Add("ESTADO_CIUDADES", "ESTADO_CIUDADES")
            tableMapping.ColumnMappings.Add("ID_PROVINCIAS", "ID_PROVINCIAS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CIUDADES] WHERE (([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([EST"& _ 
                "ADO_CIUDADES] = @Original_ESTADO_CIUDADES) AND ([ID_PROVINCIAS] = @Original_ID_P"& _ 
                "ROVINCIAS))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CIUDADES] ([ID_CIUDAD], [NOMBRE_CIUDADES], [ESTADO_CIUDADES], "& _ 
                "[ID_PROVINCIAS]) VALUES (@ID_CIUDAD, @NOMBRE_CIUDADES, @ESTADO_CIUDADES, @ID_PRO"& _ 
                "VINCIAS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FRO"& _ 
                "M CIUDADES WHERE (ID_CIUDAD = @ID_CIUDAD)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CIUDADES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CIUDADES] SET [ID_CIUDAD] = @ID_CIUDAD, [NOMBRE_CIUDADES] = @NOMBRE"& _ 
                "_CIUDADES, [ESTADO_CIUDADES] = @ESTADO_CIUDADES, [ID_PROVINCIAS] = @ID_PROVINCIA"& _ 
                "S WHERE (([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ESTADO_CIUDADES] = @Original_"& _ 
                "ESTADO_CIUDADES) AND ([ID_PROVINCIAS] = @Original_ID_PROVINCIAS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CI"& _ 
                "UDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FROM CIUDADES WHERE (ID_CI"& _ 
                "UDAD = @ID_CIUDAD)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_CIUDADES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIUDADES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIUDADES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS FROM dbo.CIUDAD"& _ 
                "ES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.CIUDADESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.CIUDADESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.CIUDADESDataTable = New DataSetControlCombustibleCajaChica.CIUDADESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.CIUDADESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "CIUDADES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_CIUDADES,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CIUDAD,Integer)
            If (NOMBRE_CIUDADES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CIUDADES")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_CIUDADES,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ESTADO_CIUDADES,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_CIUDAD As Integer, ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CIUDAD,Integer)
            If (NOMBRE_CIUDADES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_CIUDADES")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_CIUDADES,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ESTADO_CIUDADES,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_PROVINCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ESTADO_CIUDADES,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_PROVINCIAS,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_CIUDADES As String, ByVal ESTADO_CIUDADES As Integer, ByVal ID_PROVINCIAS As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ESTADO_CIUDADES As Integer, ByVal Original_ID_PROVINCIAS As Integer) As Integer
            Return Me.Update(Original_ID_CIUDAD, NOMBRE_CIUDADES, ESTADO_CIUDADES, ID_PROVINCIAS, Original_ID_CIUDAD, Original_ESTADO_CIUDADES, Original_ID_PROVINCIAS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PARROQUIASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PARROQUIAS"
            tableMapping.ColumnMappings.Add("ID_PARROQUIAS", "ID_PARROQUIAS")
            tableMapping.ColumnMappings.Add("NOMBRE_PARROQUIAS", "NOMBRE_PARROQUIAS")
            tableMapping.ColumnMappings.Add("ESTADO_PARROQUIAS", "ESTADO_PARROQUIAS")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PARROQUIAS] WHERE (([ID_PARROQUIAS] = @Original_ID_PARROQUIAS)"& _ 
                " AND ([ESTADO_PARROQUIAS] = @Original_ESTADO_PARROQUIAS) AND ([ID_CIUDAD] = @Ori"& _ 
                "ginal_ID_CIUDAD))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PARROQUIAS] ([ID_PARROQUIAS], [NOMBRE_PARROQUIAS], [ESTADO_PAR"& _ 
                "ROQUIAS], [ID_CIUDAD]) VALUES (@ID_PARROQUIAS, @NOMBRE_PARROQUIAS, @ESTADO_PARRO"& _ 
                "QUIAS, @ID_CIUDAD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PARROQUIAS, NOMBRE_PARROQUIAS, ESTADO_PARROQUIAS,"& _ 
                " ID_CIUDAD FROM PARROQUIAS WHERE (ID_PARROQUIAS = @ID_PARROQUIAS)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PARROQUIAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PARROQUIAS] SET [ID_PARROQUIAS] = @ID_PARROQUIAS, [NOMBRE_PARROQUIA"& _ 
                "S] = @NOMBRE_PARROQUIAS, [ESTADO_PARROQUIAS] = @ESTADO_PARROQUIAS, [ID_CIUDAD] ="& _ 
                " @ID_CIUDAD WHERE (([ID_PARROQUIAS] = @Original_ID_PARROQUIAS) AND ([ESTADO_PARR"& _ 
                "OQUIAS] = @Original_ESTADO_PARROQUIAS) AND ([ID_CIUDAD] = @Original_ID_CIUDAD));"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PARROQUIAS, NOMBRE_PARROQUIAS, ESTADO_PARROQUIAS, ID_CIUDAD FROM PAR"& _ 
                "ROQUIAS WHERE (ID_PARROQUIAS = @ID_PARROQUIAS)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_PARROQUIAS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_PARROQUIAS, NOMBRE_PARROQUIAS, ESTADO_PARROQUIAS, ID_CIUDAD FROM dbo.PA"& _ 
                "RROQUIAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.PARROQUIASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.PARROQUIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.PARROQUIASDataTable = New DataSetControlCombustibleCajaChica.PARROQUIASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.PARROQUIASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "PARROQUIAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_PARROQUIAS As Integer, ByVal Original_ID_CIUDAD As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_CIUDAD,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_PARROQUIAS As Integer, ByVal NOMBRE_PARROQUIAS As String, ByVal ESTADO_PARROQUIAS As Integer, ByVal ID_CIUDAD As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_PARROQUIAS,Integer)
            If (NOMBRE_PARROQUIAS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PARROQUIAS")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE_PARROQUIAS,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ESTADO_PARROQUIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_CIUDAD,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_PARROQUIAS As Integer, ByVal NOMBRE_PARROQUIAS As String, ByVal ESTADO_PARROQUIAS As Integer, ByVal ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_PARROQUIAS As Integer, ByVal Original_ID_CIUDAD As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_PARROQUIAS,Integer)
            If (NOMBRE_PARROQUIAS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_PARROQUIAS")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE_PARROQUIAS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ESTADO_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ESTADO_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID_CIUDAD,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE_PARROQUIAS As String, ByVal ESTADO_PARROQUIAS As Integer, ByVal ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ESTADO_PARROQUIAS As Integer, ByVal Original_ID_CIUDAD As Integer) As Integer
            Return Me.Update(Original_ID_PARROQUIAS, NOMBRE_PARROQUIAS, ESTADO_PARROQUIAS, ID_CIUDAD, Original_ID_PARROQUIAS, Original_ESTADO_PARROQUIAS, Original_ID_CIUDAD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJA_CHICATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJA_CHICA"
            tableMapping.ColumnMappings.Add("ID_CAJA_CHICA", "ID_CAJA_CHICA")
            tableMapping.ColumnMappings.Add("DETALLE_CAJA_CHICA", "DETALLE_CAJA_CHICA")
            tableMapping.ColumnMappings.Add("MONTO_CAJA_CHICA", "MONTO_CAJA_CHICA")
            tableMapping.ColumnMappings.Add("VALOR_GASTO", "VALOR_GASTO")
            tableMapping.ColumnMappings.Add("CTA_CONTABLE", "CTA_CONTABLE")
            tableMapping.ColumnMappings.Add("TIPO_CTA", "TIPO_CTA")
            tableMapping.ColumnMappings.Add("NIVEL_CTA", "NIVEL_CTA")
            tableMapping.ColumnMappings.Add("ESTADO_CAJA_CHICA", "ESTADO_CAJA_CHICA")
            tableMapping.ColumnMappings.Add("ID_CENTRO_COSTO", "ID_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("ID_PROVINCIAS", "ID_PROVINCIAS")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("ID_PARROQUIAS", "ID_PARROQUIAS")
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CAJA_CHICA] WHERE (([ID_CAJA_CHICA] = @Original_ID_CAJA_CHICA)"& _ 
                " AND ([MONTO_CAJA_CHICA] = @Original_MONTO_CAJA_CHICA) AND ([VALOR_GASTO] = @Ori"& _ 
                "ginal_VALOR_GASTO) AND ([TIPO_CTA] = @Original_TIPO_CTA) AND ([NIVEL_CTA] = @Ori"& _ 
                "ginal_NIVEL_CTA) AND ([ESTADO_CAJA_CHICA] = @Original_ESTADO_CAJA_CHICA) AND ([I"& _ 
                "D_CENTRO_COSTO] = @Original_ID_CENTRO_COSTO) AND ([ID_PROVINCIAS] = @Original_ID"& _ 
                "_PROVINCIAS) AND ([ID_CIUDAD] = @Original_ID_CIUDAD) AND ([ID_PARROQUIAS] = @Ori"& _ 
                "ginal_ID_PARROQUIAS) AND ([ID_PERSONAL] = @Original_ID_PERSONAL))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTO_CAJA_CHICA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_GASTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_GASTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVEL_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVEL_CTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CAJA_CHICA] ([ID_CAJA_CHICA], [DETALLE_CAJA_CHICA], [MONTO_CAJ"& _ 
                "A_CHICA], [VALOR_GASTO], [CTA_CONTABLE], [TIPO_CTA], [NIVEL_CTA], [ESTADO_CAJA_C"& _ 
                "HICA], [ID_CENTRO_COSTO], [ID_PROVINCIAS], [ID_CIUDAD], [ID_PARROQUIAS], [ID_PER"& _ 
                "SONAL]) VALUES (@ID_CAJA_CHICA, @DETALLE_CAJA_CHICA, @MONTO_CAJA_CHICA, @VALOR_G"& _ 
                "ASTO, @CTA_CONTABLE, @TIPO_CTA, @NIVEL_CTA, @ESTADO_CAJA_CHICA, @ID_CENTRO_COSTO"& _ 
                ", @ID_PROVINCIAS, @ID_CIUDAD, @ID_PARROQUIAS, @ID_PERSONAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CAJA_CHI"& _ 
                "CA, DETALLE_CAJA_CHICA, MONTO_CAJA_CHICA, VALOR_GASTO, CTA_CONTABLE, TIPO_CTA, N"& _ 
                "IVEL_CTA, ESTADO_CAJA_CHICA, ID_CENTRO_COSTO, ID_PROVINCIAS, ID_CIUDAD, ID_PARRO"& _ 
                "QUIAS, ID_PERSONAL FROM CAJA_CHICA WHERE (ID_CAJA_CHICA = @ID_CAJA_CHICA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_CAJA_CHICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTO_CAJA_CHICA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_GASTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_GASTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_CONTABLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_CONTABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVEL_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVEL_CTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CAJA_CHICA] SET [ID_CAJA_CHICA] = @ID_CAJA_CHICA, [DETALLE_CAJA_CHI"& _ 
                "CA] = @DETALLE_CAJA_CHICA, [MONTO_CAJA_CHICA] = @MONTO_CAJA_CHICA, [VALOR_GASTO]"& _ 
                " = @VALOR_GASTO, [CTA_CONTABLE] = @CTA_CONTABLE, [TIPO_CTA] = @TIPO_CTA, [NIVEL_"& _ 
                "CTA] = @NIVEL_CTA, [ESTADO_CAJA_CHICA] = @ESTADO_CAJA_CHICA, [ID_CENTRO_COSTO] ="& _ 
                " @ID_CENTRO_COSTO, [ID_PROVINCIAS] = @ID_PROVINCIAS, [ID_CIUDAD] = @ID_CIUDAD, ["& _ 
                "ID_PARROQUIAS] = @ID_PARROQUIAS, [ID_PERSONAL] = @ID_PERSONAL WHERE (([ID_CAJA_C"& _ 
                "HICA] = @Original_ID_CAJA_CHICA) AND ([MONTO_CAJA_CHICA] = @Original_MONTO_CAJA_"& _ 
                "CHICA) AND ([VALOR_GASTO] = @Original_VALOR_GASTO) AND ([TIPO_CTA] = @Original_T"& _ 
                "IPO_CTA) AND ([NIVEL_CTA] = @Original_NIVEL_CTA) AND ([ESTADO_CAJA_CHICA] = @Ori"& _ 
                "ginal_ESTADO_CAJA_CHICA) AND ([ID_CENTRO_COSTO] = @Original_ID_CENTRO_COSTO) AND"& _ 
                " ([ID_PROVINCIAS] = @Original_ID_PROVINCIAS) AND ([ID_CIUDAD] = @Original_ID_CIU"& _ 
                "DAD) AND ([ID_PARROQUIAS] = @Original_ID_PARROQUIAS) AND ([ID_PERSONAL] = @Origi"& _ 
                "nal_ID_PERSONAL));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CAJA_CHICA, DETALLE_CAJA_CHICA, MONTO_CAJA_CHICA, "& _ 
                "VALOR_GASTO, CTA_CONTABLE, TIPO_CTA, NIVEL_CTA, ESTADO_CAJA_CHICA, ID_CENTRO_COS"& _ 
                "TO, ID_PROVINCIAS, ID_CIUDAD, ID_PARROQUIAS, ID_PERSONAL FROM CAJA_CHICA WHERE ("& _ 
                "ID_CAJA_CHICA = @ID_CAJA_CHICA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_CAJA_CHICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTO_CAJA_CHICA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR_GASTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_GASTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTA_CONTABLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTA_CONTABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVEL_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVEL_CTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CAJA_CHICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTO_CAJA_CHICA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MONTO_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR_GASTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR_GASTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVEL_CTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVEL_CTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CAJA_CHICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CAJA_CHICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PROVINCIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PROVINCIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PARROQUIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PARROQUIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CAJA_CHICA, DETALLE_CAJA_CHICA, MONTO_CAJA_CHICA, VALOR_GASTO, CTA_CONT"& _ 
                "ABLE, TIPO_CTA, NIVEL_CTA, ESTADO_CAJA_CHICA, ID_CENTRO_COSTO, ID_PROVINCIAS, ID"& _ 
                "_CIUDAD, ID_PARROQUIAS, ID_PERSONAL FROM dbo.CAJA_CHICA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.CAJA_CHICADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.CAJA_CHICADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.CAJA_CHICADataTable = New DataSetControlCombustibleCajaChica.CAJA_CHICADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.CAJA_CHICADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "CAJA_CHICA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CAJA_CHICA As Integer, ByVal Original_MONTO_CAJA_CHICA As Decimal, ByVal Original_VALOR_GASTO As Decimal, ByVal Original_TIPO_CTA As Integer, ByVal Original_NIVEL_CTA As Integer, ByVal Original_ESTADO_CAJA_CHICA As Integer, ByVal Original_ID_CENTRO_COSTO As Integer, ByVal Original_ID_PROVINCIAS As Integer, ByVal Original_ID_CIUDAD As Integer, ByVal Original_ID_PARROQUIAS As Integer, ByVal Original_ID_PERSONAL As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CAJA_CHICA,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_MONTO_CAJA_CHICA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_VALOR_GASTO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TIPO_CTA,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NIVEL_CTA,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ESTADO_CAJA_CHICA,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ID_PROVINCIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ID_PERSONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CAJA_CHICA As Integer, ByVal DETALLE_CAJA_CHICA As String, ByVal MONTO_CAJA_CHICA As Decimal, ByVal VALOR_GASTO As Decimal, ByVal CTA_CONTABLE As String, ByVal TIPO_CTA As Integer, ByVal NIVEL_CTA As Integer, ByVal ESTADO_CAJA_CHICA As Integer, ByVal ID_CENTRO_COSTO As Integer, ByVal ID_PROVINCIAS As Integer, ByVal ID_CIUDAD As Integer, ByVal ID_PARROQUIAS As Integer, ByVal ID_PERSONAL As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CAJA_CHICA,Integer)
            If (DETALLE_CAJA_CHICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_CAJA_CHICA")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DETALLE_CAJA_CHICA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(MONTO_CAJA_CHICA,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(VALOR_GASTO,Decimal)
            If (CTA_CONTABLE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_CONTABLE")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CTA_CONTABLE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(TIPO_CTA,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(NIVEL_CTA,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ESTADO_CAJA_CHICA,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(ID_PROVINCIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ID_PERSONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_CAJA_CHICA As Integer,  _
                    ByVal DETALLE_CAJA_CHICA As String,  _
                    ByVal MONTO_CAJA_CHICA As Decimal,  _
                    ByVal VALOR_GASTO As Decimal,  _
                    ByVal CTA_CONTABLE As String,  _
                    ByVal TIPO_CTA As Integer,  _
                    ByVal NIVEL_CTA As Integer,  _
                    ByVal ESTADO_CAJA_CHICA As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_PROVINCIAS As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal Original_ID_CAJA_CHICA As Integer,  _
                    ByVal Original_MONTO_CAJA_CHICA As Decimal,  _
                    ByVal Original_VALOR_GASTO As Decimal,  _
                    ByVal Original_TIPO_CTA As Integer,  _
                    ByVal Original_NIVEL_CTA As Integer,  _
                    ByVal Original_ESTADO_CAJA_CHICA As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_PROVINCIAS As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_PERSONAL As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CAJA_CHICA,Integer)
            If (DETALLE_CAJA_CHICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_CAJA_CHICA")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DETALLE_CAJA_CHICA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MONTO_CAJA_CHICA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(VALOR_GASTO,Decimal)
            If (CTA_CONTABLE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CTA_CONTABLE")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CTA_CONTABLE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TIPO_CTA,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NIVEL_CTA,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ESTADO_CAJA_CHICA,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ID_PROVINCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ID_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_ID_CAJA_CHICA,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_MONTO_CAJA_CHICA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_VALOR_GASTO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_TIPO_CTA,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_NIVEL_CTA,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ESTADO_CAJA_CHICA,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_PROVINCIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID_CIUDAD,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_ID_PARROQUIAS,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ID_PERSONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DETALLE_CAJA_CHICA As String,  _
                    ByVal MONTO_CAJA_CHICA As Decimal,  _
                    ByVal VALOR_GASTO As Decimal,  _
                    ByVal CTA_CONTABLE As String,  _
                    ByVal TIPO_CTA As Integer,  _
                    ByVal NIVEL_CTA As Integer,  _
                    ByVal ESTADO_CAJA_CHICA As Integer,  _
                    ByVal ID_CENTRO_COSTO As Integer,  _
                    ByVal ID_PROVINCIAS As Integer,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal ID_PARROQUIAS As Integer,  _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal Original_ID_CAJA_CHICA As Integer,  _
                    ByVal Original_MONTO_CAJA_CHICA As Decimal,  _
                    ByVal Original_VALOR_GASTO As Decimal,  _
                    ByVal Original_TIPO_CTA As Integer,  _
                    ByVal Original_NIVEL_CTA As Integer,  _
                    ByVal Original_ESTADO_CAJA_CHICA As Integer,  _
                    ByVal Original_ID_CENTRO_COSTO As Integer,  _
                    ByVal Original_ID_PROVINCIAS As Integer,  _
                    ByVal Original_ID_CIUDAD As Integer,  _
                    ByVal Original_ID_PARROQUIAS As Integer,  _
                    ByVal Original_ID_PERSONAL As Integer) As Integer
            Return Me.Update(Original_ID_CAJA_CHICA, DETALLE_CAJA_CHICA, MONTO_CAJA_CHICA, VALOR_GASTO, CTA_CONTABLE, TIPO_CTA, NIVEL_CTA, ESTADO_CAJA_CHICA, ID_CENTRO_COSTO, ID_PROVINCIAS, ID_CIUDAD, ID_PARROQUIAS, ID_PERSONAL, Original_ID_CAJA_CHICA, Original_MONTO_CAJA_CHICA, Original_VALOR_GASTO, Original_TIPO_CTA, Original_NIVEL_CTA, Original_ESTADO_CAJA_CHICA, Original_ID_CENTRO_COSTO, Original_ID_PROVINCIAS, Original_ID_CIUDAD, Original_ID_PARROQUIAS, Original_ID_PERSONAL)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CENTRO_COSTOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CENTRO_COSTO"
            tableMapping.ColumnMappings.Add("ID_CENTRO_COSTO", "ID_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("DETALLE_CENTRO_COSTO", "DETALLE_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("CODIGO_CENTRO_COSTO", "CODIGO_CENTRO_COSTO")
            tableMapping.ColumnMappings.Add("ESTADO_CENTRO_COSTO", "ESTADO_CENTRO_COSTO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CENTRO_COSTO] WHERE (([ID_CENTRO_COSTO] = @Original_ID_CENTRO_"& _ 
                "COSTO) AND ([ESTADO_CENTRO_COSTO] = @Original_ESTADO_CENTRO_COSTO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CENTRO_COSTO] ([ID_CENTRO_COSTO], [DETALLE_CENTRO_COSTO], [COD"& _ 
                "IGO_CENTRO_COSTO], [ESTADO_CENTRO_COSTO]) VALUES (@ID_CENTRO_COSTO, @DETALLE_CEN"& _ 
                "TRO_COSTO, @CODIGO_CENTRO_COSTO, @ESTADO_CENTRO_COSTO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CENTRO_COSTO,"& _ 
                " DETALLE_CENTRO_COSTO, CODIGO_CENTRO_COSTO, ESTADO_CENTRO_COSTO FROM CENTRO_COST"& _ 
                "O WHERE (ID_CENTRO_COSTO = @ID_CENTRO_COSTO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_CENTRO_COSTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CENTRO_COSTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CENTRO_COSTO] SET [ID_CENTRO_COSTO] = @ID_CENTRO_COSTO, [DETALLE_CE"& _ 
                "NTRO_COSTO] = @DETALLE_CENTRO_COSTO, [CODIGO_CENTRO_COSTO] = @CODIGO_CENTRO_COST"& _ 
                "O, [ESTADO_CENTRO_COSTO] = @ESTADO_CENTRO_COSTO WHERE (([ID_CENTRO_COSTO] = @Ori"& _ 
                "ginal_ID_CENTRO_COSTO) AND ([ESTADO_CENTRO_COSTO] = @Original_ESTADO_CENTRO_COST"& _ 
                "O));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CENTRO_COSTO, DETALLE_CENTRO_COSTO, CODIGO_CENTRO_COSTO, ESTADO_"& _ 
                "CENTRO_COSTO FROM CENTRO_COSTO WHERE (ID_CENTRO_COSTO = @ID_CENTRO_COSTO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETALLE_CENTRO_COSTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETALLE_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CENTRO_COSTO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CENTRO_COSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CENTRO_COSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CENTRO_COSTO, DETALLE_CENTRO_COSTO, CODIGO_CENTRO_COSTO, ESTADO_CENTRO_"& _ 
                "COSTO FROM dbo.CENTRO_COSTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetControlCombustibleCajaChica.CENTRO_COSTODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetControlCombustibleCajaChica.CENTRO_COSTODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetControlCombustibleCajaChica.CENTRO_COSTODataTable = New DataSetControlCombustibleCajaChica.CENTRO_COSTODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetControlCombustibleCajaChica.CENTRO_COSTODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            Return Me.Adapter.Update(dataSet, "CENTRO_COSTO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CENTRO_COSTO As Integer, ByVal Original_ESTADO_CENTRO_COSTO As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_CENTRO_COSTO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CENTRO_COSTO As Integer, ByVal DETALLE_CENTRO_COSTO As String, ByVal CODIGO_CENTRO_COSTO As String, ByVal ESTADO_CENTRO_COSTO As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CENTRO_COSTO,Integer)
            If (DETALLE_CENTRO_COSTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_CENTRO_COSTO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DETALLE_CENTRO_COSTO,String)
            End If
            If (CODIGO_CENTRO_COSTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_CENTRO_COSTO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO_CENTRO_COSTO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ESTADO_CENTRO_COSTO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_CENTRO_COSTO As Integer, ByVal DETALLE_CENTRO_COSTO As String, ByVal CODIGO_CENTRO_COSTO As String, ByVal ESTADO_CENTRO_COSTO As Integer, ByVal Original_ID_CENTRO_COSTO As Integer, ByVal Original_ESTADO_CENTRO_COSTO As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CENTRO_COSTO,Integer)
            If (DETALLE_CENTRO_COSTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DETALLE_CENTRO_COSTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DETALLE_CENTRO_COSTO,String)
            End If
            If (CODIGO_CENTRO_COSTO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO_CENTRO_COSTO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO_CENTRO_COSTO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ESTADO_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID_CENTRO_COSTO,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ESTADO_CENTRO_COSTO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DETALLE_CENTRO_COSTO As String, ByVal CODIGO_CENTRO_COSTO As String, ByVal ESTADO_CENTRO_COSTO As Integer, ByVal Original_ID_CENTRO_COSTO As Integer, ByVal Original_ESTADO_CENTRO_COSTO As Integer) As Integer
            Return Me.Update(Original_ID_CENTRO_COSTO, DETALLE_CENTRO_COSTO, CODIGO_CENTRO_COSTO, ESTADO_CENTRO_COSTO, Original_ID_CENTRO_COSTO, Original_ESTADO_CENTRO_COSTO)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cONTROL_COMBUSTIBLESTableAdapter As CONTROL_COMBUSTIBLESTableAdapter
        
        Private _lLEGADA_VEHICULOTableAdapter As LLEGADA_VEHICULOTableAdapter
        
        Private _sALIDA_VEHICULOTableAdapter As SALIDA_VEHICULOTableAdapter
        
        Private _vEHICULOSTableAdapter As VEHICULOSTableAdapter
        
        Private _aCTIVO_FIJO_GENERALTableAdapter As ACTIVO_FIJO_GENERALTableAdapter
        
        Private _rUBROSTableAdapter As RUBROSTableAdapter
        
        Private _pERSONALTableAdapter As PERSONALTableAdapter
        
        Private _gASTOS_CAJA_CHICATableAdapter As GASTOS_CAJA_CHICATableAdapter
        
        Private _sOLICITUD_CAJA_CHICATableAdapter As SOLICITUD_CAJA_CHICATableAdapter
        
        Private _rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter As RESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter
        
        Private _pROVINCIASTableAdapter As PROVINCIASTableAdapter
        
        Private _cIUDADESTableAdapter As CIUDADESTableAdapter
        
        Private _pARROQUIASTableAdapter As PARROQUIASTableAdapter
        
        Private _cAJA_CHICATableAdapter As CAJA_CHICATableAdapter
        
        Private _cENTRO_COSTOTableAdapter As CENTRO_COSTOTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CONTROL_COMBUSTIBLESTableAdapter() As CONTROL_COMBUSTIBLESTableAdapter
            Get
                Return Me._cONTROL_COMBUSTIBLESTableAdapter
            End Get
            Set
                Me._cONTROL_COMBUSTIBLESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property LLEGADA_VEHICULOTableAdapter() As LLEGADA_VEHICULOTableAdapter
            Get
                Return Me._lLEGADA_VEHICULOTableAdapter
            End Get
            Set
                Me._lLEGADA_VEHICULOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SALIDA_VEHICULOTableAdapter() As SALIDA_VEHICULOTableAdapter
            Get
                Return Me._sALIDA_VEHICULOTableAdapter
            End Get
            Set
                Me._sALIDA_VEHICULOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property VEHICULOSTableAdapter() As VEHICULOSTableAdapter
            Get
                Return Me._vEHICULOSTableAdapter
            End Get
            Set
                Me._vEHICULOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ACTIVO_FIJO_GENERALTableAdapter() As ACTIVO_FIJO_GENERALTableAdapter
            Get
                Return Me._aCTIVO_FIJO_GENERALTableAdapter
            End Get
            Set
                Me._aCTIVO_FIJO_GENERALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property RUBROSTableAdapter() As RUBROSTableAdapter
            Get
                Return Me._rUBROSTableAdapter
            End Get
            Set
                Me._rUBROSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PERSONALTableAdapter() As PERSONALTableAdapter
            Get
                Return Me._pERSONALTableAdapter
            End Get
            Set
                Me._pERSONALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GASTOS_CAJA_CHICATableAdapter() As GASTOS_CAJA_CHICATableAdapter
            Get
                Return Me._gASTOS_CAJA_CHICATableAdapter
            End Get
            Set
                Me._gASTOS_CAJA_CHICATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SOLICITUD_CAJA_CHICATableAdapter() As SOLICITUD_CAJA_CHICATableAdapter
            Get
                Return Me._sOLICITUD_CAJA_CHICATableAdapter
            End Get
            Set
                Me._sOLICITUD_CAJA_CHICATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property RESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter() As RESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter
            Get
                Return Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter
            End Get
            Set
                Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PROVINCIASTableAdapter() As PROVINCIASTableAdapter
            Get
                Return Me._pROVINCIASTableAdapter
            End Get
            Set
                Me._pROVINCIASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CIUDADESTableAdapter() As CIUDADESTableAdapter
            Get
                Return Me._cIUDADESTableAdapter
            End Get
            Set
                Me._cIUDADESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PARROQUIASTableAdapter() As PARROQUIASTableAdapter
            Get
                Return Me._pARROQUIASTableAdapter
            End Get
            Set
                Me._pARROQUIASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJA_CHICATableAdapter() As CAJA_CHICATableAdapter
            Get
                Return Me._cAJA_CHICATableAdapter
            End Get
            Set
                Me._cAJA_CHICATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CENTRO_COSTOTableAdapter() As CENTRO_COSTOTableAdapter
            Get
                Return Me._cENTRO_COSTOTableAdapter
            End Get
            Set
                Me._cENTRO_COSTOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cONTROL_COMBUSTIBLESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cONTROL_COMBUSTIBLESTableAdapter.Connection
                End If
                If ((Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._lLEGADA_VEHICULOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._lLEGADA_VEHICULOTableAdapter.Connection
                End If
                If ((Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sALIDA_VEHICULOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sALIDA_VEHICULOTableAdapter.Connection
                End If
                If ((Not (Me._vEHICULOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._vEHICULOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._vEHICULOSTableAdapter.Connection
                End If
                If ((Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aCTIVO_FIJO_GENERALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aCTIVO_FIJO_GENERALTableAdapter.Connection
                End If
                If ((Not (Me._rUBROSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._rUBROSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._rUBROSTableAdapter.Connection
                End If
                If ((Not (Me._pERSONALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pERSONALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pERSONALTableAdapter.Connection
                End If
                If ((Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gASTOS_CAJA_CHICATableAdapter.Connection) Is Nothing)) Then
                    Return Me._gASTOS_CAJA_CHICATableAdapter.Connection
                End If
                If ((Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sOLICITUD_CAJA_CHICATableAdapter.Connection) Is Nothing)) Then
                    Return Me._sOLICITUD_CAJA_CHICATableAdapter.Connection
                End If
                If ((Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection) Is Nothing)) Then
                    Return Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection
                End If
                If ((Not (Me._pROVINCIASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pROVINCIASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pROVINCIASTableAdapter.Connection
                End If
                If ((Not (Me._cIUDADESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cIUDADESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cIUDADESTableAdapter.Connection
                End If
                If ((Not (Me._pARROQUIASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pARROQUIASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pARROQUIASTableAdapter.Connection
                End If
                If ((Not (Me._cAJA_CHICATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJA_CHICATableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJA_CHICATableAdapter.Connection
                End If
                If ((Not (Me._cENTRO_COSTOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cENTRO_COSTOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cENTRO_COSTOTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSetControlCombustibleCajaChica, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.RESPONSABLE_AUTORIZACION_FONDO_CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PROVINCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pROVINCIASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PARROQUIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pARROQUIASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJA_CHICATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.LLEGADA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._lLEGADA_VEHICULOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SALIDA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sALIDA_VEHICULOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.VEHICULOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._vEHICULOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ACTIVO_FIJO_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aCTIVO_FIJO_GENERALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.RUBROS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._rUBROSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GASTOS_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gASTOS_CAJA_CHICATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SOLICITUD_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sOLICITUD_CAJA_CHICATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CONTROL_COMBUSTIBLES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cONTROL_COMBUSTIBLESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CENTRO_COSTO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cENTRO_COSTOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSetControlCombustibleCajaChica, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.RESPONSABLE_AUTORIZACION_FONDO_CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PROVINCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pROVINCIASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PARROQUIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pARROQUIASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJA_CHICATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.LLEGADA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._lLEGADA_VEHICULOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SALIDA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sALIDA_VEHICULOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.VEHICULOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._vEHICULOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ACTIVO_FIJO_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aCTIVO_FIJO_GENERALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.RUBROS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._rUBROSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GASTOS_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gASTOS_CAJA_CHICATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SOLICITUD_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sOLICITUD_CAJA_CHICATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CONTROL_COMBUSTIBLES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cONTROL_COMBUSTIBLESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CENTRO_COSTO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cENTRO_COSTOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSetControlCombustibleCajaChica, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CENTRO_COSTO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cENTRO_COSTOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CONTROL_COMBUSTIBLES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cONTROL_COMBUSTIBLESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SOLICITUD_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sOLICITUD_CAJA_CHICATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GASTOS_CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gASTOS_CAJA_CHICATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.RUBROS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._rUBROSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ACTIVO_FIJO_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aCTIVO_FIJO_GENERALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.VEHICULOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._vEHICULOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SALIDA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sALIDA_VEHICULOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.LLEGADA_VEHICULO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._lLEGADA_VEHICULOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJA_CHICA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJA_CHICATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PARROQUIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pARROQUIASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CIUDADES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cIUDADESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PROVINCIAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pROVINCIASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.RESPONSABLE_AUTORIZACION_FONDO_CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSetControlCombustibleCajaChica) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cONTROL_COMBUSTIBLESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._lLEGADA_VEHICULOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sALIDA_VEHICULOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._vEHICULOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._vEHICULOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aCTIVO_FIJO_GENERALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._rUBROSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._rUBROSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._pERSONALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pERSONALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gASTOS_CAJA_CHICATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sOLICITUD_CAJA_CHICATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._pROVINCIASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pROVINCIASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cIUDADESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cIUDADESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._pARROQUIASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pARROQUIASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cAJA_CHICATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJA_CHICATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cENTRO_COSTOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cENTRO_COSTOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cONTROL_COMBUSTIBLESTableAdapter, Me._cONTROL_COMBUSTIBLESTableAdapter.Connection)
                    Me._cONTROL_COMBUSTIBLESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cONTROL_COMBUSTIBLESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cONTROL_COMBUSTIBLESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cONTROL_COMBUSTIBLESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cONTROL_COMBUSTIBLESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._lLEGADA_VEHICULOTableAdapter, Me._lLEGADA_VEHICULOTableAdapter.Connection)
                    Me._lLEGADA_VEHICULOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._lLEGADA_VEHICULOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._lLEGADA_VEHICULOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._lLEGADA_VEHICULOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._lLEGADA_VEHICULOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sALIDA_VEHICULOTableAdapter, Me._sALIDA_VEHICULOTableAdapter.Connection)
                    Me._sALIDA_VEHICULOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sALIDA_VEHICULOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sALIDA_VEHICULOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sALIDA_VEHICULOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sALIDA_VEHICULOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._vEHICULOSTableAdapter, Me._vEHICULOSTableAdapter.Connection)
                    Me._vEHICULOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._vEHICULOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._vEHICULOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._vEHICULOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._vEHICULOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aCTIVO_FIJO_GENERALTableAdapter, Me._aCTIVO_FIJO_GENERALTableAdapter.Connection)
                    Me._aCTIVO_FIJO_GENERALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aCTIVO_FIJO_GENERALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aCTIVO_FIJO_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aCTIVO_FIJO_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aCTIVO_FIJO_GENERALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._rUBROSTableAdapter, Me._rUBROSTableAdapter.Connection)
                    Me._rUBROSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._rUBROSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._rUBROSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._rUBROSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._rUBROSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pERSONALTableAdapter, Me._pERSONALTableAdapter.Connection)
                    Me._pERSONALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pERSONALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pERSONALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pERSONALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pERSONALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gASTOS_CAJA_CHICATableAdapter, Me._gASTOS_CAJA_CHICATableAdapter.Connection)
                    Me._gASTOS_CAJA_CHICATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gASTOS_CAJA_CHICATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gASTOS_CAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gASTOS_CAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gASTOS_CAJA_CHICATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sOLICITUD_CAJA_CHICATableAdapter, Me._sOLICITUD_CAJA_CHICATableAdapter.Connection)
                    Me._sOLICITUD_CAJA_CHICATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sOLICITUD_CAJA_CHICATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sOLICITUD_CAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sOLICITUD_CAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sOLICITUD_CAJA_CHICATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter, Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection)
                    Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pROVINCIASTableAdapter, Me._pROVINCIASTableAdapter.Connection)
                    Me._pROVINCIASTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVINCIASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pROVINCIASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pROVINCIASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pROVINCIASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cIUDADESTableAdapter, Me._cIUDADESTableAdapter.Connection)
                    Me._cIUDADESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cIUDADESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cIUDADESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cIUDADESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cIUDADESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pARROQUIASTableAdapter, Me._pARROQUIASTableAdapter.Connection)
                    Me._pARROQUIASTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pARROQUIASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pARROQUIASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pARROQUIASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pARROQUIASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJA_CHICATableAdapter, Me._cAJA_CHICATableAdapter.Connection)
                    Me._cAJA_CHICATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJA_CHICATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJA_CHICATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJA_CHICATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cENTRO_COSTOTableAdapter, Me._cENTRO_COSTOTableAdapter.Connection)
                    Me._cENTRO_COSTOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cENTRO_COSTOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cENTRO_COSTOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cENTRO_COSTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cENTRO_COSTOTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cONTROL_COMBUSTIBLESTableAdapter) Is Nothing) Then
                    Me._cONTROL_COMBUSTIBLESTableAdapter.Connection = CType(revertConnections(Me._cONTROL_COMBUSTIBLESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cONTROL_COMBUSTIBLESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._lLEGADA_VEHICULOTableAdapter) Is Nothing) Then
                    Me._lLEGADA_VEHICULOTableAdapter.Connection = CType(revertConnections(Me._lLEGADA_VEHICULOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._lLEGADA_VEHICULOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sALIDA_VEHICULOTableAdapter) Is Nothing) Then
                    Me._sALIDA_VEHICULOTableAdapter.Connection = CType(revertConnections(Me._sALIDA_VEHICULOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sALIDA_VEHICULOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._vEHICULOSTableAdapter) Is Nothing) Then
                    Me._vEHICULOSTableAdapter.Connection = CType(revertConnections(Me._vEHICULOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._vEHICULOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aCTIVO_FIJO_GENERALTableAdapter) Is Nothing) Then
                    Me._aCTIVO_FIJO_GENERALTableAdapter.Connection = CType(revertConnections(Me._aCTIVO_FIJO_GENERALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aCTIVO_FIJO_GENERALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._rUBROSTableAdapter) Is Nothing) Then
                    Me._rUBROSTableAdapter.Connection = CType(revertConnections(Me._rUBROSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._rUBROSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    Me._pERSONALTableAdapter.Connection = CType(revertConnections(Me._pERSONALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pERSONALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gASTOS_CAJA_CHICATableAdapter) Is Nothing) Then
                    Me._gASTOS_CAJA_CHICATableAdapter.Connection = CType(revertConnections(Me._gASTOS_CAJA_CHICATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gASTOS_CAJA_CHICATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sOLICITUD_CAJA_CHICATableAdapter) Is Nothing) Then
                    Me._sOLICITUD_CAJA_CHICATableAdapter.Connection = CType(revertConnections(Me._sOLICITUD_CAJA_CHICATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sOLICITUD_CAJA_CHICATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter) Is Nothing) Then
                    Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Connection = CType(revertConnections(Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._rESPONSABLE_AUTORIZACION_FONDO_CAJATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pROVINCIASTableAdapter) Is Nothing) Then
                    Me._pROVINCIASTableAdapter.Connection = CType(revertConnections(Me._pROVINCIASTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVINCIASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cIUDADESTableAdapter) Is Nothing) Then
                    Me._cIUDADESTableAdapter.Connection = CType(revertConnections(Me._cIUDADESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cIUDADESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pARROQUIASTableAdapter) Is Nothing) Then
                    Me._pARROQUIASTableAdapter.Connection = CType(revertConnections(Me._pARROQUIASTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pARROQUIASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJA_CHICATableAdapter) Is Nothing) Then
                    Me._cAJA_CHICATableAdapter.Connection = CType(revertConnections(Me._cAJA_CHICATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJA_CHICATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cENTRO_COSTOTableAdapter) Is Nothing) Then
                    Me._cENTRO_COSTOTableAdapter.Connection = CType(revertConnections(Me._cENTRO_COSTOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cENTRO_COSTOTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
