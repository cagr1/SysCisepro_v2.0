'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPersonal"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPersonal
    Inherits Global.System.Data.DataSet
    
    Private tableAREA_GENERAL As AREA_GENERALDataTable
    
    Private tableCARGO_OCUPACIONAL As CARGO_OCUPACIONALDataTable
    
    Private tablePERSONAL As PERSONALDataTable
    
    Private relationFK_PERSONAL_AREA_GENERAL As Global.System.Data.DataRelation
    
    Private relationFK_PERSONAL_CARGO_OCUPACIONAL As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AREA_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New AREA_GENERALDataTable(ds.Tables("AREA_GENERAL")))
            End If
            If (Not (ds.Tables("CARGO_OCUPACIONAL")) Is Nothing) Then
                MyBase.Tables.Add(New CARGO_OCUPACIONALDataTable(ds.Tables("CARGO_OCUPACIONAL")))
            End If
            If (Not (ds.Tables("PERSONAL")) Is Nothing) Then
                MyBase.Tables.Add(New PERSONALDataTable(ds.Tables("PERSONAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AREA_GENERAL() As AREA_GENERALDataTable
        Get
            Return Me.tableAREA_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CARGO_OCUPACIONAL() As CARGO_OCUPACIONALDataTable
        Get
            Return Me.tableCARGO_OCUPACIONAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PERSONAL() As PERSONALDataTable
        Get
            Return Me.tablePERSONAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPersonal = CType(MyBase.Clone,dsPersonal)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("AREA_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New AREA_GENERALDataTable(ds.Tables("AREA_GENERAL")))
            End If
            If (Not (ds.Tables("CARGO_OCUPACIONAL")) Is Nothing) Then
                MyBase.Tables.Add(New CARGO_OCUPACIONALDataTable(ds.Tables("CARGO_OCUPACIONAL")))
            End If
            If (Not (ds.Tables("PERSONAL")) Is Nothing) Then
                MyBase.Tables.Add(New PERSONALDataTable(ds.Tables("PERSONAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAREA_GENERAL = CType(MyBase.Tables("AREA_GENERAL"),AREA_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAREA_GENERAL) Is Nothing) Then
                Me.tableAREA_GENERAL.InitVars
            End If
        End If
        Me.tableCARGO_OCUPACIONAL = CType(MyBase.Tables("CARGO_OCUPACIONAL"),CARGO_OCUPACIONALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCARGO_OCUPACIONAL) Is Nothing) Then
                Me.tableCARGO_OCUPACIONAL.InitVars
            End If
        End If
        Me.tablePERSONAL = CType(MyBase.Tables("PERSONAL"),PERSONALDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePERSONAL) Is Nothing) Then
                Me.tablePERSONAL.InitVars
            End If
        End If
        Me.relationFK_PERSONAL_AREA_GENERAL = Me.Relations("FK_PERSONAL_AREA_GENERAL")
        Me.relationFK_PERSONAL_CARGO_OCUPACIONAL = Me.Relations("FK_PERSONAL_CARGO_OCUPACIONAL")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPersonal"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPersonal.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAREA_GENERAL = New AREA_GENERALDataTable()
        MyBase.Tables.Add(Me.tableAREA_GENERAL)
        Me.tableCARGO_OCUPACIONAL = New CARGO_OCUPACIONALDataTable()
        MyBase.Tables.Add(Me.tableCARGO_OCUPACIONAL)
        Me.tablePERSONAL = New PERSONALDataTable()
        MyBase.Tables.Add(Me.tablePERSONAL)
        Me.relationFK_PERSONAL_AREA_GENERAL = New Global.System.Data.DataRelation("FK_PERSONAL_AREA_GENERAL", New Global.System.Data.DataColumn() {Me.tableAREA_GENERAL.ID_AREA_GENERALColumn}, New Global.System.Data.DataColumn() {Me.tablePERSONAL.ID_AREAColumn}, false)
        Me.Relations.Add(Me.relationFK_PERSONAL_AREA_GENERAL)
        Me.relationFK_PERSONAL_CARGO_OCUPACIONAL = New Global.System.Data.DataRelation("FK_PERSONAL_CARGO_OCUPACIONAL", New Global.System.Data.DataColumn() {Me.tableCARGO_OCUPACIONAL.ID_CARGO_OCUPACIONALColumn}, New Global.System.Data.DataColumn() {Me.tablePERSONAL.ID_CARGO_OCUPACIONALColumn}, false)
        Me.Relations.Add(Me.relationFK_PERSONAL_CARGO_OCUPACIONAL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeAREA_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCARGO_OCUPACIONAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePERSONAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPersonal = New dsPersonal()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub AREA_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As AREA_GENERALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CARGO_OCUPACIONALRowChangeEventHandler(ByVal sender As Object, ByVal e As CARGO_OCUPACIONALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PERSONALRowChangeEventHandler(ByVal sender As Object, ByVal e As PERSONALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AREA_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of AREA_GENERALRow)
        
        Private columnID_AREA_GENERAL As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_AREA As Global.System.Data.DataColumn
        
        Private columnESTADO_AREA As Global.System.Data.DataColumn
        
        Private columnID_GERENCIAS_GENERAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AREA_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_AREA_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_AREA_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRE_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_GERENCIAS_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_GERENCIAS_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AREA_GENERALRow
            Get
                Return CType(Me.Rows(index),AREA_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event AREA_GENERALRowChanging As AREA_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event AREA_GENERALRowChanged As AREA_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event AREA_GENERALRowDeleting As AREA_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event AREA_GENERALRowDeleted As AREA_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddAREA_GENERALRow(ByVal row As AREA_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddAREA_GENERALRow(ByVal ID_AREA_GENERAL As Integer, ByVal CODIGO As String, ByVal NOMBRE_AREA As String, ByVal ESTADO_AREA As Integer, ByVal ID_GERENCIAS_GENERAL As Integer) As AREA_GENERALRow
            Dim rowAREA_GENERALRow As AREA_GENERALRow = CType(Me.NewRow,AREA_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {ID_AREA_GENERAL, CODIGO, NOMBRE_AREA, ESTADO_AREA, ID_GERENCIAS_GENERAL}
            rowAREA_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAREA_GENERALRow)
            Return rowAREA_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_AREA_GENERAL(ByVal ID_AREA_GENERAL As Integer) As AREA_GENERALRow
            Return CType(Me.Rows.Find(New Object() {ID_AREA_GENERAL}),AREA_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AREA_GENERALDataTable = CType(MyBase.Clone,AREA_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AREA_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_AREA_GENERAL = MyBase.Columns("ID_AREA_GENERAL")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnNOMBRE_AREA = MyBase.Columns("NOMBRE_AREA")
            Me.columnESTADO_AREA = MyBase.Columns("ESTADO_AREA")
            Me.columnID_GERENCIAS_GENERAL = MyBase.Columns("ID_GERENCIAS_GENERAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_AREA_GENERAL = New Global.System.Data.DataColumn("ID_AREA_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_AREA_GENERAL)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnNOMBRE_AREA = New Global.System.Data.DataColumn("NOMBRE_AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_AREA)
            Me.columnESTADO_AREA = New Global.System.Data.DataColumn("ESTADO_AREA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_AREA)
            Me.columnID_GERENCIAS_GENERAL = New Global.System.Data.DataColumn("ID_GERENCIAS_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_GERENCIAS_GENERAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_AREA_GENERAL}, true))
            Me.columnID_AREA_GENERAL.AllowDBNull = false
            Me.columnID_AREA_GENERAL.Unique = true
            Me.columnCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 2147483647
            Me.columnNOMBRE_AREA.AllowDBNull = false
            Me.columnNOMBRE_AREA.MaxLength = 2147483647
            Me.columnESTADO_AREA.AllowDBNull = false
            Me.columnID_GERENCIAS_GENERAL.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewAREA_GENERALRow() As AREA_GENERALRow
            Return CType(Me.NewRow,AREA_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AREA_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AREA_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AREA_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent AREA_GENERALRowChanged(Me, New AREA_GENERALRowChangeEvent(CType(e.Row,AREA_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AREA_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent AREA_GENERALRowChanging(Me, New AREA_GENERALRowChangeEvent(CType(e.Row,AREA_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AREA_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent AREA_GENERALRowDeleted(Me, New AREA_GENERALRowChangeEvent(CType(e.Row,AREA_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AREA_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent AREA_GENERALRowDeleting(Me, New AREA_GENERALRowChangeEvent(CType(e.Row,AREA_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveAREA_GENERALRow(ByVal row As AREA_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPersonal = New dsPersonal()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AREA_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CARGO_OCUPACIONALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CARGO_OCUPACIONALRow)
        
        Private columnID_CARGO_OCUPACIONAL As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnID_SERIE_OCUPACIONAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CARGO_OCUPACIONAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CARGO_OCUPACIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CARGO_OCUPACIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_SERIE_OCUPACIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_SERIE_OCUPACIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CARGO_OCUPACIONALRow
            Get
                Return CType(Me.Rows(index),CARGO_OCUPACIONALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CARGO_OCUPACIONALRowChanging As CARGO_OCUPACIONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CARGO_OCUPACIONALRowChanged As CARGO_OCUPACIONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CARGO_OCUPACIONALRowDeleting As CARGO_OCUPACIONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CARGO_OCUPACIONALRowDeleted As CARGO_OCUPACIONALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCARGO_OCUPACIONALRow(ByVal row As CARGO_OCUPACIONALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCARGO_OCUPACIONALRow(ByVal ID_CARGO_OCUPACIONAL As Integer, ByVal CODIGO As String, ByVal DESCRIPCION As String, ByVal ESTADO As Integer, ByVal ID_SERIE_OCUPACIONAL As Integer) As CARGO_OCUPACIONALRow
            Dim rowCARGO_OCUPACIONALRow As CARGO_OCUPACIONALRow = CType(Me.NewRow,CARGO_OCUPACIONALRow)
            Dim columnValuesArray() As Object = New Object() {ID_CARGO_OCUPACIONAL, CODIGO, DESCRIPCION, ESTADO, ID_SERIE_OCUPACIONAL}
            rowCARGO_OCUPACIONALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCARGO_OCUPACIONALRow)
            Return rowCARGO_OCUPACIONALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CARGO_OCUPACIONAL(ByVal ID_CARGO_OCUPACIONAL As Integer) As CARGO_OCUPACIONALRow
            Return CType(Me.Rows.Find(New Object() {ID_CARGO_OCUPACIONAL}),CARGO_OCUPACIONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CARGO_OCUPACIONALDataTable = CType(MyBase.Clone,CARGO_OCUPACIONALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CARGO_OCUPACIONALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CARGO_OCUPACIONAL = MyBase.Columns("ID_CARGO_OCUPACIONAL")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnID_SERIE_OCUPACIONAL = MyBase.Columns("ID_SERIE_OCUPACIONAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CARGO_OCUPACIONAL = New Global.System.Data.DataColumn("ID_CARGO_OCUPACIONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CARGO_OCUPACIONAL)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnID_SERIE_OCUPACIONAL = New Global.System.Data.DataColumn("ID_SERIE_OCUPACIONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_SERIE_OCUPACIONAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CARGO_OCUPACIONAL}, true))
            Me.columnID_CARGO_OCUPACIONAL.AllowDBNull = false
            Me.columnID_CARGO_OCUPACIONAL.Unique = true
            Me.columnCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 2147483647
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 2147483647
            Me.columnESTADO.AllowDBNull = false
            Me.columnID_SERIE_OCUPACIONAL.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCARGO_OCUPACIONALRow() As CARGO_OCUPACIONALRow
            Return CType(Me.NewRow,CARGO_OCUPACIONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CARGO_OCUPACIONALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CARGO_OCUPACIONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CARGO_OCUPACIONALRowChangedEvent) Is Nothing) Then
                RaiseEvent CARGO_OCUPACIONALRowChanged(Me, New CARGO_OCUPACIONALRowChangeEvent(CType(e.Row,CARGO_OCUPACIONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CARGO_OCUPACIONALRowChangingEvent) Is Nothing) Then
                RaiseEvent CARGO_OCUPACIONALRowChanging(Me, New CARGO_OCUPACIONALRowChangeEvent(CType(e.Row,CARGO_OCUPACIONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CARGO_OCUPACIONALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CARGO_OCUPACIONALRowDeleted(Me, New CARGO_OCUPACIONALRowChangeEvent(CType(e.Row,CARGO_OCUPACIONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CARGO_OCUPACIONALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CARGO_OCUPACIONALRowDeleting(Me, New CARGO_OCUPACIONALRowChangeEvent(CType(e.Row,CARGO_OCUPACIONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCARGO_OCUPACIONALRow(ByVal row As CARGO_OCUPACIONALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPersonal = New dsPersonal()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CARGO_OCUPACIONALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PERSONALDataTable
        Inherits Global.System.Data.TypedTableBase(Of PERSONALRow)
        
        Private columnID_PERSONAL As Global.System.Data.DataColumn
        
        Private columnCEDULA As Global.System.Data.DataColumn
        
        Private columnNOMBRES As Global.System.Data.DataColumn
        
        Private columnAPELLIDOS As Global.System.Data.DataColumn
        
        Private columnPROVINCIA As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnFECHA_NACIMIENTO As Global.System.Data.DataColumn
        
        Private columnSEXO As Global.System.Data.DataColumn
        
        Private columnCIUDAD As Global.System.Data.DataColumn
        
        Private columnSUELDO As Global.System.Data.DataColumn
        
        Private columnLIBRETA_MILITAR As Global.System.Data.DataColumn
        
        Private columnTIPO_SANGRE As Global.System.Data.DataColumn
        
        Private columnPASAPORTE As Global.System.Data.DataColumn
        
        Private columnPESO As Global.System.Data.DataColumn
        
        Private columnEDAD As Global.System.Data.DataColumn
        
        Private columnPRUEBA_ANTIDROGA As Global.System.Data.DataColumn
        
        Private columnFECHA_ENTRADA As Global.System.Data.DataColumn
        
        Private columnFECHA_SALIDA As Global.System.Data.DataColumn
        
        Private columnESTADO_PERSONAL As Global.System.Data.DataColumn
        
        Private columnID_AREA As Global.System.Data.DataColumn
        
        Private columnID_CARGO_OCUPACIONAL As Global.System.Data.DataColumn
        
        Private columnUBICACION As Global.System.Data.DataColumn
        
        Private columnINSTRUCCION As Global.System.Data.DataColumn
        
        Private columnESTADO_CIVIL As Global.System.Data.DataColumn
        
        Private columnMOVIL As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_HIJOS As Global.System.Data.DataColumn
        
        Private columnHISTORIA_CLINICA As Global.System.Data.DataColumn
        
        Private columnPARROQUIA As Global.System.Data.DataColumn
        
        Private columnESTATURA As Global.System.Data.DataColumn
        
        Private columnDISCAPACIDAD As Global.System.Data.DataColumn
        
        Private columnEXAMEN_PSICOLOGICO As Global.System.Data.DataColumn
        
        Private columnLUGAR_EXAMEN_PSICOLOGICO As Global.System.Data.DataColumn
        
        Private columnCARNET_CONADIS As Global.System.Data.DataColumn
        
        Private columnDATOS_HIJOS As Global.System.Data.DataColumn
        
        Private columnDATOS_ESPOSA As Global.System.Data.DataColumn
        
        Private columnCASA As Global.System.Data.DataColumn
        
        Private columnARRIENDO As Global.System.Data.DataColumn
        
        Private columnDEUDOR_GARANTE As Global.System.Data.DataColumn
        
        Private columnCANTIDAD_DEUDA As Global.System.Data.DataColumn
        
        Private columnA_QUIEN_ADEUDA As Global.System.Data.DataColumn
        
        Private columnTRABAJO_ATERIORMENTE As Global.System.Data.DataColumn
        
        Private columnANTERIOR_TRABAJO As Global.System.Data.DataColumn
        
        Private columnCARGO_ANTERIOR_TRABAJO As Global.System.Data.DataColumn
        
        Private columnMOTIVO_SALIDA_TRABAJO As Global.System.Data.DataColumn
        
        Private columnENTRADA_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnSALIDA_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnNOMBRES_PATRONO_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnTELEFONO_PATRONO_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnRECOMENDACIONES As Global.System.Data.DataColumn
        
        Private columnDATOS_FAMILIARES As Global.System.Data.DataColumn
        
        Private columnDATOS_EMERGENCIA As Global.System.Data.DataColumn
        
        Private columnFOTO As Global.System.Data.DataColumn
        
        Private columnPERFIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PERSONAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CEDULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property APELLIDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_NACIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_NACIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUELDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUELDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LIBRETA_MILITARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBRETA_MILITAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_SANGREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SANGRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PASAPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASAPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRUEBA_ANTIDROGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRUEBA_ANTIDROGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_ENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_SALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_PERSONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_PERSONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CARGO_OCUPACIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CARGO_OCUPACIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UBICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUBICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INSTRUCCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTRUCCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CIVILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CIVIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOVILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_HIJOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_HIJOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HISTORIA_CLINICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHISTORIA_CLINICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PARROQUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARROQUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DISCAPACIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCAPACIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXAMEN_PSICOLOGICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXAMEN_PSICOLOGICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LUGAR_EXAMEN_PSICOLOGICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLUGAR_EXAMEN_PSICOLOGICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARNET_CONADISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARNET_CONADIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_HIJOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_HIJOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_ESPOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_ESPOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ARRIENDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARRIENDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DEUDOR_GARANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEUDOR_GARANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CANTIDAD_DEUDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD_DEUDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property A_QUIEN_ADEUDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnA_QUIEN_ADEUDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRABAJO_ATERIORMENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRABAJO_ATERIORMENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ANTERIOR_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANTERIOR_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARGO_ANTERIOR_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGO_ANTERIOR_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MOTIVO_SALIDA_TRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVO_SALIDA_TRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ENTRADA_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRADA_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SALIDA_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALIDA_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMBRES_PATRONO_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRES_PATRONO_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_PATRONO_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_PATRONO_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RECOMENDACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECOMENDACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_FAMILIARESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_FAMILIARES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DATOS_EMERGENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATOS_EMERGENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FOTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PERSONALRow
            Get
                Return CType(Me.Rows(index),PERSONALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowChanging As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowChanged As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowDeleting As PERSONALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERSONALRowDeleted As PERSONALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPERSONALRow(ByVal row As PERSONALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPERSONALRow( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Date,  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Date,  _
                    ByVal FECHA_SALIDA As Date,  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal parentAREA_GENERALRowByFK_PERSONAL_AREA_GENERAL As AREA_GENERALRow,  _
                    ByVal parentCARGO_OCUPACIONALRowByFK_PERSONAL_CARGO_OCUPACIONAL As CARGO_OCUPACIONALRow,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Integer,  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Decimal,  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Decimal,  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Date,  _
                    ByVal SALIDA_ANTERIOR As Date,  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte) As PERSONALRow
            Dim rowPERSONALRow As PERSONALRow = CType(Me.NewRow,PERSONALRow)
            Dim columnValuesArray() As Object = New Object() {ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, Nothing, Nothing, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL}
            If (Not (parentAREA_GENERALRowByFK_PERSONAL_AREA_GENERAL) Is Nothing) Then
                columnValuesArray(19) = parentAREA_GENERALRowByFK_PERSONAL_AREA_GENERAL(0)
            End If
            If (Not (parentCARGO_OCUPACIONALRowByFK_PERSONAL_CARGO_OCUPACIONAL) Is Nothing) Then
                columnValuesArray(20) = parentCARGO_OCUPACIONALRowByFK_PERSONAL_CARGO_OCUPACIONAL(0)
            End If
            rowPERSONALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPERSONALRow)
            Return rowPERSONALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_PERSONAL(ByVal ID_PERSONAL As Integer) As PERSONALRow
            Return CType(Me.Rows.Find(New Object() {ID_PERSONAL}),PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PERSONALDataTable = CType(MyBase.Clone,PERSONALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PERSONALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_PERSONAL = MyBase.Columns("ID_PERSONAL")
            Me.columnCEDULA = MyBase.Columns("CEDULA")
            Me.columnNOMBRES = MyBase.Columns("NOMBRES")
            Me.columnAPELLIDOS = MyBase.Columns("APELLIDOS")
            Me.columnPROVINCIA = MyBase.Columns("PROVINCIA")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnFECHA_NACIMIENTO = MyBase.Columns("FECHA_NACIMIENTO")
            Me.columnSEXO = MyBase.Columns("SEXO")
            Me.columnCIUDAD = MyBase.Columns("CIUDAD")
            Me.columnSUELDO = MyBase.Columns("SUELDO")
            Me.columnLIBRETA_MILITAR = MyBase.Columns("LIBRETA_MILITAR")
            Me.columnTIPO_SANGRE = MyBase.Columns("TIPO_SANGRE")
            Me.columnPASAPORTE = MyBase.Columns("PASAPORTE")
            Me.columnPESO = MyBase.Columns("PESO")
            Me.columnEDAD = MyBase.Columns("EDAD")
            Me.columnPRUEBA_ANTIDROGA = MyBase.Columns("PRUEBA_ANTIDROGA")
            Me.columnFECHA_ENTRADA = MyBase.Columns("FECHA_ENTRADA")
            Me.columnFECHA_SALIDA = MyBase.Columns("FECHA_SALIDA")
            Me.columnESTADO_PERSONAL = MyBase.Columns("ESTADO_PERSONAL")
            Me.columnID_AREA = MyBase.Columns("ID_AREA")
            Me.columnID_CARGO_OCUPACIONAL = MyBase.Columns("ID_CARGO_OCUPACIONAL")
            Me.columnUBICACION = MyBase.Columns("UBICACION")
            Me.columnINSTRUCCION = MyBase.Columns("INSTRUCCION")
            Me.columnESTADO_CIVIL = MyBase.Columns("ESTADO_CIVIL")
            Me.columnMOVIL = MyBase.Columns("MOVIL")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCANTIDAD_HIJOS = MyBase.Columns("CANTIDAD_HIJOS")
            Me.columnHISTORIA_CLINICA = MyBase.Columns("HISTORIA_CLINICA")
            Me.columnPARROQUIA = MyBase.Columns("PARROQUIA")
            Me.columnESTATURA = MyBase.Columns("ESTATURA")
            Me.columnDISCAPACIDAD = MyBase.Columns("DISCAPACIDAD")
            Me.columnEXAMEN_PSICOLOGICO = MyBase.Columns("EXAMEN_PSICOLOGICO")
            Me.columnLUGAR_EXAMEN_PSICOLOGICO = MyBase.Columns("LUGAR_EXAMEN_PSICOLOGICO")
            Me.columnCARNET_CONADIS = MyBase.Columns("CARNET_CONADIS")
            Me.columnDATOS_HIJOS = MyBase.Columns("DATOS_HIJOS")
            Me.columnDATOS_ESPOSA = MyBase.Columns("DATOS_ESPOSA")
            Me.columnCASA = MyBase.Columns("CASA")
            Me.columnARRIENDO = MyBase.Columns("ARRIENDO")
            Me.columnDEUDOR_GARANTE = MyBase.Columns("DEUDOR_GARANTE")
            Me.columnCANTIDAD_DEUDA = MyBase.Columns("CANTIDAD_DEUDA")
            Me.columnA_QUIEN_ADEUDA = MyBase.Columns("A_QUIEN_ADEUDA")
            Me.columnTRABAJO_ATERIORMENTE = MyBase.Columns("TRABAJO_ATERIORMENTE")
            Me.columnANTERIOR_TRABAJO = MyBase.Columns("ANTERIOR_TRABAJO")
            Me.columnCARGO_ANTERIOR_TRABAJO = MyBase.Columns("CARGO_ANTERIOR_TRABAJO")
            Me.columnMOTIVO_SALIDA_TRABAJO = MyBase.Columns("MOTIVO_SALIDA_TRABAJO")
            Me.columnENTRADA_ANTERIOR = MyBase.Columns("ENTRADA_ANTERIOR")
            Me.columnSALIDA_ANTERIOR = MyBase.Columns("SALIDA_ANTERIOR")
            Me.columnNOMBRES_PATRONO_ANTERIOR = MyBase.Columns("NOMBRES_PATRONO_ANTERIOR")
            Me.columnTELEFONO_PATRONO_ANTERIOR = MyBase.Columns("TELEFONO_PATRONO_ANTERIOR")
            Me.columnRECOMENDACIONES = MyBase.Columns("RECOMENDACIONES")
            Me.columnDATOS_FAMILIARES = MyBase.Columns("DATOS_FAMILIARES")
            Me.columnDATOS_EMERGENCIA = MyBase.Columns("DATOS_EMERGENCIA")
            Me.columnFOTO = MyBase.Columns("FOTO")
            Me.columnPERFIL = MyBase.Columns("PERFIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_PERSONAL = New Global.System.Data.DataColumn("ID_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PERSONAL)
            Me.columnCEDULA = New Global.System.Data.DataColumn("CEDULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA)
            Me.columnNOMBRES = New Global.System.Data.DataColumn("NOMBRES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES)
            Me.columnAPELLIDOS = New Global.System.Data.DataColumn("APELLIDOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDOS)
            Me.columnPROVINCIA = New Global.System.Data.DataColumn("PROVINCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCIA)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnFECHA_NACIMIENTO = New Global.System.Data.DataColumn("FECHA_NACIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_NACIMIENTO)
            Me.columnSEXO = New Global.System.Data.DataColumn("SEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEXO)
            Me.columnCIUDAD = New Global.System.Data.DataColumn("CIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIUDAD)
            Me.columnSUELDO = New Global.System.Data.DataColumn("SUELDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUELDO)
            Me.columnLIBRETA_MILITAR = New Global.System.Data.DataColumn("LIBRETA_MILITAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBRETA_MILITAR)
            Me.columnTIPO_SANGRE = New Global.System.Data.DataColumn("TIPO_SANGRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SANGRE)
            Me.columnPASAPORTE = New Global.System.Data.DataColumn("PASAPORTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASAPORTE)
            Me.columnPESO = New Global.System.Data.DataColumn("PESO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO)
            Me.columnEDAD = New Global.System.Data.DataColumn("EDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDAD)
            Me.columnPRUEBA_ANTIDROGA = New Global.System.Data.DataColumn("PRUEBA_ANTIDROGA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRUEBA_ANTIDROGA)
            Me.columnFECHA_ENTRADA = New Global.System.Data.DataColumn("FECHA_ENTRADA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENTRADA)
            Me.columnFECHA_SALIDA = New Global.System.Data.DataColumn("FECHA_SALIDA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SALIDA)
            Me.columnESTADO_PERSONAL = New Global.System.Data.DataColumn("ESTADO_PERSONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_PERSONAL)
            Me.columnID_AREA = New Global.System.Data.DataColumn("ID_AREA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_AREA)
            Me.columnID_CARGO_OCUPACIONAL = New Global.System.Data.DataColumn("ID_CARGO_OCUPACIONAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CARGO_OCUPACIONAL)
            Me.columnUBICACION = New Global.System.Data.DataColumn("UBICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUBICACION)
            Me.columnINSTRUCCION = New Global.System.Data.DataColumn("INSTRUCCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTRUCCION)
            Me.columnESTADO_CIVIL = New Global.System.Data.DataColumn("ESTADO_CIVIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CIVIL)
            Me.columnMOVIL = New Global.System.Data.DataColumn("MOVIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIL)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCANTIDAD_HIJOS = New Global.System.Data.DataColumn("CANTIDAD_HIJOS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_HIJOS)
            Me.columnHISTORIA_CLINICA = New Global.System.Data.DataColumn("HISTORIA_CLINICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHISTORIA_CLINICA)
            Me.columnPARROQUIA = New Global.System.Data.DataColumn("PARROQUIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARROQUIA)
            Me.columnESTATURA = New Global.System.Data.DataColumn("ESTATURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTATURA)
            Me.columnDISCAPACIDAD = New Global.System.Data.DataColumn("DISCAPACIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCAPACIDAD)
            Me.columnEXAMEN_PSICOLOGICO = New Global.System.Data.DataColumn("EXAMEN_PSICOLOGICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXAMEN_PSICOLOGICO)
            Me.columnLUGAR_EXAMEN_PSICOLOGICO = New Global.System.Data.DataColumn("LUGAR_EXAMEN_PSICOLOGICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLUGAR_EXAMEN_PSICOLOGICO)
            Me.columnCARNET_CONADIS = New Global.System.Data.DataColumn("CARNET_CONADIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARNET_CONADIS)
            Me.columnDATOS_HIJOS = New Global.System.Data.DataColumn("DATOS_HIJOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_HIJOS)
            Me.columnDATOS_ESPOSA = New Global.System.Data.DataColumn("DATOS_ESPOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_ESPOSA)
            Me.columnCASA = New Global.System.Data.DataColumn("CASA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASA)
            Me.columnARRIENDO = New Global.System.Data.DataColumn("ARRIENDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARRIENDO)
            Me.columnDEUDOR_GARANTE = New Global.System.Data.DataColumn("DEUDOR_GARANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEUDOR_GARANTE)
            Me.columnCANTIDAD_DEUDA = New Global.System.Data.DataColumn("CANTIDAD_DEUDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD_DEUDA)
            Me.columnA_QUIEN_ADEUDA = New Global.System.Data.DataColumn("A_QUIEN_ADEUDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnA_QUIEN_ADEUDA)
            Me.columnTRABAJO_ATERIORMENTE = New Global.System.Data.DataColumn("TRABAJO_ATERIORMENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRABAJO_ATERIORMENTE)
            Me.columnANTERIOR_TRABAJO = New Global.System.Data.DataColumn("ANTERIOR_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANTERIOR_TRABAJO)
            Me.columnCARGO_ANTERIOR_TRABAJO = New Global.System.Data.DataColumn("CARGO_ANTERIOR_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGO_ANTERIOR_TRABAJO)
            Me.columnMOTIVO_SALIDA_TRABAJO = New Global.System.Data.DataColumn("MOTIVO_SALIDA_TRABAJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVO_SALIDA_TRABAJO)
            Me.columnENTRADA_ANTERIOR = New Global.System.Data.DataColumn("ENTRADA_ANTERIOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRADA_ANTERIOR)
            Me.columnSALIDA_ANTERIOR = New Global.System.Data.DataColumn("SALIDA_ANTERIOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALIDA_ANTERIOR)
            Me.columnNOMBRES_PATRONO_ANTERIOR = New Global.System.Data.DataColumn("NOMBRES_PATRONO_ANTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRES_PATRONO_ANTERIOR)
            Me.columnTELEFONO_PATRONO_ANTERIOR = New Global.System.Data.DataColumn("TELEFONO_PATRONO_ANTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_PATRONO_ANTERIOR)
            Me.columnRECOMENDACIONES = New Global.System.Data.DataColumn("RECOMENDACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECOMENDACIONES)
            Me.columnDATOS_FAMILIARES = New Global.System.Data.DataColumn("DATOS_FAMILIARES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_FAMILIARES)
            Me.columnDATOS_EMERGENCIA = New Global.System.Data.DataColumn("DATOS_EMERGENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATOS_EMERGENCIA)
            Me.columnFOTO = New Global.System.Data.DataColumn("FOTO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOTO)
            Me.columnPERFIL = New Global.System.Data.DataColumn("PERFIL", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_PERSONAL}, true))
            Me.columnID_PERSONAL.AllowDBNull = false
            Me.columnID_PERSONAL.Unique = true
            Me.columnCEDULA.AllowDBNull = false
            Me.columnCEDULA.MaxLength = 10
            Me.columnNOMBRES.AllowDBNull = false
            Me.columnNOMBRES.MaxLength = 2147483647
            Me.columnAPELLIDOS.AllowDBNull = false
            Me.columnAPELLIDOS.MaxLength = 2147483647
            Me.columnPROVINCIA.AllowDBNull = false
            Me.columnPROVINCIA.MaxLength = 2147483647
            Me.columnDIRECCION.AllowDBNull = false
            Me.columnDIRECCION.MaxLength = 2147483647
            Me.columnSEXO.AllowDBNull = false
            Me.columnSEXO.MaxLength = 10
            Me.columnCIUDAD.AllowDBNull = false
            Me.columnCIUDAD.MaxLength = 2147483647
            Me.columnSUELDO.AllowDBNull = false
            Me.columnLIBRETA_MILITAR.AllowDBNull = false
            Me.columnLIBRETA_MILITAR.MaxLength = 20
            Me.columnTIPO_SANGRE.AllowDBNull = false
            Me.columnTIPO_SANGRE.MaxLength = 5
            Me.columnPASAPORTE.AllowDBNull = false
            Me.columnPASAPORTE.MaxLength = 20
            Me.columnPESO.AllowDBNull = false
            Me.columnEDAD.AllowDBNull = false
            Me.columnPRUEBA_ANTIDROGA.AllowDBNull = false
            Me.columnPRUEBA_ANTIDROGA.MaxLength = 20
            Me.columnESTADO_PERSONAL.AllowDBNull = false
            Me.columnID_AREA.AllowDBNull = false
            Me.columnID_CARGO_OCUPACIONAL.AllowDBNull = false
            Me.columnUBICACION.AllowDBNull = false
            Me.columnUBICACION.MaxLength = 2147483647
            Me.columnINSTRUCCION.AllowDBNull = false
            Me.columnINSTRUCCION.MaxLength = 2147483647
            Me.columnESTADO_CIVIL.AllowDBNull = false
            Me.columnESTADO_CIVIL.MaxLength = 10
            Me.columnMOVIL.MaxLength = 2147483647
            Me.columnTELEFONO.MaxLength = 2147483647
            Me.columnHISTORIA_CLINICA.MaxLength = 2147483647
            Me.columnPARROQUIA.MaxLength = 2147483647
            Me.columnDISCAPACIDAD.MaxLength = 2147483647
            Me.columnEXAMEN_PSICOLOGICO.MaxLength = 2147483647
            Me.columnLUGAR_EXAMEN_PSICOLOGICO.MaxLength = 2147483647
            Me.columnCARNET_CONADIS.MaxLength = 2147483647
            Me.columnDATOS_HIJOS.MaxLength = 2147483647
            Me.columnDATOS_ESPOSA.MaxLength = 2147483647
            Me.columnCASA.MaxLength = 2147483647
            Me.columnARRIENDO.MaxLength = 2147483647
            Me.columnDEUDOR_GARANTE.MaxLength = 2147483647
            Me.columnA_QUIEN_ADEUDA.MaxLength = 2147483647
            Me.columnTRABAJO_ATERIORMENTE.MaxLength = 2147483647
            Me.columnANTERIOR_TRABAJO.MaxLength = 2147483647
            Me.columnCARGO_ANTERIOR_TRABAJO.MaxLength = 2147483647
            Me.columnMOTIVO_SALIDA_TRABAJO.MaxLength = 2147483647
            Me.columnNOMBRES_PATRONO_ANTERIOR.MaxLength = 2147483647
            Me.columnTELEFONO_PATRONO_ANTERIOR.MaxLength = 2147483647
            Me.columnRECOMENDACIONES.MaxLength = 2147483647
            Me.columnDATOS_FAMILIARES.MaxLength = 2147483647
            Me.columnDATOS_EMERGENCIA.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPERSONALRow() As PERSONALRow
            Return CType(Me.NewRow,PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PERSONALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PERSONALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PERSONALRowChangedEvent) Is Nothing) Then
                RaiseEvent PERSONALRowChanged(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PERSONALRowChangingEvent) Is Nothing) Then
                RaiseEvent PERSONALRowChanging(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PERSONALRowDeletedEvent) Is Nothing) Then
                RaiseEvent PERSONALRowDeleted(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PERSONALRowDeletingEvent) Is Nothing) Then
                RaiseEvent PERSONALRowDeleting(Me, New PERSONALRowChangeEvent(CType(e.Row,PERSONALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePERSONALRow(ByVal row As PERSONALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPersonal = New dsPersonal()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PERSONALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AREA_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableAREA_GENERAL As AREA_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAREA_GENERAL = CType(Me.Table,AREA_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_AREA_GENERAL() As Integer
            Get
                Return CType(Me(Me.tableAREA_GENERAL.ID_AREA_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tableAREA_GENERAL.ID_AREA_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableAREA_GENERAL.CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableAREA_GENERAL.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRE_AREA() As String
            Get
                Return CType(Me(Me.tableAREA_GENERAL.NOMBRE_AREAColumn),String)
            End Get
            Set
                Me(Me.tableAREA_GENERAL.NOMBRE_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_AREA() As Integer
            Get
                Return CType(Me(Me.tableAREA_GENERAL.ESTADO_AREAColumn),Integer)
            End Get
            Set
                Me(Me.tableAREA_GENERAL.ESTADO_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_GERENCIAS_GENERAL() As Integer
            Get
                Return CType(Me(Me.tableAREA_GENERAL.ID_GERENCIAS_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tableAREA_GENERAL.ID_GERENCIAS_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPERSONALRows() As PERSONALRow()
            If (Me.Table.ChildRelations("FK_PERSONAL_AREA_GENERAL") Is Nothing) Then
                Return New PERSONALRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PERSONAL_AREA_GENERAL")),PERSONALRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CARGO_OCUPACIONALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCARGO_OCUPACIONAL As CARGO_OCUPACIONALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCARGO_OCUPACIONAL = CType(Me.Table,CARGO_OCUPACIONALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CARGO_OCUPACIONAL() As Integer
            Get
                Return CType(Me(Me.tableCARGO_OCUPACIONAL.ID_CARGO_OCUPACIONALColumn),Integer)
            End Get
            Set
                Me(Me.tableCARGO_OCUPACIONAL.ID_CARGO_OCUPACIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableCARGO_OCUPACIONAL.CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableCARGO_OCUPACIONAL.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableCARGO_OCUPACIONAL.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableCARGO_OCUPACIONAL.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO() As Integer
            Get
                Return CType(Me(Me.tableCARGO_OCUPACIONAL.ESTADOColumn),Integer)
            End Get
            Set
                Me(Me.tableCARGO_OCUPACIONAL.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_SERIE_OCUPACIONAL() As Integer
            Get
                Return CType(Me(Me.tableCARGO_OCUPACIONAL.ID_SERIE_OCUPACIONALColumn),Integer)
            End Get
            Set
                Me(Me.tableCARGO_OCUPACIONAL.ID_SERIE_OCUPACIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPERSONALRows() As PERSONALRow()
            If (Me.Table.ChildRelations("FK_PERSONAL_CARGO_OCUPACIONAL") Is Nothing) Then
                Return New PERSONALRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PERSONAL_CARGO_OCUPACIONAL")),PERSONALRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PERSONALRow
        Inherits Global.System.Data.DataRow
        
        Private tablePERSONAL As PERSONALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePERSONAL = CType(Me.Table,PERSONALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CEDULA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.CEDULAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.CEDULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES() As String
            Get
                Return CType(Me(Me.tablePERSONAL.NOMBRESColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.NOMBRESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property APELLIDOS() As String
            Get
                Return CType(Me(Me.tablePERSONAL.APELLIDOSColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.APELLIDOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROVINCIA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PROVINCIAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.DIRECCIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_NACIMIENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_NACIMIENTO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SEXO() As String
            Get
                Return CType(Me(Me.tablePERSONAL.SEXOColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.SEXOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CIUDAD() As String
            Get
                Return CType(Me(Me.tablePERSONAL.CIUDADColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUELDO() As Decimal
            Get
                Return CType(Me(Me.tablePERSONAL.SUELDOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePERSONAL.SUELDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LIBRETA_MILITAR() As String
            Get
                Return CType(Me(Me.tablePERSONAL.LIBRETA_MILITARColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.LIBRETA_MILITARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_SANGRE() As String
            Get
                Return CType(Me(Me.tablePERSONAL.TIPO_SANGREColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.TIPO_SANGREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PASAPORTE() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PASAPORTEColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PASAPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PESO() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.PESOColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDAD() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.EDADColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.EDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRUEBA_ANTIDROGA() As String
            Get
                Return CType(Me(Me.tablePERSONAL.PRUEBA_ANTIDROGAColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.PRUEBA_ANTIDROGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_ENTRADA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_ENTRADAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENTRADA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_ENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_SALIDA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FECHA_SALIDAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_SALIDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FECHA_SALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_PERSONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ESTADO_PERSONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ESTADO_PERSONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_AREA() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_AREAColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CARGO_OCUPACIONAL() As Integer
            Get
                Return CType(Me(Me.tablePERSONAL.ID_CARGO_OCUPACIONALColumn),Integer)
            End Get
            Set
                Me(Me.tablePERSONAL.ID_CARGO_OCUPACIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UBICACION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.UBICACIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.UBICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INSTRUCCION() As String
            Get
                Return CType(Me(Me.tablePERSONAL.INSTRUCCIONColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.INSTRUCCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CIVIL() As String
            Get
                Return CType(Me(Me.tablePERSONAL.ESTADO_CIVILColumn),String)
            End Get
            Set
                Me(Me.tablePERSONAL.ESTADO_CIVILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOVIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.MOVILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MOVIL' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.MOVILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TELEFONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TELEFONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_HIJOS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD_HIJOS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HISTORIA_CLINICA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HISTORIA_CLINICA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PARROQUIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.PARROQUIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PARROQUIA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.PARROQUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTATURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ESTATURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTATURA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ESTATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DISCAPACIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DISCAPACIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DISCAPACIDAD' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DISCAPACIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXAMEN_PSICOLOGICO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXAMEN_PSICOLOGICO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LUGAR_EXAMEN_PSICOLOGICO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LUGAR_EXAMEN_PSICOLOGICO' de la tabla 'PERSONAL' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARNET_CONADIS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CARNET_CONADISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CARNET_CONADIS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CARNET_CONADISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_HIJOS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_HIJOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_HIJOS' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_HIJOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_ESPOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_ESPOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_ESPOSA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_ESPOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CASAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CASA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CASAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ARRIENDO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ARRIENDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ARRIENDO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ARRIENDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DEUDOR_GARANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEUDOR_GARANTE' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CANTIDAD_DEUDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD_DEUDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property A_QUIEN_ADEUDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'A_QUIEN_ADEUDA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRABAJO_ATERIORMENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TRABAJO_ATERIORMENTE' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ANTERIOR_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANTERIOR_TRABAJO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARGO_ANTERIOR_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CARGO_ANTERIOR_TRABAJO' de la tabla 'PERSONAL' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MOTIVO_SALIDA_TRABAJO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MOTIVO_SALIDA_TRABAJO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ENTRADA_ANTERIOR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENTRADA_ANTERIOR' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALIDA_ANTERIOR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALIDA_ANTERIOR' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMBRES_PATRONO_ANTERIOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRES_PATRONO_ANTERIOR' de la tabla 'PERSONAL' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_PATRONO_ANTERIOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_PATRONO_ANTERIOR' de la tabla 'PERSONAL' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RECOMENDACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.RECOMENDACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECOMENDACIONES' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.RECOMENDACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_FAMILIARES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_FAMILIARES' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DATOS_EMERGENCIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DATOS_EMERGENCIA' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FOTO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.FOTOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FOTO' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.FOTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFIL() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePERSONAL.PERFILColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PERFIL' de la tabla 'PERSONAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERSONAL.PERFILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AREA_GENERALRow() As AREA_GENERALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PERSONAL_AREA_GENERAL")),AREA_GENERALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PERSONAL_AREA_GENERAL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARGO_OCUPACIONALRow() As CARGO_OCUPACIONALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PERSONAL_CARGO_OCUPACIONAL")),CARGO_OCUPACIONALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PERSONAL_CARGO_OCUPACIONAL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_NACIMIENTONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_NACIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_NACIMIENTONull()
            Me(Me.tablePERSONAL.FECHA_NACIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_ENTRADANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_ENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_ENTRADANull()
            Me(Me.tablePERSONAL.FECHA_ENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_SALIDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FECHA_SALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_SALIDANull()
            Me(Me.tablePERSONAL.FECHA_SALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMOVILNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.MOVILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMOVILNull()
            Me(Me.tablePERSONAL.MOVILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TELEFONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONONull()
            Me(Me.tablePERSONAL.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCANTIDAD_HIJOSNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CANTIDAD_HIJOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCANTIDAD_HIJOSNull()
            Me(Me.tablePERSONAL.CANTIDAD_HIJOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHISTORIA_CLINICANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.HISTORIA_CLINICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHISTORIA_CLINICANull()
            Me(Me.tablePERSONAL.HISTORIA_CLINICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPARROQUIANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.PARROQUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPARROQUIANull()
            Me(Me.tablePERSONAL.PARROQUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsESTATURANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ESTATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetESTATURANull()
            Me(Me.tablePERSONAL.ESTATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDISCAPACIDADNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DISCAPACIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDISCAPACIDADNull()
            Me(Me.tablePERSONAL.DISCAPACIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXAMEN_PSICOLOGICONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXAMEN_PSICOLOGICONull()
            Me(Me.tablePERSONAL.EXAMEN_PSICOLOGICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLUGAR_EXAMEN_PSICOLOGICONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLUGAR_EXAMEN_PSICOLOGICONull()
            Me(Me.tablePERSONAL.LUGAR_EXAMEN_PSICOLOGICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARNET_CONADISNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CARNET_CONADISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARNET_CONADISNull()
            Me(Me.tablePERSONAL.CARNET_CONADISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_HIJOSNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_HIJOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_HIJOSNull()
            Me(Me.tablePERSONAL.DATOS_HIJOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_ESPOSANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_ESPOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_ESPOSANull()
            Me(Me.tablePERSONAL.DATOS_ESPOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CASAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASANull()
            Me(Me.tablePERSONAL.CASAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsARRIENDONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ARRIENDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetARRIENDONull()
            Me(Me.tablePERSONAL.ARRIENDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDEUDOR_GARANTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DEUDOR_GARANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDEUDOR_GARANTENull()
            Me(Me.tablePERSONAL.DEUDOR_GARANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCANTIDAD_DEUDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CANTIDAD_DEUDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCANTIDAD_DEUDANull()
            Me(Me.tablePERSONAL.CANTIDAD_DEUDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsA_QUIEN_ADEUDANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetA_QUIEN_ADEUDANull()
            Me(Me.tablePERSONAL.A_QUIEN_ADEUDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRABAJO_ATERIORMENTENull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRABAJO_ATERIORMENTENull()
            Me(Me.tablePERSONAL.TRABAJO_ATERIORMENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsANTERIOR_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetANTERIOR_TRABAJONull()
            Me(Me.tablePERSONAL.ANTERIOR_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARGO_ANTERIOR_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARGO_ANTERIOR_TRABAJONull()
            Me(Me.tablePERSONAL.CARGO_ANTERIOR_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMOTIVO_SALIDA_TRABAJONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMOTIVO_SALIDA_TRABAJONull()
            Me(Me.tablePERSONAL.MOTIVO_SALIDA_TRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsENTRADA_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.ENTRADA_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetENTRADA_ANTERIORNull()
            Me(Me.tablePERSONAL.ENTRADA_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSALIDA_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.SALIDA_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSALIDA_ANTERIORNull()
            Me(Me.tablePERSONAL.SALIDA_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOMBRES_PATRONO_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOMBRES_PATRONO_ANTERIORNull()
            Me(Me.tablePERSONAL.NOMBRES_PATRONO_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_PATRONO_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_PATRONO_ANTERIORNull()
            Me(Me.tablePERSONAL.TELEFONO_PATRONO_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRECOMENDACIONESNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.RECOMENDACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRECOMENDACIONESNull()
            Me(Me.tablePERSONAL.RECOMENDACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_FAMILIARESNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_FAMILIARESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_FAMILIARESNull()
            Me(Me.tablePERSONAL.DATOS_FAMILIARESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDATOS_EMERGENCIANull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.DATOS_EMERGENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDATOS_EMERGENCIANull()
            Me(Me.tablePERSONAL.DATOS_EMERGENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFOTONull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.FOTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFOTONull()
            Me(Me.tablePERSONAL.FOTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFILNull() As Boolean
            Return Me.IsNull(Me.tablePERSONAL.PERFILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFILNull()
            Me(Me.tablePERSONAL.PERFILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class AREA_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AREA_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As AREA_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As AREA_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CARGO_OCUPACIONALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CARGO_OCUPACIONALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CARGO_OCUPACIONALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CARGO_OCUPACIONALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PERSONALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PERSONALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PERSONALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PERSONALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsPersonalTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AREA_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AREA_GENERAL"
            tableMapping.ColumnMappings.Add("ID_AREA_GENERAL", "ID_AREA_GENERAL")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("NOMBRE_AREA", "NOMBRE_AREA")
            tableMapping.ColumnMappings.Add("ESTADO_AREA", "ESTADO_AREA")
            tableMapping.ColumnMappings.Add("ID_GERENCIAS_GENERAL", "ID_GERENCIAS_GENERAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AREA_GENERAL] WHERE (([ID_AREA_GENERAL] = @Original_ID_AREA_GE"& _ 
                "NERAL) AND ([ESTADO_AREA] = @Original_ESTADO_AREA) AND ([ID_GERENCIAS_GENERAL] ="& _ 
                " @Original_ID_GERENCIAS_GENERAL))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GERENCIAS_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AREA_GENERAL] ([ID_AREA_GENERAL], [CODIGO], [NOMBRE_AREA], [ES"& _ 
                "TADO_AREA], [ID_GERENCIAS_GENERAL]) VALUES (@ID_AREA_GENERAL, @CODIGO, @NOMBRE_A"& _ 
                "REA, @ESTADO_AREA, @ID_GERENCIAS_GENERAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_AREA_GENERAL, CODIGO, NOMB"& _ 
                "RE_AREA, ESTADO_AREA, ID_GERENCIAS_GENERAL FROM AREA_GENERAL WHERE (ID_AREA_GENE"& _ 
                "RAL = @ID_AREA_GENERAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_AREA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GERENCIAS_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AREA_GENERAL] SET [ID_AREA_GENERAL] = @ID_AREA_GENERAL, [CODIGO] = "& _ 
                "@CODIGO, [NOMBRE_AREA] = @NOMBRE_AREA, [ESTADO_AREA] = @ESTADO_AREA, [ID_GERENCI"& _ 
                "AS_GENERAL] = @ID_GERENCIAS_GENERAL WHERE (([ID_AREA_GENERAL] = @Original_ID_ARE"& _ 
                "A_GENERAL) AND ([ESTADO_AREA] = @Original_ESTADO_AREA) AND ([ID_GERENCIAS_GENERA"& _ 
                "L] = @Original_ID_GERENCIAS_GENERAL));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_AREA_GENERAL, CODIGO, NOMBRE_A"& _ 
                "REA, ESTADO_AREA, ID_GERENCIAS_GENERAL FROM AREA_GENERAL WHERE (ID_AREA_GENERAL "& _ 
                "= @ID_AREA_GENERAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE_AREA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_GERENCIAS_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_GERENCIAS_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_GERENCIAS_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_AREA_GENERAL, CODIGO, NOMBRE_AREA, ESTADO_AREA, ID_GERENCIAS_GENERAL FR"& _ 
                "OM dbo.AREA_GENERAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPersonal.AREA_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPersonal.AREA_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPersonal.AREA_GENERALDataTable = New dsPersonal.AREA_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPersonal.AREA_GENERALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPersonal) As Integer
            Return Me.Adapter.Update(dataSet, "AREA_GENERAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_AREA_GENERAL As Integer, ByVal Original_ESTADO_AREA As Integer, ByVal Original_ID_GERENCIAS_GENERAL As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_AREA_GENERAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO_AREA,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_GERENCIAS_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_AREA_GENERAL As Integer, ByVal CODIGO As String, ByVal NOMBRE_AREA As String, ByVal ESTADO_AREA As Integer, ByVal ID_GERENCIAS_GENERAL As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_AREA_GENERAL,Integer)
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO,String)
            End If
            If (NOMBRE_AREA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_AREA")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRE_AREA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ESTADO_AREA,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_GERENCIAS_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_AREA_GENERAL As Integer, ByVal CODIGO As String, ByVal NOMBRE_AREA As String, ByVal ESTADO_AREA As Integer, ByVal ID_GERENCIAS_GENERAL As Integer, ByVal Original_ID_AREA_GENERAL As Integer, ByVal Original_ESTADO_AREA As Integer, ByVal Original_ID_GERENCIAS_GENERAL As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_AREA_GENERAL,Integer)
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO,String)
            End If
            If (NOMBRE_AREA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRE_AREA")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRE_AREA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ESTADO_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_GERENCIAS_GENERAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_AREA_GENERAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ESTADO_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ID_GERENCIAS_GENERAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO As String, ByVal NOMBRE_AREA As String, ByVal ESTADO_AREA As Integer, ByVal ID_GERENCIAS_GENERAL As Integer, ByVal Original_ID_AREA_GENERAL As Integer, ByVal Original_ESTADO_AREA As Integer, ByVal Original_ID_GERENCIAS_GENERAL As Integer) As Integer
            Return Me.Update(Original_ID_AREA_GENERAL, CODIGO, NOMBRE_AREA, ESTADO_AREA, ID_GERENCIAS_GENERAL, Original_ID_AREA_GENERAL, Original_ESTADO_AREA, Original_ID_GERENCIAS_GENERAL)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CARGO_OCUPACIONALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CARGO_OCUPACIONAL"
            tableMapping.ColumnMappings.Add("ID_CARGO_OCUPACIONAL", "ID_CARGO_OCUPACIONAL")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("ID_SERIE_OCUPACIONAL", "ID_SERIE_OCUPACIONAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CARGO_OCUPACIONAL] WHERE (([ID_CARGO_OCUPACIONAL] = @Original_"& _ 
                "ID_CARGO_OCUPACIONAL) AND ([ESTADO] = @Original_ESTADO) AND ([ID_SERIE_OCUPACION"& _ 
                "AL] = @Original_ID_SERIE_OCUPACIONAL))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SERIE_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SERIE_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CARGO_OCUPACIONAL] ([ID_CARGO_OCUPACIONAL], [CODIGO], [DESCRIP"& _ 
                "CION], [ESTADO], [ID_SERIE_OCUPACIONAL]) VALUES (@ID_CARGO_OCUPACIONAL, @CODIGO,"& _ 
                " @DESCRIPCION, @ESTADO, @ID_SERIE_OCUPACIONAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CARGO_OCUPACIONAL, CO"& _ 
                "DIGO, DESCRIPCION, ESTADO, ID_SERIE_OCUPACIONAL FROM CARGO_OCUPACIONAL WHERE (ID"& _ 
                "_CARGO_OCUPACIONAL = @ID_CARGO_OCUPACIONAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SERIE_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SERIE_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CARGO_OCUPACIONAL] SET [ID_CARGO_OCUPACIONAL] = @ID_CARGO_OCUPACION"& _ 
                "AL, [CODIGO] = @CODIGO, [DESCRIPCION] = @DESCRIPCION, [ESTADO] = @ESTADO, [ID_SE"& _ 
                "RIE_OCUPACIONAL] = @ID_SERIE_OCUPACIONAL WHERE (([ID_CARGO_OCUPACIONAL] = @Origi"& _ 
                "nal_ID_CARGO_OCUPACIONAL) AND ([ESTADO] = @Original_ESTADO) AND ([ID_SERIE_OCUPA"& _ 
                "CIONAL] = @Original_ID_SERIE_OCUPACIONAL));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CARGO_OCUPACIONAL, CODIGO"& _ 
                ", DESCRIPCION, ESTADO, ID_SERIE_OCUPACIONAL FROM CARGO_OCUPACIONAL WHERE (ID_CAR"& _ 
                "GO_OCUPACIONAL = @ID_CARGO_OCUPACIONAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_SERIE_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SERIE_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_SERIE_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_SERIE_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CARGO_OCUPACIONAL, CODIGO, DESCRIPCION, ESTADO, ID_SERIE_OCUPACIONAL FR"& _ 
                "OM dbo.CARGO_OCUPACIONAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPersonal.CARGO_OCUPACIONALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPersonal.CARGO_OCUPACIONALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPersonal.CARGO_OCUPACIONALDataTable = New dsPersonal.CARGO_OCUPACIONALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPersonal.CARGO_OCUPACIONALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPersonal) As Integer
            Return Me.Adapter.Update(dataSet, "CARGO_OCUPACIONAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CARGO_OCUPACIONAL As Integer, ByVal Original_ESTADO As Integer, ByVal Original_ID_SERIE_OCUPACIONAL As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ESTADO,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID_SERIE_OCUPACIONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID_CARGO_OCUPACIONAL As Integer, ByVal CODIGO As String, ByVal DESCRIPCION As String, ByVal ESTADO As Integer, ByVal ID_SERIE_OCUPACIONAL As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO,String)
            End If
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ESTADO,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ID_SERIE_OCUPACIONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID_CARGO_OCUPACIONAL As Integer, ByVal CODIGO As String, ByVal DESCRIPCION As String, ByVal ESTADO As Integer, ByVal ID_SERIE_OCUPACIONAL As Integer, ByVal Original_ID_CARGO_OCUPACIONAL As Integer, ByVal Original_ESTADO As Integer, ByVal Original_ID_SERIE_OCUPACIONAL As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO,String)
            End If
            If (DESCRIPCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DESCRIPCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCRIPCION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ESTADO,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ID_SERIE_OCUPACIONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ESTADO,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ID_SERIE_OCUPACIONAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO As String, ByVal DESCRIPCION As String, ByVal ESTADO As Integer, ByVal ID_SERIE_OCUPACIONAL As Integer, ByVal Original_ID_CARGO_OCUPACIONAL As Integer, ByVal Original_ESTADO As Integer, ByVal Original_ID_SERIE_OCUPACIONAL As Integer) As Integer
            Return Me.Update(Original_ID_CARGO_OCUPACIONAL, CODIGO, DESCRIPCION, ESTADO, ID_SERIE_OCUPACIONAL, Original_ID_CARGO_OCUPACIONAL, Original_ESTADO, Original_ID_SERIE_OCUPACIONAL)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PERSONALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PERSONAL"
            tableMapping.ColumnMappings.Add("ID_PERSONAL", "ID_PERSONAL")
            tableMapping.ColumnMappings.Add("CEDULA", "CEDULA")
            tableMapping.ColumnMappings.Add("NOMBRES", "NOMBRES")
            tableMapping.ColumnMappings.Add("APELLIDOS", "APELLIDOS")
            tableMapping.ColumnMappings.Add("PROVINCIA", "PROVINCIA")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("FECHA_NACIMIENTO", "FECHA_NACIMIENTO")
            tableMapping.ColumnMappings.Add("SEXO", "SEXO")
            tableMapping.ColumnMappings.Add("CIUDAD", "CIUDAD")
            tableMapping.ColumnMappings.Add("SUELDO", "SUELDO")
            tableMapping.ColumnMappings.Add("LIBRETA_MILITAR", "LIBRETA_MILITAR")
            tableMapping.ColumnMappings.Add("TIPO_SANGRE", "TIPO_SANGRE")
            tableMapping.ColumnMappings.Add("PASAPORTE", "PASAPORTE")
            tableMapping.ColumnMappings.Add("PESO", "PESO")
            tableMapping.ColumnMappings.Add("EDAD", "EDAD")
            tableMapping.ColumnMappings.Add("PRUEBA_ANTIDROGA", "PRUEBA_ANTIDROGA")
            tableMapping.ColumnMappings.Add("FECHA_ENTRADA", "FECHA_ENTRADA")
            tableMapping.ColumnMappings.Add("FECHA_SALIDA", "FECHA_SALIDA")
            tableMapping.ColumnMappings.Add("ESTADO_PERSONAL", "ESTADO_PERSONAL")
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA")
            tableMapping.ColumnMappings.Add("ID_CARGO_OCUPACIONAL", "ID_CARGO_OCUPACIONAL")
            tableMapping.ColumnMappings.Add("UBICACION", "UBICACION")
            tableMapping.ColumnMappings.Add("INSTRUCCION", "INSTRUCCION")
            tableMapping.ColumnMappings.Add("ESTADO_CIVIL", "ESTADO_CIVIL")
            tableMapping.ColumnMappings.Add("MOVIL", "MOVIL")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CANTIDAD_HIJOS", "CANTIDAD_HIJOS")
            tableMapping.ColumnMappings.Add("HISTORIA_CLINICA", "HISTORIA_CLINICA")
            tableMapping.ColumnMappings.Add("PARROQUIA", "PARROQUIA")
            tableMapping.ColumnMappings.Add("ESTATURA", "ESTATURA")
            tableMapping.ColumnMappings.Add("DISCAPACIDAD", "DISCAPACIDAD")
            tableMapping.ColumnMappings.Add("EXAMEN_PSICOLOGICO", "EXAMEN_PSICOLOGICO")
            tableMapping.ColumnMappings.Add("LUGAR_EXAMEN_PSICOLOGICO", "LUGAR_EXAMEN_PSICOLOGICO")
            tableMapping.ColumnMappings.Add("CARNET_CONADIS", "CARNET_CONADIS")
            tableMapping.ColumnMappings.Add("DATOS_HIJOS", "DATOS_HIJOS")
            tableMapping.ColumnMappings.Add("DATOS_ESPOSA", "DATOS_ESPOSA")
            tableMapping.ColumnMappings.Add("CASA", "CASA")
            tableMapping.ColumnMappings.Add("ARRIENDO", "ARRIENDO")
            tableMapping.ColumnMappings.Add("DEUDOR_GARANTE", "DEUDOR_GARANTE")
            tableMapping.ColumnMappings.Add("CANTIDAD_DEUDA", "CANTIDAD_DEUDA")
            tableMapping.ColumnMappings.Add("A_QUIEN_ADEUDA", "A_QUIEN_ADEUDA")
            tableMapping.ColumnMappings.Add("TRABAJO_ATERIORMENTE", "TRABAJO_ATERIORMENTE")
            tableMapping.ColumnMappings.Add("ANTERIOR_TRABAJO", "ANTERIOR_TRABAJO")
            tableMapping.ColumnMappings.Add("CARGO_ANTERIOR_TRABAJO", "CARGO_ANTERIOR_TRABAJO")
            tableMapping.ColumnMappings.Add("MOTIVO_SALIDA_TRABAJO", "MOTIVO_SALIDA_TRABAJO")
            tableMapping.ColumnMappings.Add("ENTRADA_ANTERIOR", "ENTRADA_ANTERIOR")
            tableMapping.ColumnMappings.Add("SALIDA_ANTERIOR", "SALIDA_ANTERIOR")
            tableMapping.ColumnMappings.Add("NOMBRES_PATRONO_ANTERIOR", "NOMBRES_PATRONO_ANTERIOR")
            tableMapping.ColumnMappings.Add("TELEFONO_PATRONO_ANTERIOR", "TELEFONO_PATRONO_ANTERIOR")
            tableMapping.ColumnMappings.Add("RECOMENDACIONES", "RECOMENDACIONES")
            tableMapping.ColumnMappings.Add("DATOS_FAMILIARES", "DATOS_FAMILIARES")
            tableMapping.ColumnMappings.Add("DATOS_EMERGENCIA", "DATOS_EMERGENCIA")
            tableMapping.ColumnMappings.Add("FOTO", "FOTO")
            tableMapping.ColumnMappings.Add("PERFIL", "PERFIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PERSONAL] WHERE (([ID_PERSONAL] = @Original_ID_PERSONAL) AND ("& _ 
                "[CEDULA] = @Original_CEDULA) AND ((@IsNull_FECHA_NACIMIENTO = 1 AND [FECHA_NACIM"& _ 
                "IENTO] IS NULL) OR ([FECHA_NACIMIENTO] = @Original_FECHA_NACIMIENTO)) AND ([SEXO"& _ 
                "] = @Original_SEXO) AND ([SUELDO] = @Original_SUELDO) AND ([LIBRETA_MILITAR] = @"& _ 
                "Original_LIBRETA_MILITAR) AND ([TIPO_SANGRE] = @Original_TIPO_SANGRE) AND ([PASA"& _ 
                "PORTE] = @Original_PASAPORTE) AND ([PESO] = @Original_PESO) AND ([EDAD] = @Origi"& _ 
                "nal_EDAD) AND ([PRUEBA_ANTIDROGA] = @Original_PRUEBA_ANTIDROGA) AND ((@IsNull_FE"& _ 
                "CHA_ENTRADA = 1 AND [FECHA_ENTRADA] IS NULL) OR ([FECHA_ENTRADA] = @Original_FEC"& _ 
                "HA_ENTRADA)) AND ((@IsNull_FECHA_SALIDA = 1 AND [FECHA_SALIDA] IS NULL) OR ([FEC"& _ 
                "HA_SALIDA] = @Original_FECHA_SALIDA)) AND ([ESTADO_PERSONAL] = @Original_ESTADO_"& _ 
                "PERSONAL) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_CARGO_OCUPACIONAL] = @Ori"& _ 
                "ginal_ID_CARGO_OCUPACIONAL) AND ([ESTADO_CIVIL] = @Original_ESTADO_CIVIL) AND (("& _ 
                "@IsNull_CANTIDAD_HIJOS = 1 AND [CANTIDAD_HIJOS] IS NULL) OR ([CANTIDAD_HIJOS] = "& _ 
                "@Original_CANTIDAD_HIJOS)) AND ((@IsNull_ESTATURA = 1 AND [ESTATURA] IS NULL) OR"& _ 
                " ([ESTATURA] = @Original_ESTATURA)) AND ((@IsNull_CANTIDAD_DEUDA = 1 AND [CANTID"& _ 
                "AD_DEUDA] IS NULL) OR ([CANTIDAD_DEUDA] = @Original_CANTIDAD_DEUDA)) AND ((@IsNu"& _ 
                "ll_ENTRADA_ANTERIOR = 1 AND [ENTRADA_ANTERIOR] IS NULL) OR ([ENTRADA_ANTERIOR] ="& _ 
                " @Original_ENTRADA_ANTERIOR)) AND ((@IsNull_SALIDA_ANTERIOR = 1 AND [SALIDA_ANTE"& _ 
                "RIOR] IS NULL) OR ([SALIDA_ANTERIOR] = @Original_SALIDA_ANTERIOR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_ENTRADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_SALIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTATURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTATURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PERSONAL] ([ID_PERSONAL], [CEDULA], [NOMBRES], [APELLIDOS], [P"& _ 
                "ROVINCIA], [DIRECCION], [FECHA_NACIMIENTO], [SEXO], [CIUDAD], [SUELDO], [LIBRETA"& _ 
                "_MILITAR], [TIPO_SANGRE], [PASAPORTE], [PESO], [EDAD], [PRUEBA_ANTIDROGA], [FECH"& _ 
                "A_ENTRADA], [FECHA_SALIDA], [ESTADO_PERSONAL], [ID_AREA], [ID_CARGO_OCUPACIONAL]"& _ 
                ", [UBICACION], [INSTRUCCION], [ESTADO_CIVIL], [MOVIL], [TELEFONO], [CANTIDAD_HIJ"& _ 
                "OS], [HISTORIA_CLINICA], [PARROQUIA], [ESTATURA], [DISCAPACIDAD], [EXAMEN_PSICOL"& _ 
                "OGICO], [LUGAR_EXAMEN_PSICOLOGICO], [CARNET_CONADIS], [DATOS_HIJOS], [DATOS_ESPO"& _ 
                "SA], [CASA], [ARRIENDO], [DEUDOR_GARANTE], [CANTIDAD_DEUDA], [A_QUIEN_ADEUDA], ["& _ 
                "TRABAJO_ATERIORMENTE], [ANTERIOR_TRABAJO], [CARGO_ANTERIOR_TRABAJO], [MOTIVO_SAL"& _ 
                "IDA_TRABAJO], [ENTRADA_ANTERIOR], [SALIDA_ANTERIOR], [NOMBRES_PATRONO_ANTERIOR],"& _ 
                " [TELEFONO_PATRONO_ANTERIOR], [RECOMENDACIONES], [DATOS_FAMILIARES], [DATOS_EMER"& _ 
                "GENCIA], [FOTO], [PERFIL]) VALUES (@ID_PERSONAL, @CEDULA, @NOMBRES, @APELLIDOS, "& _ 
                "@PROVINCIA, @DIRECCION, @FECHA_NACIMIENTO, @SEXO, @CIUDAD, @SUELDO, @LIBRETA_MIL"& _ 
                "ITAR, @TIPO_SANGRE, @PASAPORTE, @PESO, @EDAD, @PRUEBA_ANTIDROGA, @FECHA_ENTRADA,"& _ 
                " @FECHA_SALIDA, @ESTADO_PERSONAL, @ID_AREA, @ID_CARGO_OCUPACIONAL, @UBICACION, @"& _ 
                "INSTRUCCION, @ESTADO_CIVIL, @MOVIL, @TELEFONO, @CANTIDAD_HIJOS, @HISTORIA_CLINIC"& _ 
                "A, @PARROQUIA, @ESTATURA, @DISCAPACIDAD, @EXAMEN_PSICOLOGICO, @LUGAR_EXAMEN_PSIC"& _ 
                "OLOGICO, @CARNET_CONADIS, @DATOS_HIJOS, @DATOS_ESPOSA, @CASA, @ARRIENDO, @DEUDOR"& _ 
                "_GARANTE, @CANTIDAD_DEUDA, @A_QUIEN_ADEUDA, @TRABAJO_ATERIORMENTE, @ANTERIOR_TRA"& _ 
                "BAJO, @CARGO_ANTERIOR_TRABAJO, @MOTIVO_SALIDA_TRABAJO, @ENTRADA_ANTERIOR, @SALID"& _ 
                "A_ANTERIOR, @NOMBRES_PATRONO_ANTERIOR, @TELEFONO_PATRONO_ANTERIOR, @RECOMENDACIO"& _ 
                "NES, @DATOS_FAMILIARES, @DATOS_EMERGENCIA, @FOTO, @PERFIL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PERSONAL,"& _ 
                " CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDA"& _ 
                "D, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA"& _ 
                ", FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL, U"& _ 
                "BICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_C"& _ 
                "LINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSIC"& _ 
                "OLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARAN"& _ 
                "TE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARG"& _ 
                "O_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NO"& _ 
                "MBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILI"& _ 
                "ARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM PERSONAL WHERE (ID_PERSONAL = @ID_PERS"& _ 
                "ONAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UBICACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UBICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSTRUCCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSTRUCCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HISTORIA_CLINICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HISTORIA_CLINICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISCAPACIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISCAPACIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARNET_CONADIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARNET_CONADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_HIJOS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_ESPOSA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_ESPOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARRIENDO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARRIENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDOR_GARANTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDOR_GARANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_QUIEN_ADEUDA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_QUIEN_ADEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABAJO_ATERIORMENTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABAJO_ATERIORMENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARGO_ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARGO_ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_SALIDA_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_SALIDA_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECOMENDACIONES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECOMENDACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_FAMILIARES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_FAMILIARES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_EMERGENCIA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_EMERGENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOTO", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFIL", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PERSONAL] SET [ID_PERSONAL] = @ID_PERSONAL, [CEDULA] = @CEDULA, [NO"& _ 
                "MBRES] = @NOMBRES, [APELLIDOS] = @APELLIDOS, [PROVINCIA] = @PROVINCIA, [DIRECCIO"& _ 
                "N] = @DIRECCION, [FECHA_NACIMIENTO] = @FECHA_NACIMIENTO, [SEXO] = @SEXO, [CIUDAD"& _ 
                "] = @CIUDAD, [SUELDO] = @SUELDO, [LIBRETA_MILITAR] = @LIBRETA_MILITAR, [TIPO_SAN"& _ 
                "GRE] = @TIPO_SANGRE, [PASAPORTE] = @PASAPORTE, [PESO] = @PESO, [EDAD] = @EDAD, ["& _ 
                "PRUEBA_ANTIDROGA] = @PRUEBA_ANTIDROGA, [FECHA_ENTRADA] = @FECHA_ENTRADA, [FECHA_"& _ 
                "SALIDA] = @FECHA_SALIDA, [ESTADO_PERSONAL] = @ESTADO_PERSONAL, [ID_AREA] = @ID_A"& _ 
                "REA, [ID_CARGO_OCUPACIONAL] = @ID_CARGO_OCUPACIONAL, [UBICACION] = @UBICACION, ["& _ 
                "INSTRUCCION] = @INSTRUCCION, [ESTADO_CIVIL] = @ESTADO_CIVIL, [MOVIL] = @MOVIL, ["& _ 
                "TELEFONO] = @TELEFONO, [CANTIDAD_HIJOS] = @CANTIDAD_HIJOS, [HISTORIA_CLINICA] = "& _ 
                "@HISTORIA_CLINICA, [PARROQUIA] = @PARROQUIA, [ESTATURA] = @ESTATURA, [DISCAPACID"& _ 
                "AD] = @DISCAPACIDAD, [EXAMEN_PSICOLOGICO] = @EXAMEN_PSICOLOGICO, [LUGAR_EXAMEN_P"& _ 
                "SICOLOGICO] = @LUGAR_EXAMEN_PSICOLOGICO, [CARNET_CONADIS] = @CARNET_CONADIS, [DA"& _ 
                "TOS_HIJOS] = @DATOS_HIJOS, [DATOS_ESPOSA] = @DATOS_ESPOSA, [CASA] = @CASA, [ARRI"& _ 
                "ENDO] = @ARRIENDO, [DEUDOR_GARANTE] = @DEUDOR_GARANTE, [CANTIDAD_DEUDA] = @CANTI"& _ 
                "DAD_DEUDA, [A_QUIEN_ADEUDA] = @A_QUIEN_ADEUDA, [TRABAJO_ATERIORMENTE] = @TRABAJO"& _ 
                "_ATERIORMENTE, [ANTERIOR_TRABAJO] = @ANTERIOR_TRABAJO, [CARGO_ANTERIOR_TRABAJO] "& _ 
                "= @CARGO_ANTERIOR_TRABAJO, [MOTIVO_SALIDA_TRABAJO] = @MOTIVO_SALIDA_TRABAJO, [EN"& _ 
                "TRADA_ANTERIOR] = @ENTRADA_ANTERIOR, [SALIDA_ANTERIOR] = @SALIDA_ANTERIOR, [NOMB"& _ 
                "RES_PATRONO_ANTERIOR] = @NOMBRES_PATRONO_ANTERIOR, [TELEFONO_PATRONO_ANTERIOR] ="& _ 
                " @TELEFONO_PATRONO_ANTERIOR, [RECOMENDACIONES] = @RECOMENDACIONES, [DATOS_FAMILI"& _ 
                "ARES] = @DATOS_FAMILIARES, [DATOS_EMERGENCIA] = @DATOS_EMERGENCIA, [FOTO] = @FOT"& _ 
                "O, [PERFIL] = @PERFIL WHERE (([ID_PERSONAL] = @Original_ID_PERSONAL) AND ([CEDUL"& _ 
                "A] = @Original_CEDULA) AND ((@IsNull_FECHA_NACIMIENTO = 1 AND [FECHA_NACIMIENTO]"& _ 
                " IS NULL) OR ([FECHA_NACIMIENTO] = @Original_FECHA_NACIMIENTO)) AND ([SEXO] = @O"& _ 
                "riginal_SEXO) AND ([SUELDO] = @Original_SUELDO) AND ([LIBRETA_MILITAR] = @Origin"& _ 
                "al_LIBRETA_MILITAR) AND ([TIPO_SANGRE] = @Original_TIPO_SANGRE) AND ([PASAPORTE]"& _ 
                " = @Original_PASAPORTE) AND ([PESO] = @Original_PESO) AND ([EDAD] = @Original_ED"& _ 
                "AD) AND ([PRUEBA_ANTIDROGA] = @Original_PRUEBA_ANTIDROGA) AND ((@IsNull_FECHA_EN"& _ 
                "TRADA = 1 AND [FECHA_ENTRADA] IS NULL) OR ([FECHA_ENTRADA] = @Original_FECHA_ENT"& _ 
                "RADA)) AND ((@IsNull_FECHA_SALIDA = 1 AND [FECHA_SALIDA] IS NULL) OR ([FECHA_SAL"& _ 
                "IDA] = @Original_FECHA_SALIDA)) AND ([ESTADO_PERSONAL] = @Original_ESTADO_PERSON"& _ 
                "AL) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_CARGO_OCUPACIONAL] = @Original_"& _ 
                "ID_CARGO_OCUPACIONAL) AND ([ESTADO_CIVIL] = @Original_ESTADO_CIVIL) AND ((@IsNul"& _ 
                "l_CANTIDAD_HIJOS = 1 AND [CANTIDAD_HIJOS] IS NULL) OR ([CANTIDAD_HIJOS] = @Origi"& _ 
                "nal_CANTIDAD_HIJOS)) AND ((@IsNull_ESTATURA = 1 AND [ESTATURA] IS NULL) OR ([EST"& _ 
                "ATURA] = @Original_ESTATURA)) AND ((@IsNull_CANTIDAD_DEUDA = 1 AND [CANTIDAD_DEU"& _ 
                "DA] IS NULL) OR ([CANTIDAD_DEUDA] = @Original_CANTIDAD_DEUDA)) AND ((@IsNull_ENT"& _ 
                "RADA_ANTERIOR = 1 AND [ENTRADA_ANTERIOR] IS NULL) OR ([ENTRADA_ANTERIOR] = @Orig"& _ 
                "inal_ENTRADA_ANTERIOR)) AND ((@IsNull_SALIDA_ANTERIOR = 1 AND [SALIDA_ANTERIOR] "& _ 
                "IS NULL) OR ([SALIDA_ANTERIOR] = @Original_SALIDA_ANTERIOR)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_PERSON"& _ 
                "AL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CI"& _ 
                "UDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDR"& _ 
                "OGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL"& _ 
                ", UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORI"& _ 
                "A_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_P"& _ 
                "SICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GA"& _ 
                "RANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, C"& _ 
                "ARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR,"& _ 
                " NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAM"& _ 
                "ILIARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM PERSONAL WHERE (ID_PERSONAL = @ID_P"& _ 
                "ERSONAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROVINCIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROVINCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIUDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UBICACION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UBICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSTRUCCION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSTRUCCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOVIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HISTORIA_CLINICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HISTORIA_CLINICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARROQUIA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARROQUIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISCAPACIDAD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISCAPACIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUGAR_EXAMEN_PSICOLOGICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARNET_CONADIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARNET_CONADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_HIJOS", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_HIJOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_ESPOSA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_ESPOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARRIENDO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARRIENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDOR_GARANTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDOR_GARANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@A_QUIEN_ADEUDA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "A_QUIEN_ADEUDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABAJO_ATERIORMENTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABAJO_ATERIORMENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARGO_ANTERIOR_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARGO_ANTERIOR_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVO_SALIDA_TRABAJO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVO_SALIDA_TRABAJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRES_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRES_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_PATRONO_ANTERIOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_PATRONO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECOMENDACIONES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECOMENDACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_FAMILIARES", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_FAMILIARES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATOS_EMERGENCIA", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATOS_EMERGENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOTO", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFIL", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_NACIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_NACIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUELDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUELDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRETA_MILITAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRETA_MILITAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_SANGRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_SANGRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASAPORTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASAPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRUEBA_ANTIDROGA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRUEBA_ANTIDROGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_ENTRADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_ENTRADA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_ENTRADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_SALIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_SALIDA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_SALIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_PERSONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_PERSONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_AREA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CARGO_OCUPACIONAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CARGO_OCUPACIONAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CIVIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CIVIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_HIJOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_HIJOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTATURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTATURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTATURA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ESTATURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDAD_DEUDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDAD_DEUDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SALIDA_ANTERIOR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SALIDA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIM"& _ 
                "IENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD"& _ 
                ", PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CA"& _ 
                "RGO_OCUPACIONAL, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD"& _ 
                "_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO,"& _ 
                " LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRI"& _ 
                "ENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTE"& _ 
                "RIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, S"& _ 
                "ALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACI"& _ 
                "ONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL FROM dbo.PERSONAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPersonal.PERSONALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPersonal.PERSONALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPersonal.PERSONALDataTable = New dsPersonal.PERSONALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPersonal.PERSONALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPersonal) As Integer
            Return Me.Adapter.Update(dataSet, "PERSONAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CEDULA,String)
            End If
            If (Original_FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SEXO")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SEXO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_SUELDO,Decimal)
            If (Original_LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LIBRETA_MILITAR")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LIBRETA_MILITAR,String)
            End If
            If (Original_TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_SANGRE")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_TIPO_SANGRE,String)
            End If
            If (Original_PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PASAPORTE")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PASAPORTE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PESO,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EDAD,Integer)
            If (Original_PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PRUEBA_ANTIDROGA,String)
            End If
            If (Original_FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ESTADO_PERSONAL,Integer)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            If (Original_ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_CIVIL")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ESTADO_CIVIL,String)
            End If
            If (Original_CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTATURA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ESTATURA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_PERSONAL,Integer)
            If (CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CEDULA,String)
            End If
            If (NOMBRES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOMBRES,String)
            End If
            If (APELLIDOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APELLIDOS")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(APELLIDOS,String)
            End If
            If (PROVINCIA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PROVINCIA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DIRECCION,String)
            End If
            If (FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEXO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SEXO,String)
            End If
            If (CIUDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CIUDAD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(SUELDO,Decimal)
            If (LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LIBRETA_MILITAR")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LIBRETA_MILITAR,String)
            End If
            If (TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_SANGRE")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TIPO_SANGRE,String)
            End If
            If (PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PASAPORTE")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PASAPORTE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(PESO,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(EDAD,Integer)
            If (PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRUEBA_ANTIDROGA,String)
            End If
            If (FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(ESTADO_PERSONAL,Integer)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(ID_AREA,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (UBICACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UBICACION")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(UBICACION,String)
            End If
            If (INSTRUCCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSTRUCCION")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(INSTRUCCION,String)
            End If
            If (ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_CIVIL")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ESTADO_CIVIL,String)
            End If
            If (MOVIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MOVIL,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TELEFONO,String)
            End If
            If (CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HISTORIA_CLINICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(HISTORIA_CLINICA,String)
            End If
            If (PARROQUIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PARROQUIA,String)
            End If
            If (ESTATURA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ESTATURA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DISCAPACIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DISCAPACIDAD,String)
            End If
            If (EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(EXAMEN_PSICOLOGICO,String)
            End If
            If (LUGAR_EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(LUGAR_EXAMEN_PSICOLOGICO,String)
            End If
            If (CARNET_CONADIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CARNET_CONADIS,String)
            End If
            If (DATOS_HIJOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(DATOS_HIJOS,String)
            End If
            If (DATOS_ESPOSA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(DATOS_ESPOSA,String)
            End If
            If (CASA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CASA,String)
            End If
            If (ARRIENDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ARRIENDO,String)
            End If
            If (DEUDOR_GARANTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DEUDOR_GARANTE,String)
            End If
            If (CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (A_QUIEN_ADEUDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(A_QUIEN_ADEUDA,String)
            End If
            If (TRABAJO_ATERIORMENTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(TRABAJO_ATERIORMENTE,String)
            End If
            If (ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ANTERIOR_TRABAJO,String)
            End If
            If (CARGO_ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CARGO_ANTERIOR_TRABAJO,String)
            End If
            If (MOTIVO_SALIDA_TRABAJO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MOTIVO_SALIDA_TRABAJO,String)
            End If
            If (ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (NOMBRES_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(NOMBRES_PATRONO_ANTERIOR,String)
            End If
            If (TELEFONO_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(TELEFONO_PATRONO_ANTERIOR,String)
            End If
            If (RECOMENDACIONES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(RECOMENDACIONES,String)
            End If
            If (DATOS_FAMILIARES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(DATOS_FAMILIARES,String)
            End If
            If (DATOS_EMERGENCIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DATOS_EMERGENCIA,String)
            End If
            If (FOTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(FOTO,Byte())
            End If
            If (PERFIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(PERFIL,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_PERSONAL As Integer,  _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_PERSONAL,Integer)
            If (CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CEDULA")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CEDULA,String)
            End If
            If (NOMBRES Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NOMBRES")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NOMBRES,String)
            End If
            If (APELLIDOS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("APELLIDOS")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(APELLIDOS,String)
            End If
            If (PROVINCIA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROVINCIA")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PROVINCIA,String)
            End If
            If (DIRECCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRECCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DIRECCION,String)
            End If
            If (FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SEXO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SEXO,String)
            End If
            If (CIUDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CIUDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CIUDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SUELDO,Decimal)
            If (LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LIBRETA_MILITAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(LIBRETA_MILITAR,String)
            End If
            If (TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_SANGRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TIPO_SANGRE,String)
            End If
            If (PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PASAPORTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PASAPORTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PESO,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EDAD,Integer)
            If (PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRUEBA_ANTIDROGA,String)
            End If
            If (FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ESTADO_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ID_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ID_CARGO_OCUPACIONAL,Integer)
            If (UBICACION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UBICACION")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(UBICACION,String)
            End If
            If (INSTRUCCION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSTRUCCION")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(INSTRUCCION,String)
            End If
            If (ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ESTADO_CIVIL")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ESTADO_CIVIL,String)
            End If
            If (MOVIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MOVIL,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TELEFONO,String)
            End If
            If (CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HISTORIA_CLINICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(HISTORIA_CLINICA,String)
            End If
            If (PARROQUIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(PARROQUIA,String)
            End If
            If (ESTATURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ESTATURA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DISCAPACIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(DISCAPACIDAD,String)
            End If
            If (EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(EXAMEN_PSICOLOGICO,String)
            End If
            If (LUGAR_EXAMEN_PSICOLOGICO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(LUGAR_EXAMEN_PSICOLOGICO,String)
            End If
            If (CARNET_CONADIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CARNET_CONADIS,String)
            End If
            If (DATOS_HIJOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DATOS_HIJOS,String)
            End If
            If (DATOS_ESPOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(DATOS_ESPOSA,String)
            End If
            If (CASA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CASA,String)
            End If
            If (ARRIENDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ARRIENDO,String)
            End If
            If (DEUDOR_GARANTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DEUDOR_GARANTE,String)
            End If
            If (CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (A_QUIEN_ADEUDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(A_QUIEN_ADEUDA,String)
            End If
            If (TRABAJO_ATERIORMENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(TRABAJO_ATERIORMENTE,String)
            End If
            If (ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ANTERIOR_TRABAJO,String)
            End If
            If (CARGO_ANTERIOR_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CARGO_ANTERIOR_TRABAJO,String)
            End If
            If (MOTIVO_SALIDA_TRABAJO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(MOTIVO_SALIDA_TRABAJO,String)
            End If
            If (ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (NOMBRES_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(NOMBRES_PATRONO_ANTERIOR,String)
            End If
            If (TELEFONO_PATRONO_ANTERIOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(TELEFONO_PATRONO_ANTERIOR,String)
            End If
            If (RECOMENDACIONES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(RECOMENDACIONES,String)
            End If
            If (DATOS_FAMILIARES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(DATOS_FAMILIARES,String)
            End If
            If (DATOS_EMERGENCIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(DATOS_EMERGENCIA,String)
            End If
            If (FOTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(FOTO,Byte())
            End If
            If (PERFIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(PERFIL,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ID_PERSONAL,Integer)
            If (Original_CEDULA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CEDULA")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_CEDULA,String)
            End If
            If (Original_FECHA_NACIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_FECHA_NACIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SEXO")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_SEXO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_SUELDO,Decimal)
            If (Original_LIBRETA_MILITAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LIBRETA_MILITAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_LIBRETA_MILITAR,String)
            End If
            If (Original_TIPO_SANGRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TIPO_SANGRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_TIPO_SANGRE,String)
            End If
            If (Original_PASAPORTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PASAPORTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_PASAPORTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_PESO,Integer)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_EDAD,Integer)
            If (Original_PRUEBA_ANTIDROGA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PRUEBA_ANTIDROGA")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_PRUEBA_ANTIDROGA,String)
            End If
            If (Original_FECHA_ENTRADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_FECHA_ENTRADA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHA_SALIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_FECHA_SALIDA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_ESTADO_PERSONAL,Integer)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_ID_AREA,Integer)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_ID_CARGO_OCUPACIONAL,Integer)
            If (Original_ESTADO_CIVIL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ESTADO_CIVIL")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_ESTADO_CIVIL,String)
            End If
            If (Original_CANTIDAD_HIJOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CANTIDAD_HIJOS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTATURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ESTATURA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDAD_DEUDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_CANTIDAD_DEUDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_ENTRADA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_SALIDA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_SALIDA_ANTERIOR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CEDULA As String,  _
                    ByVal NOMBRES As String,  _
                    ByVal APELLIDOS As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal SEXO As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal SUELDO As Decimal,  _
                    ByVal LIBRETA_MILITAR As String,  _
                    ByVal TIPO_SANGRE As String,  _
                    ByVal PASAPORTE As String,  _
                    ByVal PESO As Integer,  _
                    ByVal EDAD As Integer,  _
                    ByVal PRUEBA_ANTIDROGA As String,  _
                    ByVal FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO_PERSONAL As Integer,  _
                    ByVal ID_AREA As Integer,  _
                    ByVal ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal UBICACION As String,  _
                    ByVal INSTRUCCION As String,  _
                    ByVal ESTADO_CIVIL As String,  _
                    ByVal MOVIL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal HISTORIA_CLINICA As String,  _
                    ByVal PARROQUIA As String,  _
                    ByVal ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal DISCAPACIDAD As String,  _
                    ByVal EXAMEN_PSICOLOGICO As String,  _
                    ByVal LUGAR_EXAMEN_PSICOLOGICO As String,  _
                    ByVal CARNET_CONADIS As String,  _
                    ByVal DATOS_HIJOS As String,  _
                    ByVal DATOS_ESPOSA As String,  _
                    ByVal CASA As String,  _
                    ByVal ARRIENDO As String,  _
                    ByVal DEUDOR_GARANTE As String,  _
                    ByVal CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal A_QUIEN_ADEUDA As String,  _
                    ByVal TRABAJO_ATERIORMENTE As String,  _
                    ByVal ANTERIOR_TRABAJO As String,  _
                    ByVal CARGO_ANTERIOR_TRABAJO As String,  _
                    ByVal MOTIVO_SALIDA_TRABAJO As String,  _
                    ByVal ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal SALIDA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRES_PATRONO_ANTERIOR As String,  _
                    ByVal TELEFONO_PATRONO_ANTERIOR As String,  _
                    ByVal RECOMENDACIONES As String,  _
                    ByVal DATOS_FAMILIARES As String,  _
                    ByVal DATOS_EMERGENCIA As String,  _
                    ByVal FOTO() As Byte,  _
                    ByVal PERFIL() As Byte,  _
                    ByVal Original_ID_PERSONAL As Integer,  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_FECHA_NACIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_SEXO As String,  _
                    ByVal Original_SUELDO As Decimal,  _
                    ByVal Original_LIBRETA_MILITAR As String,  _
                    ByVal Original_TIPO_SANGRE As String,  _
                    ByVal Original_PASAPORTE As String,  _
                    ByVal Original_PESO As Integer,  _
                    ByVal Original_EDAD As Integer,  _
                    ByVal Original_PRUEBA_ANTIDROGA As String,  _
                    ByVal Original_FECHA_ENTRADA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECHA_SALIDA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO_PERSONAL As Integer,  _
                    ByVal Original_ID_AREA As Integer,  _
                    ByVal Original_ID_CARGO_OCUPACIONAL As Integer,  _
                    ByVal Original_ESTADO_CIVIL As String,  _
                    ByVal Original_CANTIDAD_HIJOS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ESTATURA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDAD_DEUDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ENTRADA_ANTERIOR As Global.System.Nullable(Of Date),  _
                    ByVal Original_SALIDA_ANTERIOR As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ID_PERSONAL, CEDULA, NOMBRES, APELLIDOS, PROVINCIA, DIRECCION, FECHA_NACIMIENTO, SEXO, CIUDAD, SUELDO, LIBRETA_MILITAR, TIPO_SANGRE, PASAPORTE, PESO, EDAD, PRUEBA_ANTIDROGA, FECHA_ENTRADA, FECHA_SALIDA, ESTADO_PERSONAL, ID_AREA, ID_CARGO_OCUPACIONAL, UBICACION, INSTRUCCION, ESTADO_CIVIL, MOVIL, TELEFONO, CANTIDAD_HIJOS, HISTORIA_CLINICA, PARROQUIA, ESTATURA, DISCAPACIDAD, EXAMEN_PSICOLOGICO, LUGAR_EXAMEN_PSICOLOGICO, CARNET_CONADIS, DATOS_HIJOS, DATOS_ESPOSA, CASA, ARRIENDO, DEUDOR_GARANTE, CANTIDAD_DEUDA, A_QUIEN_ADEUDA, TRABAJO_ATERIORMENTE, ANTERIOR_TRABAJO, CARGO_ANTERIOR_TRABAJO, MOTIVO_SALIDA_TRABAJO, ENTRADA_ANTERIOR, SALIDA_ANTERIOR, NOMBRES_PATRONO_ANTERIOR, TELEFONO_PATRONO_ANTERIOR, RECOMENDACIONES, DATOS_FAMILIARES, DATOS_EMERGENCIA, FOTO, PERFIL, Original_ID_PERSONAL, Original_CEDULA, Original_FECHA_NACIMIENTO, Original_SEXO, Original_SUELDO, Original_LIBRETA_MILITAR, Original_TIPO_SANGRE, Original_PASAPORTE, Original_PESO, Original_EDAD, Original_PRUEBA_ANTIDROGA, Original_FECHA_ENTRADA, Original_FECHA_SALIDA, Original_ESTADO_PERSONAL, Original_ID_AREA, Original_ID_CARGO_OCUPACIONAL, Original_ESTADO_CIVIL, Original_CANTIDAD_HIJOS, Original_ESTATURA, Original_CANTIDAD_DEUDA, Original_ENTRADA_ANTERIOR, Original_SALIDA_ANTERIOR)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _aREA_GENERALTableAdapter As AREA_GENERALTableAdapter
        
        Private _cARGO_OCUPACIONALTableAdapter As CARGO_OCUPACIONALTableAdapter
        
        Private _pERSONALTableAdapter As PERSONALTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AREA_GENERALTableAdapter() As AREA_GENERALTableAdapter
            Get
                Return Me._aREA_GENERALTableAdapter
            End Get
            Set
                Me._aREA_GENERALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CARGO_OCUPACIONALTableAdapter() As CARGO_OCUPACIONALTableAdapter
            Get
                Return Me._cARGO_OCUPACIONALTableAdapter
            End Get
            Set
                Me._cARGO_OCUPACIONALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PERSONALTableAdapter() As PERSONALTableAdapter
            Get
                Return Me._pERSONALTableAdapter
            End Get
            Set
                Me._pERSONALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._aREA_GENERALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aREA_GENERALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aREA_GENERALTableAdapter.Connection
                End If
                If ((Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cARGO_OCUPACIONALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cARGO_OCUPACIONALTableAdapter.Connection
                End If
                If ((Not (Me._pERSONALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pERSONALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pERSONALTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsPersonal, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AREA_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aREA_GENERALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CARGO_OCUPACIONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cARGO_OCUPACIONALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsPersonal, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AREA_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aREA_GENERALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CARGO_OCUPACIONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cARGO_OCUPACIONALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsPersonal, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PERSONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pERSONALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CARGO_OCUPACIONAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cARGO_OCUPACIONALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AREA_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aREA_GENERALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsPersonal) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._aREA_GENERALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aREA_GENERALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cARGO_OCUPACIONALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._pERSONALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pERSONALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aREA_GENERALTableAdapter, Me._aREA_GENERALTableAdapter.Connection)
                    Me._aREA_GENERALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aREA_GENERALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aREA_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aREA_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aREA_GENERALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cARGO_OCUPACIONALTableAdapter, Me._cARGO_OCUPACIONALTableAdapter.Connection)
                    Me._cARGO_OCUPACIONALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cARGO_OCUPACIONALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cARGO_OCUPACIONALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cARGO_OCUPACIONALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cARGO_OCUPACIONALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pERSONALTableAdapter, Me._pERSONALTableAdapter.Connection)
                    Me._pERSONALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pERSONALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pERSONALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pERSONALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pERSONALTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._aREA_GENERALTableAdapter) Is Nothing) Then
                    Me._aREA_GENERALTableAdapter.Connection = CType(revertConnections(Me._aREA_GENERALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aREA_GENERALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cARGO_OCUPACIONALTableAdapter) Is Nothing) Then
                    Me._cARGO_OCUPACIONALTableAdapter.Connection = CType(revertConnections(Me._cARGO_OCUPACIONALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cARGO_OCUPACIONALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pERSONALTableAdapter) Is Nothing) Then
                    Me._pERSONALTableAdapter.Connection = CType(revertConnections(Me._pERSONALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pERSONALTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
