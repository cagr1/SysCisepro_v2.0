'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetReporteVentas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetReporteVentas
    Inherits Global.System.Data.DataSet
    
    Private tableFACTURA_VENTA As FACTURA_VENTADataTable
    
    Private tableCLIENTE_GENERAL As CLIENTE_GENERALDataTable
    
    Private relationCLIENTE_GENERAL_FACTURA_VENTA As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FACTURA_VENTA")) Is Nothing) Then
                MyBase.Tables.Add(New FACTURA_VENTADataTable(ds.Tables("FACTURA_VENTA")))
            End If
            If (Not (ds.Tables("CLIENTE_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTE_GENERALDataTable(ds.Tables("CLIENTE_GENERAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FACTURA_VENTA() As FACTURA_VENTADataTable
        Get
            Return Me.tableFACTURA_VENTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CLIENTE_GENERAL() As CLIENTE_GENERALDataTable
        Get
            Return Me.tableCLIENTE_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetReporteVentas = CType(MyBase.Clone,DataSetReporteVentas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FACTURA_VENTA")) Is Nothing) Then
                MyBase.Tables.Add(New FACTURA_VENTADataTable(ds.Tables("FACTURA_VENTA")))
            End If
            If (Not (ds.Tables("CLIENTE_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTE_GENERALDataTable(ds.Tables("CLIENTE_GENERAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFACTURA_VENTA = CType(MyBase.Tables("FACTURA_VENTA"),FACTURA_VENTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableFACTURA_VENTA) Is Nothing) Then
                Me.tableFACTURA_VENTA.InitVars
            End If
        End If
        Me.tableCLIENTE_GENERAL = CType(MyBase.Tables("CLIENTE_GENERAL"),CLIENTE_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCLIENTE_GENERAL) Is Nothing) Then
                Me.tableCLIENTE_GENERAL.InitVars
            End If
        End If
        Me.relationCLIENTE_GENERAL_FACTURA_VENTA = Me.Relations("CLIENTE_GENERAL_FACTURA_VENTA")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetReporteVentas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetReporteVentas.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFACTURA_VENTA = New FACTURA_VENTADataTable()
        MyBase.Tables.Add(Me.tableFACTURA_VENTA)
        Me.tableCLIENTE_GENERAL = New CLIENTE_GENERALDataTable()
        MyBase.Tables.Add(Me.tableCLIENTE_GENERAL)
        Me.relationCLIENTE_GENERAL_FACTURA_VENTA = New Global.System.Data.DataRelation("CLIENTE_GENERAL_FACTURA_VENTA", New Global.System.Data.DataColumn() {Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn}, New Global.System.Data.DataColumn() {Me.tableFACTURA_VENTA.ID_CLIENTE_GENERALColumn}, false)
        Me.Relations.Add(Me.relationCLIENTE_GENERAL_FACTURA_VENTA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeFACTURA_VENTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCLIENTE_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetReporteVentas = New DataSetReporteVentas()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub FACTURA_VENTARowChangeEventHandler(ByVal sender As Object, ByVal e As FACTURA_VENTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CLIENTE_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENTE_GENERALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FACTURA_VENTADataTable
        Inherits Global.System.Data.TypedTableBase(Of FACTURA_VENTARow)
        
        Private columnID_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnID_EMPRESA_GENERAL As Global.System.Data.DataColumn
        
        Private columnNUMERO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnFECHA_EMISION_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnGUIA_REMISION_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnID_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_PAGO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnCONCEPTO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_12_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_0_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_IVA_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnIVA_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA_VENTA As Global.System.Data.DataColumn
        
        Private columnESTADO_FACTURA_VENTA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FACTURA_VENTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_EMPRESA_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_EMPRESA_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NUMERO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_EMISION_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_EMISION_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUIA_REMISION_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMISION_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_PAGO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_PAGO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONCEPTO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONES_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_12_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_12_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_0_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_0_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCUENTO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PORCENTAJE_IVA_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_IVA_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IVA_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_FACTURA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_FACTURA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FACTURA_VENTARow
            Get
                Return CType(Me.Rows(index),FACTURA_VENTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event FACTURA_VENTARowChanging As FACTURA_VENTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event FACTURA_VENTARowChanged As FACTURA_VENTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event FACTURA_VENTARowDeleting As FACTURA_VENTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event FACTURA_VENTARowDeleted As FACTURA_VENTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddFACTURA_VENTARow(ByVal row As FACTURA_VENTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddFACTURA_VENTARow( _
                    ByVal ID_FACTURA_VENTA As Long,  _
                    ByVal ID_EMPRESA_GENERAL As Integer,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal parentCLIENTE_GENERALRowByCLIENTE_GENERAL_FACTURA_VENTA As CLIENTE_GENERALRow,  _
                    ByVal TIPO_PAGO_FACTURA_VENTA As String,  _
                    ByVal CONCEPTO_FACTURA_VENTA As String,  _
                    ByVal OBSERVACIONES_FACTURA_VENTA As String,  _
                    ByVal SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal PORCENTAJE_IVA_FACTURA_VENTA As Integer,  _
                    ByVal IVA_FACTURA_VENTA As Decimal,  _
                    ByVal TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal ESTADO_FACTURA_VENTA As Integer) As FACTURA_VENTARow
            Dim rowFACTURA_VENTARow As FACTURA_VENTARow = CType(Me.NewRow,FACTURA_VENTARow)
            Dim columnValuesArray() As Object = New Object() {ID_FACTURA_VENTA, ID_EMPRESA_GENERAL, NUMERO_FACTURA_VENTA, FECHA_EMISION_FACTURA_VENTA, GUIA_REMISION_FACTURA_VENTA, Nothing, TIPO_PAGO_FACTURA_VENTA, CONCEPTO_FACTURA_VENTA, OBSERVACIONES_FACTURA_VENTA, SUBTOTAL_12_FACTURA_VENTA, SUBTOTAL_0_FACTURA_VENTA, DESCUENTO_FACTURA_VENTA, SUBTOTAL_FACTURA_VENTA, PORCENTAJE_IVA_FACTURA_VENTA, IVA_FACTURA_VENTA, TOTAL_FACTURA_VENTA, ESTADO_FACTURA_VENTA}
            If (Not (parentCLIENTE_GENERALRowByCLIENTE_GENERAL_FACTURA_VENTA) Is Nothing) Then
                columnValuesArray(5) = parentCLIENTE_GENERALRowByCLIENTE_GENERAL_FACTURA_VENTA(0)
            End If
            rowFACTURA_VENTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFACTURA_VENTARow)
            Return rowFACTURA_VENTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_FACTURA_VENTA(ByVal ID_FACTURA_VENTA As Long) As FACTURA_VENTARow
            Return CType(Me.Rows.Find(New Object() {ID_FACTURA_VENTA}),FACTURA_VENTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FACTURA_VENTADataTable = CType(MyBase.Clone,FACTURA_VENTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FACTURA_VENTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_FACTURA_VENTA = MyBase.Columns("ID_FACTURA_VENTA")
            Me.columnID_EMPRESA_GENERAL = MyBase.Columns("ID_EMPRESA_GENERAL")
            Me.columnNUMERO_FACTURA_VENTA = MyBase.Columns("NUMERO_FACTURA_VENTA")
            Me.columnFECHA_EMISION_FACTURA_VENTA = MyBase.Columns("FECHA_EMISION_FACTURA_VENTA")
            Me.columnGUIA_REMISION_FACTURA_VENTA = MyBase.Columns("GUIA_REMISION_FACTURA_VENTA")
            Me.columnID_CLIENTE_GENERAL = MyBase.Columns("ID_CLIENTE_GENERAL")
            Me.columnTIPO_PAGO_FACTURA_VENTA = MyBase.Columns("TIPO_PAGO_FACTURA_VENTA")
            Me.columnCONCEPTO_FACTURA_VENTA = MyBase.Columns("CONCEPTO_FACTURA_VENTA")
            Me.columnOBSERVACIONES_FACTURA_VENTA = MyBase.Columns("OBSERVACIONES_FACTURA_VENTA")
            Me.columnSUBTOTAL_12_FACTURA_VENTA = MyBase.Columns("SUBTOTAL_12_FACTURA_VENTA")
            Me.columnSUBTOTAL_0_FACTURA_VENTA = MyBase.Columns("SUBTOTAL_0_FACTURA_VENTA")
            Me.columnDESCUENTO_FACTURA_VENTA = MyBase.Columns("DESCUENTO_FACTURA_VENTA")
            Me.columnSUBTOTAL_FACTURA_VENTA = MyBase.Columns("SUBTOTAL_FACTURA_VENTA")
            Me.columnPORCENTAJE_IVA_FACTURA_VENTA = MyBase.Columns("PORCENTAJE_IVA_FACTURA_VENTA")
            Me.columnIVA_FACTURA_VENTA = MyBase.Columns("IVA_FACTURA_VENTA")
            Me.columnTOTAL_FACTURA_VENTA = MyBase.Columns("TOTAL_FACTURA_VENTA")
            Me.columnESTADO_FACTURA_VENTA = MyBase.Columns("ESTADO_FACTURA_VENTA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_FACTURA_VENTA = New Global.System.Data.DataColumn("ID_FACTURA_VENTA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_FACTURA_VENTA)
            Me.columnID_EMPRESA_GENERAL = New Global.System.Data.DataColumn("ID_EMPRESA_GENERAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_EMPRESA_GENERAL)
            Me.columnNUMERO_FACTURA_VENTA = New Global.System.Data.DataColumn("NUMERO_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_FACTURA_VENTA)
            Me.columnFECHA_EMISION_FACTURA_VENTA = New Global.System.Data.DataColumn("FECHA_EMISION_FACTURA_VENTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_EMISION_FACTURA_VENTA)
            Me.columnGUIA_REMISION_FACTURA_VENTA = New Global.System.Data.DataColumn("GUIA_REMISION_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMISION_FACTURA_VENTA)
            Me.columnID_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ID_CLIENTE_GENERAL", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CLIENTE_GENERAL)
            Me.columnTIPO_PAGO_FACTURA_VENTA = New Global.System.Data.DataColumn("TIPO_PAGO_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_PAGO_FACTURA_VENTA)
            Me.columnCONCEPTO_FACTURA_VENTA = New Global.System.Data.DataColumn("CONCEPTO_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO_FACTURA_VENTA)
            Me.columnOBSERVACIONES_FACTURA_VENTA = New Global.System.Data.DataColumn("OBSERVACIONES_FACTURA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES_FACTURA_VENTA)
            Me.columnSUBTOTAL_12_FACTURA_VENTA = New Global.System.Data.DataColumn("SUBTOTAL_12_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_12_FACTURA_VENTA)
            Me.columnSUBTOTAL_0_FACTURA_VENTA = New Global.System.Data.DataColumn("SUBTOTAL_0_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_0_FACTURA_VENTA)
            Me.columnDESCUENTO_FACTURA_VENTA = New Global.System.Data.DataColumn("DESCUENTO_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_FACTURA_VENTA)
            Me.columnSUBTOTAL_FACTURA_VENTA = New Global.System.Data.DataColumn("SUBTOTAL_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_FACTURA_VENTA)
            Me.columnPORCENTAJE_IVA_FACTURA_VENTA = New Global.System.Data.DataColumn("PORCENTAJE_IVA_FACTURA_VENTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_IVA_FACTURA_VENTA)
            Me.columnIVA_FACTURA_VENTA = New Global.System.Data.DataColumn("IVA_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA_FACTURA_VENTA)
            Me.columnTOTAL_FACTURA_VENTA = New Global.System.Data.DataColumn("TOTAL_FACTURA_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA_VENTA)
            Me.columnESTADO_FACTURA_VENTA = New Global.System.Data.DataColumn("ESTADO_FACTURA_VENTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_FACTURA_VENTA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_FACTURA_VENTA}, true))
            Me.columnID_FACTURA_VENTA.AllowDBNull = false
            Me.columnID_FACTURA_VENTA.Unique = true
            Me.columnID_EMPRESA_GENERAL.AllowDBNull = false
            Me.columnNUMERO_FACTURA_VENTA.AllowDBNull = false
            Me.columnNUMERO_FACTURA_VENTA.MaxLength = 50
            Me.columnFECHA_EMISION_FACTURA_VENTA.AllowDBNull = false
            Me.columnGUIA_REMISION_FACTURA_VENTA.AllowDBNull = false
            Me.columnGUIA_REMISION_FACTURA_VENTA.MaxLength = 50
            Me.columnID_CLIENTE_GENERAL.AllowDBNull = false
            Me.columnTIPO_PAGO_FACTURA_VENTA.AllowDBNull = false
            Me.columnTIPO_PAGO_FACTURA_VENTA.MaxLength = 2147483647
            Me.columnCONCEPTO_FACTURA_VENTA.MaxLength = 2147483647
            Me.columnOBSERVACIONES_FACTURA_VENTA.AllowDBNull = false
            Me.columnOBSERVACIONES_FACTURA_VENTA.MaxLength = 2147483647
            Me.columnSUBTOTAL_12_FACTURA_VENTA.AllowDBNull = false
            Me.columnSUBTOTAL_0_FACTURA_VENTA.AllowDBNull = false
            Me.columnDESCUENTO_FACTURA_VENTA.AllowDBNull = false
            Me.columnSUBTOTAL_FACTURA_VENTA.AllowDBNull = false
            Me.columnIVA_FACTURA_VENTA.AllowDBNull = false
            Me.columnTOTAL_FACTURA_VENTA.AllowDBNull = false
            Me.columnESTADO_FACTURA_VENTA.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewFACTURA_VENTARow() As FACTURA_VENTARow
            Return CType(Me.NewRow,FACTURA_VENTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FACTURA_VENTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FACTURA_VENTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FACTURA_VENTARowChangedEvent) Is Nothing) Then
                RaiseEvent FACTURA_VENTARowChanged(Me, New FACTURA_VENTARowChangeEvent(CType(e.Row,FACTURA_VENTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FACTURA_VENTARowChangingEvent) Is Nothing) Then
                RaiseEvent FACTURA_VENTARowChanging(Me, New FACTURA_VENTARowChangeEvent(CType(e.Row,FACTURA_VENTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FACTURA_VENTARowDeletedEvent) Is Nothing) Then
                RaiseEvent FACTURA_VENTARowDeleted(Me, New FACTURA_VENTARowChangeEvent(CType(e.Row,FACTURA_VENTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FACTURA_VENTARowDeletingEvent) Is Nothing) Then
                RaiseEvent FACTURA_VENTARowDeleting(Me, New FACTURA_VENTARowChangeEvent(CType(e.Row,FACTURA_VENTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveFACTURA_VENTARow(ByVal row As FACTURA_VENTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetReporteVentas = New DataSetReporteVentas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FACTURA_VENTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CLIENTE_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENTE_GENERALRow)
        
        Private columnID_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCODIGO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_IDENTIFICACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnRUC_CI_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As Global.System.Data.DataColumn
        
        Private columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnDIRECCION_UBICACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnDIRECCION_FACTURACION_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONSORCIO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnID_CIUDAD As Global.System.Data.DataColumn
        
        Private columnTELEFONO_1_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO_2_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnEMAIL_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnCONTACTO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnFECHA_INGRESO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnTIPO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        Private columnESTADO_CLIENTE_GENERAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CLIENTE_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CODIGO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_IDENTIFICACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RUC_CI_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CI_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_UBICACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DIRECCION_FACTURACION_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSORCIO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSORCIO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ID_CIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_1_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_1_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TELEFONO_2_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_2_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAIL_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FECHA_INGRESO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_INGRESO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIPO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONES_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ESTADO_CLIENTE_GENERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_CLIENTE_GENERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CLIENTE_GENERALRow
            Get
                Return CType(Me.Rows(index),CLIENTE_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowChanging As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowChanged As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowDeleting As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CLIENTE_GENERALRowDeleted As CLIENTE_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCLIENTE_GENERALRow(ByVal row As CLIENTE_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCLIENTE_GENERALRow( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Integer,  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Date,  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String) As CLIENTE_GENERALRow
            Dim rowCLIENTE_GENERALRow As CLIENTE_GENERALRow = CType(Me.NewRow,CLIENTE_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE_GENERAL}
            rowCLIENTE_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENTE_GENERALRow)
            Return rowCLIENTE_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByID_CLIENTE_GENERAL(ByVal ID_CLIENTE_GENERAL As Long) As CLIENTE_GENERALRow
            Return CType(Me.Rows.Find(New Object() {ID_CLIENTE_GENERAL}),CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENTE_GENERALDataTable = CType(MyBase.Clone,CLIENTE_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENTE_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CLIENTE_GENERAL = MyBase.Columns("ID_CLIENTE_GENERAL")
            Me.columnCODIGO_CLIENTE_GENERAL = MyBase.Columns("CODIGO_CLIENTE_GENERAL")
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL = MyBase.Columns("TIPO_IDENTIFICACION_CLIENTE_GENERAL")
            Me.columnRUC_CI_CLIENTE_GENERAL = MyBase.Columns("RUC_CI_CLIENTE_GENERAL")
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL = MyBase.Columns("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL")
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL = MyBase.Columns("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL")
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = MyBase.Columns("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL")
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL = MyBase.Columns("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL")
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL = MyBase.Columns("DIRECCION_UBICACION_CLIENTE_GENERAL")
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL = MyBase.Columns("DIRECCION_FACTURACION_CLIENTE_GENERAL")
            Me.columnCONSORCIO_CLIENTE_GENERAL = MyBase.Columns("CONSORCIO_CLIENTE_GENERAL")
            Me.columnID_CIUDAD = MyBase.Columns("ID_CIUDAD")
            Me.columnTELEFONO_1_CLIENTE_GENERAL = MyBase.Columns("TELEFONO_1_CLIENTE_GENERAL")
            Me.columnTELEFONO_2_CLIENTE_GENERAL = MyBase.Columns("TELEFONO_2_CLIENTE_GENERAL")
            Me.columnEMAIL_CLIENTE_GENERAL = MyBase.Columns("EMAIL_CLIENTE_GENERAL")
            Me.columnCONTACTO_CLIENTE_GENERAL = MyBase.Columns("CONTACTO_CLIENTE_GENERAL")
            Me.columnFECHA_INGRESO_CLIENTE_GENERAL = MyBase.Columns("FECHA_INGRESO_CLIENTE_GENERAL")
            Me.columnTIPO_CLIENTE_GENERAL = MyBase.Columns("TIPO_CLIENTE_GENERAL")
            Me.columnOBSERVACIONES_CLIENTE_GENERAL = MyBase.Columns("OBSERVACIONES_CLIENTE_GENERAL")
            Me.columnESTADO_CLIENTE_GENERAL = MyBase.Columns("ESTADO_CLIENTE_GENERAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ID_CLIENTE_GENERAL", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CLIENTE_GENERAL)
            Me.columnCODIGO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CODIGO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CLIENTE_GENERAL)
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TIPO_IDENTIFICACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL)
            Me.columnRUC_CI_CLIENTE_GENERAL = New Global.System.Data.DataColumn("RUC_CI_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CI_CLIENTE_GENERAL)
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL)
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL = New Global.System.Data.DataColumn("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL)
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL)
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL = New Global.System.Data.DataColumn("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL)
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("DIRECCION_UBICACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL)
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL = New Global.System.Data.DataColumn("DIRECCION_FACTURACION_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL)
            Me.columnCONSORCIO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CONSORCIO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSORCIO_CLIENTE_GENERAL)
            Me.columnID_CIUDAD = New Global.System.Data.DataColumn("ID_CIUDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CIUDAD)
            Me.columnTELEFONO_1_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TELEFONO_1_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_1_CLIENTE_GENERAL)
            Me.columnTELEFONO_2_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TELEFONO_2_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_2_CLIENTE_GENERAL)
            Me.columnEMAIL_CLIENTE_GENERAL = New Global.System.Data.DataColumn("EMAIL_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_CLIENTE_GENERAL)
            Me.columnCONTACTO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("CONTACTO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO_CLIENTE_GENERAL)
            Me.columnFECHA_INGRESO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("FECHA_INGRESO_CLIENTE_GENERAL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_INGRESO_CLIENTE_GENERAL)
            Me.columnTIPO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("TIPO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CLIENTE_GENERAL)
            Me.columnOBSERVACIONES_CLIENTE_GENERAL = New Global.System.Data.DataColumn("OBSERVACIONES_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES_CLIENTE_GENERAL)
            Me.columnESTADO_CLIENTE_GENERAL = New Global.System.Data.DataColumn("ESTADO_CLIENTE_GENERAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_CLIENTE_GENERAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_CLIENTE_GENERAL}, true))
            Me.columnID_CLIENTE_GENERAL.AllowDBNull = false
            Me.columnID_CLIENTE_GENERAL.Unique = true
            Me.columnCODIGO_CLIENTE_GENERAL.MaxLength = 15
            Me.columnTIPO_IDENTIFICACION_CLIENTE_GENERAL.MaxLength = 10
            Me.columnRUC_CI_CLIENTE_GENERAL.MaxLength = 15
            Me.columnNOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL.MaxLength = 2147483647
            Me.columnNRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL.MaxLength = 50
            Me.columnOBLIG_LLEVAR_CONT_CLIENTE_GENERAL.MaxLength = 5
            Me.columnDIRECCION_UBICACION_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnDIRECCION_FACTURACION_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnCONSORCIO_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnTELEFONO_1_CLIENTE_GENERAL.MaxLength = 50
            Me.columnTELEFONO_2_CLIENTE_GENERAL.MaxLength = 50
            Me.columnEMAIL_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnCONTACTO_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnTIPO_CLIENTE_GENERAL.MaxLength = 50
            Me.columnOBSERVACIONES_CLIENTE_GENERAL.MaxLength = 2147483647
            Me.columnESTADO_CLIENTE_GENERAL.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCLIENTE_GENERALRow() As CLIENTE_GENERALRow
            Return CType(Me.NewRow,CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENTE_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENTE_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENTE_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowChanged(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENTE_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowChanging(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENTE_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowDeleted(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENTE_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENTE_GENERALRowDeleting(Me, New CLIENTE_GENERALRowChangeEvent(CType(e.Row,CLIENTE_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCLIENTE_GENERALRow(ByVal row As CLIENTE_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetReporteVentas = New DataSetReporteVentas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENTE_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FACTURA_VENTARow
        Inherits Global.System.Data.DataRow
        
        Private tableFACTURA_VENTA As FACTURA_VENTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFACTURA_VENTA = CType(Me.Table,FACTURA_VENTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_FACTURA_VENTA() As Long
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.ID_FACTURA_VENTAColumn),Long)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.ID_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_EMPRESA_GENERAL() As Integer
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.ID_EMPRESA_GENERALColumn),Integer)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.ID_EMPRESA_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NUMERO_FACTURA_VENTA() As String
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.NUMERO_FACTURA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.NUMERO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_EMISION_FACTURA_VENTA() As Date
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.FECHA_EMISION_FACTURA_VENTAColumn),Date)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.FECHA_EMISION_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUIA_REMISION_FACTURA_VENTA() As String
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.GUIA_REMISION_FACTURA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.GUIA_REMISION_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CLIENTE_GENERAL() As Long
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.ID_CLIENTE_GENERALColumn),Long)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.ID_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_PAGO_FACTURA_VENTA() As String
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.TIPO_PAGO_FACTURA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.TIPO_PAGO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONCEPTO_FACTURA_VENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFACTURA_VENTA.CONCEPTO_FACTURA_VENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONCEPTO_FACTURA_VENTA' de la tabla 'FACTURA_VENTA' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.CONCEPTO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACIONES_FACTURA_VENTA() As String
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.OBSERVACIONES_FACTURA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.OBSERVACIONES_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUBTOTAL_12_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.SUBTOTAL_12_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.SUBTOTAL_12_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUBTOTAL_0_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.SUBTOTAL_0_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.SUBTOTAL_0_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCUENTO_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.DESCUENTO_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.DESCUENTO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUBTOTAL_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.SUBTOTAL_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.SUBTOTAL_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PORCENTAJE_IVA_FACTURA_VENTA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFACTURA_VENTA.PORCENTAJE_IVA_FACTURA_VENTAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORCENTAJE_IVA_FACTURA_VENTA' de la tabla 'FACTURA_VENTA'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.PORCENTAJE_IVA_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IVA_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.IVA_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.IVA_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOTAL_FACTURA_VENTA() As Decimal
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.TOTAL_FACTURA_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.TOTAL_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_FACTURA_VENTA() As Integer
            Get
                Return CType(Me(Me.tableFACTURA_VENTA.ESTADO_FACTURA_VENTAColumn),Integer)
            End Get
            Set
                Me(Me.tableFACTURA_VENTA.ESTADO_FACTURA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CLIENTE_GENERALRow() As CLIENTE_GENERALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CLIENTE_GENERAL_FACTURA_VENTA")),CLIENTE_GENERALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CLIENTE_GENERAL_FACTURA_VENTA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONCEPTO_FACTURA_VENTANull() As Boolean
            Return Me.IsNull(Me.tableFACTURA_VENTA.CONCEPTO_FACTURA_VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONCEPTO_FACTURA_VENTANull()
            Me(Me.tableFACTURA_VENTA.CONCEPTO_FACTURA_VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPORCENTAJE_IVA_FACTURA_VENTANull() As Boolean
            Return Me.IsNull(Me.tableFACTURA_VENTA.PORCENTAJE_IVA_FACTURA_VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPORCENTAJE_IVA_FACTURA_VENTANull()
            Me(Me.tableFACTURA_VENTA.PORCENTAJE_IVA_FACTURA_VENTAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENTE_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCLIENTE_GENERAL As CLIENTE_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENTE_GENERAL = CType(Me.Table,CLIENTE_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CLIENTE_GENERAL() As Long
            Get
                Return CType(Me(Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn),Long)
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ID_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CODIGO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_IDENTIFICACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_IDENTIFICACION_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RUC_CI_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CI_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL' de la tabla 'CL"& _ 
                            "IENTE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL' de la tabla 'CLIEN"& _ 
                            "TE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBLIG_LLEVAR_CONT_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBLIG_LLEVAR_CONT_CLIENTE_GENERAL' de la tabla 'CLIENTE_G"& _ 
                            "ENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_UBICACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_UBICACION_CLIENTE_GENERAL' de la tabla 'CLIENTE"& _ 
                            "_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DIRECCION_FACTURACION_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_FACTURACION_CLIENTE_GENERAL' de la tabla 'CLIEN"& _ 
                            "TE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSORCIO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONSORCIO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID_CIUDAD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_CIUDAD' de la tabla 'CLIENTE_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_1_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_1_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TELEFONO_2_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_2_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMAIL_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTACTO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FECHA_INGRESO_CLIENTE_GENERAL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_INGRESO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENER"& _ 
                            "AL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIPO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBSERVACIONES_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENER"& _ 
                            "AL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ESTADO_CLIENTE_GENERAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO_CLIENTE_GENERAL' de la tabla 'CLIENTE_GENERAL' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCODIGO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCODIGO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CODIGO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIPO_IDENTIFICACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIPO_IDENTIFICACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TIPO_IDENTIFICACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRUC_CI_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRUC_CI_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.RUC_CI_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOMPRE_RAZON_SOCIAL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOMPRE_RAZON_SOCIAL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.NOMPRE_RAZON_SOCIAL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAPELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALNull()
            Me(Me.tableCLIENTE_GENERAL.APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNRO_RES_CONT_ESPECIAL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNRO_RES_CONT_ESPECIAL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.NRO_RES_CONT_ESPECIAL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBLIG_LLEVAR_CONT_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBLIG_LLEVAR_CONT_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.OBLIG_LLEVAR_CONT_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDIRECCION_UBICACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDIRECCION_UBICACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.DIRECCION_UBICACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDIRECCION_FACTURACION_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDIRECCION_FACTURACION_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.DIRECCION_FACTURACION_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSORCIO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSORCIO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CONSORCIO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsID_CIUDADNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetID_CIUDADNull()
            Me(Me.tableCLIENTE_GENERAL.ID_CIUDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_1_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_1_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TELEFONO_1_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTELEFONO_2_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTELEFONO_2_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TELEFONO_2_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMAIL_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMAIL_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.EMAIL_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.CONTACTO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFECHA_INGRESO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFECHA_INGRESO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.FECHA_INGRESO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIPO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIPO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.TIPO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBSERVACIONES_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBSERVACIONES_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.OBSERVACIONES_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsESTADO_CLIENTE_GENERALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetESTADO_CLIENTE_GENERALNull()
            Me(Me.tableCLIENTE_GENERAL.ESTADO_CLIENTE_GENERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetFACTURA_VENTARows() As FACTURA_VENTARow()
            If (Me.Table.ChildRelations("CLIENTE_GENERAL_FACTURA_VENTA") Is Nothing) Then
                Return New FACTURA_VENTARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CLIENTE_GENERAL_FACTURA_VENTA")),FACTURA_VENTARow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class FACTURA_VENTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FACTURA_VENTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As FACTURA_VENTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As FACTURA_VENTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CLIENTE_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CLIENTE_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CLIENTE_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CLIENTE_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSetReporteVentasTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FACTURA_VENTATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FACTURA_VENTA"
            tableMapping.ColumnMappings.Add("ID_FACTURA_VENTA", "ID_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("ID_EMPRESA_GENERAL", "ID_EMPRESA_GENERAL")
            tableMapping.ColumnMappings.Add("NUMERO_FACTURA_VENTA", "NUMERO_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("FECHA_EMISION_FACTURA_VENTA", "FECHA_EMISION_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("GUIA_REMISION_FACTURA_VENTA", "GUIA_REMISION_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("ID_CLIENTE_GENERAL", "ID_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_PAGO_FACTURA_VENTA", "TIPO_PAGO_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("CONCEPTO_FACTURA_VENTA", "CONCEPTO_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("OBSERVACIONES_FACTURA_VENTA", "OBSERVACIONES_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("SUBTOTAL_12_FACTURA_VENTA", "SUBTOTAL_12_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("SUBTOTAL_0_FACTURA_VENTA", "SUBTOTAL_0_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("DESCUENTO_FACTURA_VENTA", "DESCUENTO_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("SUBTOTAL_FACTURA_VENTA", "SUBTOTAL_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("PORCENTAJE_IVA_FACTURA_VENTA", "PORCENTAJE_IVA_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("IVA_FACTURA_VENTA", "IVA_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA_VENTA", "TOTAL_FACTURA_VENTA")
            tableMapping.ColumnMappings.Add("ESTADO_FACTURA_VENTA", "ESTADO_FACTURA_VENTA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FACTURA_VENTA] WHERE (([ID_FACTURA_VENTA] = @Original_ID_FACTU"& _ 
                "RA_VENTA) AND ([ID_EMPRESA_GENERAL] = @Original_ID_EMPRESA_GENERAL) AND ([NUMERO"& _ 
                "_FACTURA_VENTA] = @Original_NUMERO_FACTURA_VENTA) AND ([FECHA_EMISION_FACTURA_VE"& _ 
                "NTA] = @Original_FECHA_EMISION_FACTURA_VENTA) AND ([GUIA_REMISION_FACTURA_VENTA]"& _ 
                " = @Original_GUIA_REMISION_FACTURA_VENTA) AND ([ID_CLIENTE_GENERAL] = @Original_"& _ 
                "ID_CLIENTE_GENERAL) AND ([SUBTOTAL_12_FACTURA_VENTA] = @Original_SUBTOTAL_12_FAC"& _ 
                "TURA_VENTA) AND ([SUBTOTAL_0_FACTURA_VENTA] = @Original_SUBTOTAL_0_FACTURA_VENTA"& _ 
                ") AND ([DESCUENTO_FACTURA_VENTA] = @Original_DESCUENTO_FACTURA_VENTA) AND ([SUBT"& _ 
                "OTAL_FACTURA_VENTA] = @Original_SUBTOTAL_FACTURA_VENTA) AND ((@IsNull_PORCENTAJE"& _ 
                "_IVA_FACTURA_VENTA = 1 AND [PORCENTAJE_IVA_FACTURA_VENTA] IS NULL) OR ([PORCENTA"& _ 
                "JE_IVA_FACTURA_VENTA] = @Original_PORCENTAJE_IVA_FACTURA_VENTA)) AND ([IVA_FACTU"& _ 
                "RA_VENTA] = @Original_IVA_FACTURA_VENTA) AND ([TOTAL_FACTURA_VENTA] = @Original_"& _ 
                "TOTAL_FACTURA_VENTA) AND ([ESTADO_FACTURA_VENTA] = @Original_ESTADO_FACTURA_VENT"& _ 
                "A))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_FACTURA_VENTA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_EMPRESA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_EMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_EMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUIA_REMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCUENTO_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FACTURA_VENTA] ([ID_FACTURA_VENTA], [ID_EMPRESA_GENERAL], [NUM"& _ 
                "ERO_FACTURA_VENTA], [FECHA_EMISION_FACTURA_VENTA], [GUIA_REMISION_FACTURA_VENTA]"& _ 
                ", [ID_CLIENTE_GENERAL], [TIPO_PAGO_FACTURA_VENTA], [CONCEPTO_FACTURA_VENTA], [OB"& _ 
                "SERVACIONES_FACTURA_VENTA], [SUBTOTAL_12_FACTURA_VENTA], [SUBTOTAL_0_FACTURA_VEN"& _ 
                "TA], [DESCUENTO_FACTURA_VENTA], [SUBTOTAL_FACTURA_VENTA], [PORCENTAJE_IVA_FACTUR"& _ 
                "A_VENTA], [IVA_FACTURA_VENTA], [TOTAL_FACTURA_VENTA], [ESTADO_FACTURA_VENTA]) VA"& _ 
                "LUES (@ID_FACTURA_VENTA, @ID_EMPRESA_GENERAL, @NUMERO_FACTURA_VENTA, @FECHA_EMIS"& _ 
                "ION_FACTURA_VENTA, @GUIA_REMISION_FACTURA_VENTA, @ID_CLIENTE_GENERAL, @TIPO_PAGO"& _ 
                "_FACTURA_VENTA, @CONCEPTO_FACTURA_VENTA, @OBSERVACIONES_FACTURA_VENTA, @SUBTOTAL"& _ 
                "_12_FACTURA_VENTA, @SUBTOTAL_0_FACTURA_VENTA, @DESCUENTO_FACTURA_VENTA, @SUBTOTA"& _ 
                "L_FACTURA_VENTA, @PORCENTAJE_IVA_FACTURA_VENTA, @IVA_FACTURA_VENTA, @TOTAL_FACTU"& _ 
                "RA_VENTA, @ESTADO_FACTURA_VENTA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_FACTURA_VENTA, ID_EMPRESA_GENERAL, "& _ 
                "NUMERO_FACTURA_VENTA, FECHA_EMISION_FACTURA_VENTA, GUIA_REMISION_FACTURA_VENTA, "& _ 
                "ID_CLIENTE_GENERAL, TIPO_PAGO_FACTURA_VENTA, CONCEPTO_FACTURA_VENTA, OBSERVACION"& _ 
                "ES_FACTURA_VENTA, SUBTOTAL_12_FACTURA_VENTA, SUBTOTAL_0_FACTURA_VENTA, DESCUENTO"& _ 
                "_FACTURA_VENTA, SUBTOTAL_FACTURA_VENTA, PORCENTAJE_IVA_FACTURA_VENTA, IVA_FACTUR"& _ 
                "A_VENTA, TOTAL_FACTURA_VENTA, ESTADO_FACTURA_VENTA FROM FACTURA_VENTA WHERE (ID_"& _ 
                "FACTURA_VENTA = @ID_FACTURA_VENTA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_FACTURA_VENTA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_EMPRESA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_EMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_EMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUIA_REMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PAGO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCUENTO_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FACTURA_VENTA] SET [ID_FACTURA_VENTA] = @ID_FACTURA_VENTA, [ID_EMPR"& _ 
                "ESA_GENERAL] = @ID_EMPRESA_GENERAL, [NUMERO_FACTURA_VENTA] = @NUMERO_FACTURA_VEN"& _ 
                "TA, [FECHA_EMISION_FACTURA_VENTA] = @FECHA_EMISION_FACTURA_VENTA, [GUIA_REMISION"& _ 
                "_FACTURA_VENTA] = @GUIA_REMISION_FACTURA_VENTA, [ID_CLIENTE_GENERAL] = @ID_CLIEN"& _ 
                "TE_GENERAL, [TIPO_PAGO_FACTURA_VENTA] = @TIPO_PAGO_FACTURA_VENTA, [CONCEPTO_FACT"& _ 
                "URA_VENTA] = @CONCEPTO_FACTURA_VENTA, [OBSERVACIONES_FACTURA_VENTA] = @OBSERVACI"& _ 
                "ONES_FACTURA_VENTA, [SUBTOTAL_12_FACTURA_VENTA] = @SUBTOTAL_12_FACTURA_VENTA, [S"& _ 
                "UBTOTAL_0_FACTURA_VENTA] = @SUBTOTAL_0_FACTURA_VENTA, [DESCUENTO_FACTURA_VENTA] "& _ 
                "= @DESCUENTO_FACTURA_VENTA, [SUBTOTAL_FACTURA_VENTA] = @SUBTOTAL_FACTURA_VENTA, "& _ 
                "[PORCENTAJE_IVA_FACTURA_VENTA] = @PORCENTAJE_IVA_FACTURA_VENTA, [IVA_FACTURA_VEN"& _ 
                "TA] = @IVA_FACTURA_VENTA, [TOTAL_FACTURA_VENTA] = @TOTAL_FACTURA_VENTA, [ESTADO_"& _ 
                "FACTURA_VENTA] = @ESTADO_FACTURA_VENTA WHERE (([ID_FACTURA_VENTA] = @Original_ID"& _ 
                "_FACTURA_VENTA) AND ([ID_EMPRESA_GENERAL] = @Original_ID_EMPRESA_GENERAL) AND (["& _ 
                "NUMERO_FACTURA_VENTA] = @Original_NUMERO_FACTURA_VENTA) AND ([FECHA_EMISION_FACT"& _ 
                "URA_VENTA] = @Original_FECHA_EMISION_FACTURA_VENTA) AND ([GUIA_REMISION_FACTURA_"& _ 
                "VENTA] = @Original_GUIA_REMISION_FACTURA_VENTA) AND ([ID_CLIENTE_GENERAL] = @Ori"& _ 
                "ginal_ID_CLIENTE_GENERAL) AND ([SUBTOTAL_12_FACTURA_VENTA] = @Original_SUBTOTAL_"& _ 
                "12_FACTURA_VENTA) AND ([SUBTOTAL_0_FACTURA_VENTA] = @Original_SUBTOTAL_0_FACTURA"& _ 
                "_VENTA) AND ([DESCUENTO_FACTURA_VENTA] = @Original_DESCUENTO_FACTURA_VENTA) AND "& _ 
                "([SUBTOTAL_FACTURA_VENTA] = @Original_SUBTOTAL_FACTURA_VENTA) AND ((@IsNull_PORC"& _ 
                "ENTAJE_IVA_FACTURA_VENTA = 1 AND [PORCENTAJE_IVA_FACTURA_VENTA] IS NULL) OR ([PO"& _ 
                "RCENTAJE_IVA_FACTURA_VENTA] = @Original_PORCENTAJE_IVA_FACTURA_VENTA)) AND ([IVA"& _ 
                "_FACTURA_VENTA] = @Original_IVA_FACTURA_VENTA) AND ([TOTAL_FACTURA_VENTA] = @Ori"& _ 
                "ginal_TOTAL_FACTURA_VENTA) AND ([ESTADO_FACTURA_VENTA] = @Original_ESTADO_FACTUR"& _ 
                "A_VENTA));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_FACTURA_VENTA, ID_EMPRESA_GENERAL, NUMERO_FACTURA_VENTA, F"& _ 
                "ECHA_EMISION_FACTURA_VENTA, GUIA_REMISION_FACTURA_VENTA, ID_CLIENTE_GENERAL, TIP"& _ 
                "O_PAGO_FACTURA_VENTA, CONCEPTO_FACTURA_VENTA, OBSERVACIONES_FACTURA_VENTA, SUBTO"& _ 
                "TAL_12_FACTURA_VENTA, SUBTOTAL_0_FACTURA_VENTA, DESCUENTO_FACTURA_VENTA, SUBTOTA"& _ 
                "L_FACTURA_VENTA, PORCENTAJE_IVA_FACTURA_VENTA, IVA_FACTURA_VENTA, TOTAL_FACTURA_"& _ 
                "VENTA, ESTADO_FACTURA_VENTA FROM FACTURA_VENTA WHERE (ID_FACTURA_VENTA = @ID_FAC"& _ 
                "TURA_VENTA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_FACTURA_VENTA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_EMPRESA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_EMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_EMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUIA_REMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_PAGO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_PAGO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCUENTO_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBTOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_FACTURA_VENTA", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_EMPRESA_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_EMPRESA_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMERO_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMERO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_EMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_EMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUIA_REMISION_FACTURA_VENTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMISION_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_12_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_0_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCUENTO_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DESCUENTO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBTOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SUBTOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENTAJE_IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IVA_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTAL_FACTURA_VENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTAL_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_FACTURA_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_FACTURA_VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_FACTURA_VENTA, ID_EMPRESA_GENERAL, NUMERO_FACTURA_VENTA, FECHA_EMISION_"& _ 
                "FACTURA_VENTA, GUIA_REMISION_FACTURA_VENTA, ID_CLIENTE_GENERAL, TIPO_PAGO_FACTUR"& _ 
                "A_VENTA, CONCEPTO_FACTURA_VENTA, OBSERVACIONES_FACTURA_VENTA, SUBTOTAL_12_FACTUR"& _ 
                "A_VENTA, SUBTOTAL_0_FACTURA_VENTA, DESCUENTO_FACTURA_VENTA, SUBTOTAL_FACTURA_VEN"& _ 
                "TA, PORCENTAJE_IVA_FACTURA_VENTA, IVA_FACTURA_VENTA, TOTAL_FACTURA_VENTA, ESTADO"& _ 
                "_FACTURA_VENTA FROM dbo.FACTURA_VENTA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetReporteVentas.FACTURA_VENTADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetReporteVentas.FACTURA_VENTADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetReporteVentas.FACTURA_VENTADataTable = New DataSetReporteVentas.FACTURA_VENTADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetReporteVentas.FACTURA_VENTADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetReporteVentas) As Integer
            Return Me.Adapter.Update(dataSet, "FACTURA_VENTA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_FACTURA_VENTA As Long, ByVal Original_ID_EMPRESA_GENERAL As Integer, ByVal Original_NUMERO_FACTURA_VENTA As String, ByVal Original_FECHA_EMISION_FACTURA_VENTA As Date, ByVal Original_GUIA_REMISION_FACTURA_VENTA As String, ByVal Original_ID_CLIENTE_GENERAL As Long, ByVal Original_SUBTOTAL_12_FACTURA_VENTA As Decimal, ByVal Original_SUBTOTAL_0_FACTURA_VENTA As Decimal, ByVal Original_DESCUENTO_FACTURA_VENTA As Decimal, ByVal Original_SUBTOTAL_FACTURA_VENTA As Decimal, ByVal Original_PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer), ByVal Original_IVA_FACTURA_VENTA As Decimal, ByVal Original_TOTAL_FACTURA_VENTA As Decimal, ByVal Original_ESTADO_FACTURA_VENTA As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_FACTURA_VENTA,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ID_EMPRESA_GENERAL,Integer)
            If (Original_NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FECHA_EMISION_FACTURA_VENTA,Date)
            If (Original_GUIA_REMISION_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GUIA_REMISION_FACTURA_VENTA")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_GUIA_REMISION_FACTURA_VENTA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SUBTOTAL_12_FACTURA_VENTA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_SUBTOTAL_0_FACTURA_VENTA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DESCUENTO_FACTURA_VENTA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_SUBTOTAL_FACTURA_VENTA,Decimal)
            If (Original_PORCENTAJE_IVA_FACTURA_VENTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PORCENTAJE_IVA_FACTURA_VENTA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_IVA_FACTURA_VENTA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_TOTAL_FACTURA_VENTA,Decimal)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ESTADO_FACTURA_VENTA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_FACTURA_VENTA As Long,  _
                    ByVal ID_EMPRESA_GENERAL As Integer,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal TIPO_PAGO_FACTURA_VENTA As String,  _
                    ByVal CONCEPTO_FACTURA_VENTA As String,  _
                    ByVal OBSERVACIONES_FACTURA_VENTA As String,  _
                    ByVal SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer),  _
                    ByVal IVA_FACTURA_VENTA As Decimal,  _
                    ByVal TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal ESTADO_FACTURA_VENTA As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_FACTURA_VENTA,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ID_EMPRESA_GENERAL,Integer)
            If (NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_EMISION_FACTURA_VENTA,Date)
            If (GUIA_REMISION_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GUIA_REMISION_FACTURA_VENTA")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(GUIA_REMISION_FACTURA_VENTA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (TIPO_PAGO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PAGO_FACTURA_VENTA")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TIPO_PAGO_FACTURA_VENTA,String)
            End If
            If (CONCEPTO_FACTURA_VENTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CONCEPTO_FACTURA_VENTA,String)
            End If
            If (OBSERVACIONES_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_FACTURA_VENTA")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(OBSERVACIONES_FACTURA_VENTA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(SUBTOTAL_12_FACTURA_VENTA,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(SUBTOTAL_0_FACTURA_VENTA,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(DESCUENTO_FACTURA_VENTA,Decimal)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(SUBTOTAL_FACTURA_VENTA,Decimal)
            If (PORCENTAJE_IVA_FACTURA_VENTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PORCENTAJE_IVA_FACTURA_VENTA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(IVA_FACTURA_VENTA,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(TOTAL_FACTURA_VENTA,Decimal)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(ESTADO_FACTURA_VENTA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_FACTURA_VENTA As Long,  _
                    ByVal ID_EMPRESA_GENERAL As Integer,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal TIPO_PAGO_FACTURA_VENTA As String,  _
                    ByVal CONCEPTO_FACTURA_VENTA As String,  _
                    ByVal OBSERVACIONES_FACTURA_VENTA As String,  _
                    ByVal SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer),  _
                    ByVal IVA_FACTURA_VENTA As Decimal,  _
                    ByVal TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal ESTADO_FACTURA_VENTA As Integer,  _
                    ByVal Original_ID_FACTURA_VENTA As Long,  _
                    ByVal Original_ID_EMPRESA_GENERAL As Integer,  _
                    ByVal Original_NUMERO_FACTURA_VENTA As String,  _
                    ByVal Original_FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal Original_GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal Original_SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal Original_DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal Original_SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal Original_PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IVA_FACTURA_VENTA As Decimal,  _
                    ByVal Original_TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal Original_ESTADO_FACTURA_VENTA As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_FACTURA_VENTA,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ID_EMPRESA_GENERAL,Integer)
            If (NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_EMISION_FACTURA_VENTA,Date)
            If (GUIA_REMISION_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GUIA_REMISION_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(GUIA_REMISION_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (TIPO_PAGO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TIPO_PAGO_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TIPO_PAGO_FACTURA_VENTA,String)
            End If
            If (CONCEPTO_FACTURA_VENTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CONCEPTO_FACTURA_VENTA,String)
            End If
            If (OBSERVACIONES_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OBSERVACIONES_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(OBSERVACIONES_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SUBTOTAL_12_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SUBTOTAL_0_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DESCUENTO_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SUBTOTAL_FACTURA_VENTA,Decimal)
            If (PORCENTAJE_IVA_FACTURA_VENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PORCENTAJE_IVA_FACTURA_VENTA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(IVA_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(TOTAL_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ESTADO_FACTURA_VENTA,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID_FACTURA_VENTA,Long)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_EMPRESA_GENERAL,Integer)
            If (Original_NUMERO_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMERO_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_NUMERO_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_FECHA_EMISION_FACTURA_VENTA,Date)
            If (Original_GUIA_REMISION_FACTURA_VENTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GUIA_REMISION_FACTURA_VENTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_GUIA_REMISION_FACTURA_VENTA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_SUBTOTAL_12_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_SUBTOTAL_0_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_DESCUENTO_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_SUBTOTAL_FACTURA_VENTA,Decimal)
            If (Original_PORCENTAJE_IVA_FACTURA_VENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_PORCENTAJE_IVA_FACTURA_VENTA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_IVA_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_TOTAL_FACTURA_VENTA,Decimal)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ESTADO_FACTURA_VENTA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_EMPRESA_GENERAL As Integer,  _
                    ByVal NUMERO_FACTURA_VENTA As String,  _
                    ByVal FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal TIPO_PAGO_FACTURA_VENTA As String,  _
                    ByVal CONCEPTO_FACTURA_VENTA As String,  _
                    ByVal OBSERVACIONES_FACTURA_VENTA As String,  _
                    ByVal SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer),  _
                    ByVal IVA_FACTURA_VENTA As Decimal,  _
                    ByVal TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal ESTADO_FACTURA_VENTA As Integer,  _
                    ByVal Original_ID_FACTURA_VENTA As Long,  _
                    ByVal Original_ID_EMPRESA_GENERAL As Integer,  _
                    ByVal Original_NUMERO_FACTURA_VENTA As String,  _
                    ByVal Original_FECHA_EMISION_FACTURA_VENTA As Date,  _
                    ByVal Original_GUIA_REMISION_FACTURA_VENTA As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_SUBTOTAL_12_FACTURA_VENTA As Decimal,  _
                    ByVal Original_SUBTOTAL_0_FACTURA_VENTA As Decimal,  _
                    ByVal Original_DESCUENTO_FACTURA_VENTA As Decimal,  _
                    ByVal Original_SUBTOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal Original_PORCENTAJE_IVA_FACTURA_VENTA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IVA_FACTURA_VENTA As Decimal,  _
                    ByVal Original_TOTAL_FACTURA_VENTA As Decimal,  _
                    ByVal Original_ESTADO_FACTURA_VENTA As Integer) As Integer
            Return Me.Update(Original_ID_FACTURA_VENTA, ID_EMPRESA_GENERAL, NUMERO_FACTURA_VENTA, FECHA_EMISION_FACTURA_VENTA, GUIA_REMISION_FACTURA_VENTA, ID_CLIENTE_GENERAL, TIPO_PAGO_FACTURA_VENTA, CONCEPTO_FACTURA_VENTA, OBSERVACIONES_FACTURA_VENTA, SUBTOTAL_12_FACTURA_VENTA, SUBTOTAL_0_FACTURA_VENTA, DESCUENTO_FACTURA_VENTA, SUBTOTAL_FACTURA_VENTA, PORCENTAJE_IVA_FACTURA_VENTA, IVA_FACTURA_VENTA, TOTAL_FACTURA_VENTA, ESTADO_FACTURA_VENTA, Original_ID_FACTURA_VENTA, Original_ID_EMPRESA_GENERAL, Original_NUMERO_FACTURA_VENTA, Original_FECHA_EMISION_FACTURA_VENTA, Original_GUIA_REMISION_FACTURA_VENTA, Original_ID_CLIENTE_GENERAL, Original_SUBTOTAL_12_FACTURA_VENTA, Original_SUBTOTAL_0_FACTURA_VENTA, Original_DESCUENTO_FACTURA_VENTA, Original_SUBTOTAL_FACTURA_VENTA, Original_PORCENTAJE_IVA_FACTURA_VENTA, Original_IVA_FACTURA_VENTA, Original_TOTAL_FACTURA_VENTA, Original_ESTADO_FACTURA_VENTA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CLIENTE_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CLIENTE_GENERAL"
            tableMapping.ColumnMappings.Add("ID_CLIENTE_GENERAL", "ID_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CODIGO_CLIENTE_GENERAL", "CODIGO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_IDENTIFICACION_CLIENTE_GENERAL", "TIPO_IDENTIFICACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("RUC_CI_CLIENTE_GENERAL", "RUC_CI_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL")
            tableMapping.ColumnMappings.Add("NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("DIRECCION_UBICACION_CLIENTE_GENERAL", "DIRECCION_UBICACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("DIRECCION_FACTURACION_CLIENTE_GENERAL", "DIRECCION_FACTURACION_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CONSORCIO_CLIENTE_GENERAL", "CONSORCIO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("ID_CIUDAD", "ID_CIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO_1_CLIENTE_GENERAL", "TELEFONO_1_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TELEFONO_2_CLIENTE_GENERAL", "TELEFONO_2_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("EMAIL_CLIENTE_GENERAL", "EMAIL_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("CONTACTO_CLIENTE_GENERAL", "CONTACTO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("FECHA_INGRESO_CLIENTE_GENERAL", "FECHA_INGRESO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("TIPO_CLIENTE_GENERAL", "TIPO_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("OBSERVACIONES_CLIENTE_GENERAL", "OBSERVACIONES_CLIENTE_GENERAL")
            tableMapping.ColumnMappings.Add("ESTADO_CLIENTE_GENERAL", "ESTADO_CLIENTE_GENERAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CLIENTE_GENERAL] WHERE (([ID_CLIENTE_GENERAL] = @Original_ID_C"& _ 
                "LIENTE_GENERAL) AND ((@IsNull_CODIGO_CLIENTE_GENERAL = 1 AND [CODIGO_CLIENTE_GEN"& _ 
                "ERAL] IS NULL) OR ([CODIGO_CLIENTE_GENERAL] = @Original_CODIGO_CLIENTE_GENERAL))"& _ 
                " AND ((@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL = 1 AND [TIPO_IDENTIFICACION_"& _ 
                "CLIENTE_GENERAL] IS NULL) OR ([TIPO_IDENTIFICACION_CLIENTE_GENERAL] = @Original_"& _ 
                "TIPO_IDENTIFICACION_CLIENTE_GENERAL)) AND ((@IsNull_RUC_CI_CLIENTE_GENERAL = 1 A"& _ 
                "ND [RUC_CI_CLIENTE_GENERAL] IS NULL) OR ([RUC_CI_CLIENTE_GENERAL] = @Original_RU"& _ 
                "C_CI_CLIENTE_GENERAL)) AND ((@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = 1 A"& _ 
                "ND [NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] IS NULL) OR ([NRO_RES_CONT_ESPECIAL_C"& _ 
                "LIENTE_GENERAL] = @Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL)) AND ((@IsNul"& _ 
                "l_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL = 1 AND [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] "& _ 
                "IS NULL) OR ([OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] = @Original_OBLIG_LLEVAR_CONT_C"& _ 
                "LIENTE_GENERAL)) AND ((@IsNull_ID_CIUDAD = 1 AND [ID_CIUDAD] IS NULL) OR ([ID_CI"& _ 
                "UDAD] = @Original_ID_CIUDAD)) AND ((@IsNull_TELEFONO_1_CLIENTE_GENERAL = 1 AND ["& _ 
                "TELEFONO_1_CLIENTE_GENERAL] IS NULL) OR ([TELEFONO_1_CLIENTE_GENERAL] = @Origina"& _ 
                "l_TELEFONO_1_CLIENTE_GENERAL)) AND ((@IsNull_TELEFONO_2_CLIENTE_GENERAL = 1 AND "& _ 
                "[TELEFONO_2_CLIENTE_GENERAL] IS NULL) OR ([TELEFONO_2_CLIENTE_GENERAL] = @Origin"& _ 
                "al_TELEFONO_2_CLIENTE_GENERAL)) AND ((@IsNull_FECHA_INGRESO_CLIENTE_GENERAL = 1 "& _ 
                "AND [FECHA_INGRESO_CLIENTE_GENERAL] IS NULL) OR ([FECHA_INGRESO_CLIENTE_GENERAL]"& _ 
                " = @Original_FECHA_INGRESO_CLIENTE_GENERAL)) AND ((@IsNull_TIPO_CLIENTE_GENERAL "& _ 
                "= 1 AND [TIPO_CLIENTE_GENERAL] IS NULL) OR ([TIPO_CLIENTE_GENERAL] = @Original_T"& _ 
                "IPO_CLIENTE_GENERAL)) AND ((@IsNull_ESTADO_CLIENTE_GENERAL = 1 AND [ESTADO_CLIEN"& _ 
                "TE_GENERAL] IS NULL) OR ([ESTADO_CLIENTE_GENERAL] = @Original_ESTADO_CLIENTE_GEN"& _ 
                "ERAL)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CLIENTE_GENERAL] ([ID_CLIENTE_GENERAL], [CODIGO_CLIENTE_GENERA"& _ 
                "L], [TIPO_IDENTIFICACION_CLIENTE_GENERAL], [RUC_CI_CLIENTE_GENERAL], [NOMPRE_RAZ"& _ 
                "ON_SOCIAL_CLIENTE_GENERAL], [APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL], [NRO_RES"& _ 
                "_CONT_ESPECIAL_CLIENTE_GENERAL], [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL], [DIRECCION"& _ 
                "_UBICACION_CLIENTE_GENERAL], [DIRECCION_FACTURACION_CLIENTE_GENERAL], [CONSORCIO"& _ 
                "_CLIENTE_GENERAL], [ID_CIUDAD], [TELEFONO_1_CLIENTE_GENERAL], [TELEFONO_2_CLIENT"& _ 
                "E_GENERAL], [EMAIL_CLIENTE_GENERAL], [CONTACTO_CLIENTE_GENERAL], [FECHA_INGRESO_"& _ 
                "CLIENTE_GENERAL], [TIPO_CLIENTE_GENERAL], [OBSERVACIONES_CLIENTE_GENERAL], [ESTA"& _ 
                "DO_CLIENTE_GENERAL]) VALUES (@ID_CLIENTE_GENERAL, @CODIGO_CLIENTE_GENERAL, @TIPO"& _ 
                "_IDENTIFICACION_CLIENTE_GENERAL, @RUC_CI_CLIENTE_GENERAL, @NOMPRE_RAZON_SOCIAL_C"& _ 
                "LIENTE_GENERAL, @APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, @NRO_RES_CONT_ESPECIA"& _ 
                "L_CLIENTE_GENERAL, @OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, @DIRECCION_UBICACION_CLIE"& _ 
                "NTE_GENERAL, @DIRECCION_FACTURACION_CLIENTE_GENERAL, @CONSORCIO_CLIENTE_GENERAL,"& _ 
                " @ID_CIUDAD, @TELEFONO_1_CLIENTE_GENERAL, @TELEFONO_2_CLIENTE_GENERAL, @EMAIL_CL"& _ 
                "IENTE_GENERAL, @CONTACTO_CLIENTE_GENERAL, @FECHA_INGRESO_CLIENTE_GENERAL, @TIPO_"& _ 
                "CLIENTE_GENERAL, @OBSERVACIONES_CLIENTE_GENERAL, @ESTADO_CLIENTE_GENERAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENER"& _ 
                "AL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE"& _ 
                "_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_C"& _ 
                "ONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_"& _ 
                "CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERA"& _ 
                "L, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, "& _ 
                "FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENER"& _ 
                "AL, ESTADO_CLIENTE_GENERAL FROM CLIENTE_GENERAL WHERE (ID_CLIENTE_GENERAL = @ID_"& _ 
                "CLIENTE_GENERAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONSORCIO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONSORCIO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CLIENTE_GENERAL] SET [ID_CLIENTE_GENERAL] = @ID_CLIENTE_GENERAL, [C"& _ 
                "ODIGO_CLIENTE_GENERAL] = @CODIGO_CLIENTE_GENERAL, [TIPO_IDENTIFICACION_CLIENTE_G"& _ 
                "ENERAL] = @TIPO_IDENTIFICACION_CLIENTE_GENERAL, [RUC_CI_CLIENTE_GENERAL] = @RUC_"& _ 
                "CI_CLIENTE_GENERAL, [NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL] = @NOMPRE_RAZON_SOCIAL"& _ 
                "_CLIENTE_GENERAL, [APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL] = @APELLIDO_NOMBRE_"& _ 
                "COMERCIAL_CLIENTE_GENRAL, [NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] = @NRO_RES_CON"& _ 
                "T_ESPECIAL_CLIENTE_GENERAL, [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] = @OBLIG_LLEVAR_"& _ 
                "CONT_CLIENTE_GENERAL, [DIRECCION_UBICACION_CLIENTE_GENERAL] = @DIRECCION_UBICACI"& _ 
                "ON_CLIENTE_GENERAL, [DIRECCION_FACTURACION_CLIENTE_GENERAL] = @DIRECCION_FACTURA"& _ 
                "CION_CLIENTE_GENERAL, [CONSORCIO_CLIENTE_GENERAL] = @CONSORCIO_CLIENTE_GENERAL, "& _ 
                "[ID_CIUDAD] = @ID_CIUDAD, [TELEFONO_1_CLIENTE_GENERAL] = @TELEFONO_1_CLIENTE_GEN"& _ 
                "ERAL, [TELEFONO_2_CLIENTE_GENERAL] = @TELEFONO_2_CLIENTE_GENERAL, [EMAIL_CLIENTE"& _ 
                "_GENERAL] = @EMAIL_CLIENTE_GENERAL, [CONTACTO_CLIENTE_GENERAL] = @CONTACTO_CLIEN"& _ 
                "TE_GENERAL, [FECHA_INGRESO_CLIENTE_GENERAL] = @FECHA_INGRESO_CLIENTE_GENERAL, [T"& _ 
                "IPO_CLIENTE_GENERAL] = @TIPO_CLIENTE_GENERAL, [OBSERVACIONES_CLIENTE_GENERAL] = "& _ 
                "@OBSERVACIONES_CLIENTE_GENERAL, [ESTADO_CLIENTE_GENERAL] = @ESTADO_CLIENTE_GENER"& _ 
                "AL WHERE (([ID_CLIENTE_GENERAL] = @Original_ID_CLIENTE_GENERAL) AND ((@IsNull_CO"& _ 
                "DIGO_CLIENTE_GENERAL = 1 AND [CODIGO_CLIENTE_GENERAL] IS NULL) OR ([CODIGO_CLIEN"& _ 
                "TE_GENERAL] = @Original_CODIGO_CLIENTE_GENERAL)) AND ((@IsNull_TIPO_IDENTIFICACI"& _ 
                "ON_CLIENTE_GENERAL = 1 AND [TIPO_IDENTIFICACION_CLIENTE_GENERAL] IS NULL) OR ([T"& _ 
                "IPO_IDENTIFICACION_CLIENTE_GENERAL] = @Original_TIPO_IDENTIFICACION_CLIENTE_GENE"& _ 
                "RAL)) AND ((@IsNull_RUC_CI_CLIENTE_GENERAL = 1 AND [RUC_CI_CLIENTE_GENERAL] IS N"& _ 
                "ULL) OR ([RUC_CI_CLIENTE_GENERAL] = @Original_RUC_CI_CLIENTE_GENERAL)) AND ((@Is"& _ 
                "Null_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL = 1 AND [NRO_RES_CONT_ESPECIAL_CLIENT"& _ 
                "E_GENERAL] IS NULL) OR ([NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL] = @Original_NRO_"& _ 
                "RES_CONT_ESPECIAL_CLIENTE_GENERAL)) AND ((@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENE"& _ 
                "RAL = 1 AND [OBLIG_LLEVAR_CONT_CLIENTE_GENERAL] IS NULL) OR ([OBLIG_LLEVAR_CONT_"& _ 
                "CLIENTE_GENERAL] = @Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL)) AND ((@IsNull_I"& _ 
                "D_CIUDAD = 1 AND [ID_CIUDAD] IS NULL) OR ([ID_CIUDAD] = @Original_ID_CIUDAD)) AN"& _ 
                "D ((@IsNull_TELEFONO_1_CLIENTE_GENERAL = 1 AND [TELEFONO_1_CLIENTE_GENERAL] IS N"& _ 
                "ULL) OR ([TELEFONO_1_CLIENTE_GENERAL] = @Original_TELEFONO_1_CLIENTE_GENERAL)) A"& _ 
                "ND ((@IsNull_TELEFONO_2_CLIENTE_GENERAL = 1 AND [TELEFONO_2_CLIENTE_GENERAL] IS "& _ 
                "NULL) OR ([TELEFONO_2_CLIENTE_GENERAL] = @Original_TELEFONO_2_CLIENTE_GENERAL)) "& _ 
                "AND ((@IsNull_FECHA_INGRESO_CLIENTE_GENERAL = 1 AND [FECHA_INGRESO_CLIENTE_GENER"& _ 
                "AL] IS NULL) OR ([FECHA_INGRESO_CLIENTE_GENERAL] = @Original_FECHA_INGRESO_CLIEN"& _ 
                "TE_GENERAL)) AND ((@IsNull_TIPO_CLIENTE_GENERAL = 1 AND [TIPO_CLIENTE_GENERAL] I"& _ 
                "S NULL) OR ([TIPO_CLIENTE_GENERAL] = @Original_TIPO_CLIENTE_GENERAL)) AND ((@IsN"& _ 
                "ull_ESTADO_CLIENTE_GENERAL = 1 AND [ESTADO_CLIENTE_GENERAL] IS NULL) OR ([ESTADO"& _ 
                "_CLIENTE_GENERAL] = @Original_ESTADO_CLIENTE_GENERAL)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID_CLIENTE_GENE"& _ 
                "RAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE"& _ 
                "_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE"& _ 
                "_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERA"& _ 
                "L, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, C"& _ 
                "ONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIE"& _ 
                "NTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIE"& _ 
                "NTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE"& _ 
                "_GENERAL FROM CLIENTE_GENERAL WHERE (ID_CLIENTE_GENERAL = @ID_CLIENTE_GENERAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_UBICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION_FACTURACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONSORCIO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONSORCIO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACIONES_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CLIENTE_GENERAL", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_IDENTIFICACION_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RUC_CI_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RUC_CI_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBLIG_LLEVAR_CONT_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_CIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID_CIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_1_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO_2_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_INGRESO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO_CLIENTE_GENERAL", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO_CLIENTE_GENERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.syscisepro.My.MySettings.Default.SYSCISEPROConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GE"& _ 
                "NERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOM"& _ 
                "BRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVA"& _ 
                "R_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACI"& _ 
                "ON_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GEN"& _ 
                "ERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERA"& _ 
                "L, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GE"& _ 
                "NERAL, ESTADO_CLIENTE_GENERAL FROM dbo.CLIENTE_GENERAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSetReporteVentas.CLIENTE_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSetReporteVentas.CLIENTE_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSetReporteVentas.CLIENTE_GENERALDataTable = New DataSetReporteVentas.CLIENTE_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSetReporteVentas.CLIENTE_GENERALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSetReporteVentas) As Integer
            Return Me.Adapter.Update(dataSet, "CLIENTE_GENERAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID_CLIENTE_GENERAL As Long, ByVal Original_CODIGO_CLIENTE_GENERAL As String, ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String, ByVal Original_RUC_CI_CLIENTE_GENERAL As String, ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String, ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String, ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer), ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String, ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String, ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date), ByVal Original_TIPO_CLIENTE_GENERAL As String, ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_CLIENTE_GENERAL,String)
            End If
            If (Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (Original_RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (Original_ID_CIUDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (Original_TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (Original_FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_TIPO_CLIENTE_GENERAL,String)
            End If
            If (Original_ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_CLIENTE_GENERAL,String)
            End If
            If (TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL,String)
            End If
            If (APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL,String)
            End If
            If (NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_UBICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DIRECCION_UBICACION_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_FACTURACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DIRECCION_FACTURACION_CLIENTE_GENERAL,String)
            End If
            If (CONSORCIO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CONSORCIO_CLIENTE_GENERAL,String)
            End If
            If (ID_CIUDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (EMAIL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(EMAIL_CLIENTE_GENERAL,String)
            End If
            If (CONTACTO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CONTACTO_CLIENTE_GENERAL,String)
            End If
            If (FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TIPO_CLIENTE_GENERAL,String)
            End If
            If (OBSERVACIONES_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(OBSERVACIONES_CLIENTE_GENERAL,String)
            End If
            If (ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID_CLIENTE_GENERAL As Long,  _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal Original_RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIPO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID_CLIENTE_GENERAL,Long)
            If (CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_CLIENTE_GENERAL,String)
            End If
            If (TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL,String)
            End If
            If (APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL,String)
            End If
            If (NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_UBICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DIRECCION_UBICACION_CLIENTE_GENERAL,String)
            End If
            If (DIRECCION_FACTURACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DIRECCION_FACTURACION_CLIENTE_GENERAL,String)
            End If
            If (CONSORCIO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CONSORCIO_CLIENTE_GENERAL,String)
            End If
            If (ID_CIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (EMAIL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EMAIL_CLIENTE_GENERAL,String)
            End If
            If (CONTACTO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CONTACTO_CLIENTE_GENERAL,String)
            End If
            If (FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(TIPO_CLIENTE_GENERAL,String)
            End If
            If (OBSERVACIONES_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(OBSERVACIONES_CLIENTE_GENERAL,String)
            End If
            If (ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ESTADO_CLIENTE_GENERAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ID_CLIENTE_GENERAL,Long)
            If (Original_CODIGO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODIGO_CLIENTE_GENERAL,String)
            End If
            If (Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL,String)
            End If
            If (Original_RUC_CI_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_RUC_CI_CLIENTE_GENERAL,String)
            End If
            If (Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL,String)
            End If
            If (Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL,String)
            End If
            If (Original_ID_CIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_ID_CIUDAD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_TELEFONO_1_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_TELEFONO_1_CLIENTE_GENERAL,String)
            End If
            If (Original_TELEFONO_2_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_TELEFONO_2_CLIENTE_GENERAL,String)
            End If
            If (Original_FECHA_INGRESO_CLIENTE_GENERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_FECHA_INGRESO_CLIENTE_GENERAL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_TIPO_CLIENTE_GENERAL,String)
            End If
            If (Original_ESTADO_CLIENTE_GENERAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ESTADO_CLIENTE_GENERAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL As String,  _
                    ByVal APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL As String,  _
                    ByVal NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_UBICACION_CLIENTE_GENERAL As String,  _
                    ByVal DIRECCION_FACTURACION_CLIENTE_GENERAL As String,  _
                    ByVal CONSORCIO_CLIENTE_GENERAL As String,  _
                    ByVal ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal EMAIL_CLIENTE_GENERAL As String,  _
                    ByVal CONTACTO_CLIENTE_GENERAL As String,  _
                    ByVal FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal TIPO_CLIENTE_GENERAL As String,  _
                    ByVal OBSERVACIONES_CLIENTE_GENERAL As String,  _
                    ByVal ESTADO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CLIENTE_GENERAL As Long,  _
                    ByVal Original_CODIGO_CLIENTE_GENERAL As String,  _
                    ByVal Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL As String,  _
                    ByVal Original_RUC_CI_CLIENTE_GENERAL As String,  _
                    ByVal Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL As String,  _
                    ByVal Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL As String,  _
                    ByVal Original_ID_CIUDAD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TELEFONO_1_CLIENTE_GENERAL As String,  _
                    ByVal Original_TELEFONO_2_CLIENTE_GENERAL As String,  _
                    ByVal Original_FECHA_INGRESO_CLIENTE_GENERAL As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIPO_CLIENTE_GENERAL As String,  _
                    ByVal Original_ESTADO_CLIENTE_GENERAL As String) As Integer
            Return Me.Update(Original_ID_CLIENTE_GENERAL, CODIGO_CLIENTE_GENERAL, TIPO_IDENTIFICACION_CLIENTE_GENERAL, RUC_CI_CLIENTE_GENERAL, NOMPRE_RAZON_SOCIAL_CLIENTE_GENERAL, APELLIDO_NOMBRE_COMERCIAL_CLIENTE_GENRAL, NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, DIRECCION_UBICACION_CLIENTE_GENERAL, DIRECCION_FACTURACION_CLIENTE_GENERAL, CONSORCIO_CLIENTE_GENERAL, ID_CIUDAD, TELEFONO_1_CLIENTE_GENERAL, TELEFONO_2_CLIENTE_GENERAL, EMAIL_CLIENTE_GENERAL, CONTACTO_CLIENTE_GENERAL, FECHA_INGRESO_CLIENTE_GENERAL, TIPO_CLIENTE_GENERAL, OBSERVACIONES_CLIENTE_GENERAL, ESTADO_CLIENTE_GENERAL, Original_ID_CLIENTE_GENERAL, Original_CODIGO_CLIENTE_GENERAL, Original_TIPO_IDENTIFICACION_CLIENTE_GENERAL, Original_RUC_CI_CLIENTE_GENERAL, Original_NRO_RES_CONT_ESPECIAL_CLIENTE_GENERAL, Original_OBLIG_LLEVAR_CONT_CLIENTE_GENERAL, Original_ID_CIUDAD, Original_TELEFONO_1_CLIENTE_GENERAL, Original_TELEFONO_2_CLIENTE_GENERAL, Original_FECHA_INGRESO_CLIENTE_GENERAL, Original_TIPO_CLIENTE_GENERAL, Original_ESTADO_CLIENTE_GENERAL)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _fACTURA_VENTATableAdapter As FACTURA_VENTATableAdapter
        
        Private _cLIENTE_GENERALTableAdapter As CLIENTE_GENERALTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property FACTURA_VENTATableAdapter() As FACTURA_VENTATableAdapter
            Get
                Return Me._fACTURA_VENTATableAdapter
            End Get
            Set
                Me._fACTURA_VENTATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CLIENTE_GENERALTableAdapter() As CLIENTE_GENERALTableAdapter
            Get
                Return Me._cLIENTE_GENERALTableAdapter
            End Get
            Set
                Me._cLIENTE_GENERALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._fACTURA_VENTATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._fACTURA_VENTATableAdapter.Connection) Is Nothing)) Then
                    Return Me._fACTURA_VENTATableAdapter.Connection
                End If
                If ((Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cLIENTE_GENERALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cLIENTE_GENERALTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSetReporteVentas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.FACTURA_VENTA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._fACTURA_VENTATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSetReporteVentas, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.FACTURA_VENTA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._fACTURA_VENTATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSetReporteVentas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.FACTURA_VENTA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._fACTURA_VENTATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CLIENTE_GENERAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cLIENTE_GENERALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSetReporteVentas) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._fACTURA_VENTATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._fACTURA_VENTATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cLIENTE_GENERALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._fACTURA_VENTATableAdapter, Me._fACTURA_VENTATableAdapter.Connection)
                    Me._fACTURA_VENTATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._fACTURA_VENTATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._fACTURA_VENTATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._fACTURA_VENTATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._fACTURA_VENTATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cLIENTE_GENERALTableAdapter, Me._cLIENTE_GENERALTableAdapter.Connection)
                    Me._cLIENTE_GENERALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENTE_GENERALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cLIENTE_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cLIENTE_GENERALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cLIENTE_GENERALTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._fACTURA_VENTATableAdapter) Is Nothing) Then
                    Me._fACTURA_VENTATableAdapter.Connection = CType(revertConnections(Me._fACTURA_VENTATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._fACTURA_VENTATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cLIENTE_GENERALTableAdapter) Is Nothing) Then
                    Me._cLIENTE_GENERALTableAdapter.Connection = CType(revertConnections(Me._cLIENTE_GENERALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENTE_GENERALTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
